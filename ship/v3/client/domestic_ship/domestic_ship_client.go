// Code generated by go-swagger; DO NOT EDIT.

package domestic_ship

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new domestic ship API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for domestic ship API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	ShipDomesticAlert(params *ShipDomesticAlertParams, opts ...ClientOption) (*ShipDomesticAlertOK, *ShipDomesticAlertStatus299, error)

	ShipDomesticDailySchedule(params *ShipDomesticDailyScheduleParams, opts ...ClientOption) (*ShipDomesticDailyScheduleOK, *ShipDomesticDailyScheduleStatus299, error)

	ShipDomesticDailySchedule1(params *ShipDomesticDailySchedule1Params, opts ...ClientOption) (*ShipDomesticDailySchedule1OK, *ShipDomesticDailySchedule1Status299, error)

	ShipDomesticNews(params *ShipDomesticNewsParams, opts ...ClientOption) (*ShipDomesticNewsOK, *ShipDomesticNewsStatus299, error)

	ShipDomesticOperator(params *ShipDomesticOperatorParams, opts ...ClientOption) (*ShipDomesticOperatorOK, *ShipDomesticOperatorStatus299, error)

	ShipDomesticRoute(params *ShipDomesticRouteParams, opts ...ClientOption) (*ShipDomesticRouteOK, *ShipDomesticRouteStatus299, error)

	ShipDomesticSpecificSchedule(params *ShipDomesticSpecificScheduleParams, opts ...ClientOption) (*ShipDomesticSpecificScheduleOK, *ShipDomesticSpecificScheduleStatus299, error)

	ShipDomesticSpecificSchedule1(params *ShipDomesticSpecificSchedule1Params, opts ...ClientOption) (*ShipDomesticSpecificSchedule1OK, *ShipDomesticSpecificSchedule1Status299, error)

	ShipDomesticStopOfRoute(params *ShipDomesticStopOfRouteParams, opts ...ClientOption) (*ShipDomesticStopOfRouteOK, *ShipDomesticStopOfRouteStatus299, error)

	ShipDomesticVessel(params *ShipDomesticVesselParams, opts ...ClientOption) (*ShipDomesticVesselOK, *ShipDomesticVesselStatus299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  ShipDomesticAlert 取得指定s 縣市 之營運通阻資料
*/
func (a *Client) ShipDomesticAlert(params *ShipDomesticAlertParams, opts ...ClientOption) (*ShipDomesticAlertOK, *ShipDomesticAlertStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticAlertParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_Alert",
		Method:             "GET",
		PathPattern:        "/v3/Ship/Alert/Domestic/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticAlertReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticAlertOK:
		return value, nil, nil
	case *ShipDomesticAlertStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ShipDomesticDailySchedule 取得指定s 縣市 之每日班表資料
*/
func (a *Client) ShipDomesticDailySchedule(params *ShipDomesticDailyScheduleParams, opts ...ClientOption) (*ShipDomesticDailyScheduleOK, *ShipDomesticDailyScheduleStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticDailyScheduleParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_DailySchedule",
		Method:             "GET",
		PathPattern:        "/v3/Ship/DailySchedule/Domestic/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticDailyScheduleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticDailyScheduleOK:
		return value, nil, nil
	case *ShipDomesticDailyScheduleStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ShipDomesticDailySchedule1 取得指定s 縣市 航線 之每日班表資料
*/
func (a *Client) ShipDomesticDailySchedule1(params *ShipDomesticDailySchedule1Params, opts ...ClientOption) (*ShipDomesticDailySchedule1OK, *ShipDomesticDailySchedule1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticDailySchedule1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_DailySchedule_1",
		Method:             "GET",
		PathPattern:        "/v3/Ship/DailySchedule/Domestic/City/{City}/{RouteID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticDailySchedule1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticDailySchedule1OK:
		return value, nil, nil
	case *ShipDomesticDailySchedule1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ShipDomesticNews 取得指定s 縣市 之最新消息資料
*/
func (a *Client) ShipDomesticNews(params *ShipDomesticNewsParams, opts ...ClientOption) (*ShipDomesticNewsOK, *ShipDomesticNewsStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticNewsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_News",
		Method:             "GET",
		PathPattern:        "/v3/Ship/News/Domestic/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticNewsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticNewsOK:
		return value, nil, nil
	case *ShipDomesticNewsStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ShipDomesticOperator 取得指定s 縣市 之航運營運業者資料
*/
func (a *Client) ShipDomesticOperator(params *ShipDomesticOperatorParams, opts ...ClientOption) (*ShipDomesticOperatorOK, *ShipDomesticOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_Operator",
		Method:             "GET",
		PathPattern:        "/v3/Ship/Operator/Domestic/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticOperatorOK:
		return value, nil, nil
	case *ShipDomesticOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ShipDomesticRoute 取得指定s 縣市 之航線資料
*/
func (a *Client) ShipDomesticRoute(params *ShipDomesticRouteParams, opts ...ClientOption) (*ShipDomesticRouteOK, *ShipDomesticRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticRouteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_Route",
		Method:             "GET",
		PathPattern:        "/v3/Ship/Route/Domestic/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticRouteOK:
		return value, nil, nil
	case *ShipDomesticRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ShipDomesticSpecificSchedule 取得指定s 縣市 之特殊班表資料
*/
func (a *Client) ShipDomesticSpecificSchedule(params *ShipDomesticSpecificScheduleParams, opts ...ClientOption) (*ShipDomesticSpecificScheduleOK, *ShipDomesticSpecificScheduleStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticSpecificScheduleParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_SpecificSchedule",
		Method:             "GET",
		PathPattern:        "/v3/Ship/SpecificSchedule/Domestic/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticSpecificScheduleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticSpecificScheduleOK:
		return value, nil, nil
	case *ShipDomesticSpecificScheduleStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ShipDomesticSpecificSchedule1 取得指定s 縣市 航線 之特殊班表資料
*/
func (a *Client) ShipDomesticSpecificSchedule1(params *ShipDomesticSpecificSchedule1Params, opts ...ClientOption) (*ShipDomesticSpecificSchedule1OK, *ShipDomesticSpecificSchedule1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticSpecificSchedule1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_SpecificSchedule_1",
		Method:             "GET",
		PathPattern:        "/v3/Ship/SpecificSchedule/Domestic/City/{City}/{RouteID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticSpecificSchedule1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticSpecificSchedule1OK:
		return value, nil, nil
	case *ShipDomesticSpecificSchedule1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ShipDomesticStopOfRoute 取得指定s 縣市 之航線靠港順序資料
*/
func (a *Client) ShipDomesticStopOfRoute(params *ShipDomesticStopOfRouteParams, opts ...ClientOption) (*ShipDomesticStopOfRouteOK, *ShipDomesticStopOfRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticStopOfRouteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_StopOfRoute",
		Method:             "GET",
		PathPattern:        "/v3/Ship/StopOfRoute/Domestic/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticStopOfRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticStopOfRouteOK:
		return value, nil, nil
	case *ShipDomesticStopOfRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ShipDomesticVessel 取得指定s 縣市 之船舶資料
*/
func (a *Client) ShipDomesticVessel(params *ShipDomesticVesselParams, opts ...ClientOption) (*ShipDomesticVesselOK, *ShipDomesticVesselStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewShipDomesticVesselParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Ship_Domestic_Vessel",
		Method:             "GET",
		PathPattern:        "/v3/Ship/Vessel/Domestic/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShipDomesticVesselReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ShipDomesticVesselOK:
		return value, nil, nil
	case *ShipDomesticVesselStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for domestic_ship: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
