// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOShipSpecificationV3Fare Fare
//
// swagger:model PTX.Service.DTO.Ship.Specification.V3.Fare
type PTXServiceDTOShipSpecificationV3Fare struct {

	// String
	//
	// 艙等
	CabinClass string `json:"CabinClass,omitempty" xml:"CabinClass,omitempty"`

	// Int32
	//
	// 費率等級 : [1:'成人',2:'學生',3:'孩童',4:'敬老',5:'愛心',6:'愛心孩童',7:'愛心優待或愛心陪伴',8:'團體',9:'軍警']
	// Required: true
	FareClass *int64 `json:"FareClass"`

	// String
	//
	// 票價名稱
	// Required: true
	FareName *string `json:"FareName" xml:"FareName"`

	// Int32
	//
	// 計費價格
	// Required: true
	Price *int32 `json:"Price"`

	// Int32
	//
	// 票種類型 : [1:'一般票',2:'來回票',3:'電子票證',4:'回數票']
	// Required: true
	TicketType *int64 `json:"TicketType"`
}

// Validate validates this p t x service d t o ship specification v3 fare
func (m *PTXServiceDTOShipSpecificationV3Fare) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFareClass(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFareName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTicketType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOShipSpecificationV3Fare) validateFareClass(formats strfmt.Registry) error {

	if err := validate.Required("FareClass", "body", m.FareClass); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOShipSpecificationV3Fare) validateFareName(formats strfmt.Registry) error {

	if err := validate.Required("FareName", "body", m.FareName); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOShipSpecificationV3Fare) validatePrice(formats strfmt.Registry) error {

	if err := validate.Required("Price", "body", m.Price); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOShipSpecificationV3Fare) validateTicketType(formats strfmt.Registry) error {

	if err := validate.Required("TicketType", "body", m.TicketType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this p t x service d t o ship specification v3 fare based on context it is used
func (m *PTXServiceDTOShipSpecificationV3Fare) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOShipSpecificationV3Fare) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOShipSpecificationV3Fare) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOShipSpecificationV3Fare
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
