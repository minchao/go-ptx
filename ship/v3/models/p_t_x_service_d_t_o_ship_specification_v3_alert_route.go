// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PTXServiceDTOShipSpecificationV3AlertRoute AlertRoute
//
// swagger:model PTX.Service.DTO.Ship.Specification.V3.AlertRoute
type PTXServiceDTOShipSpecificationV3AlertRoute struct {

	// String
	//
	// 航線代碼
	RouteID string `json:"RouteID,omitempty" xml:"String,omitempty"`

	// NameType
	//
	// 航線名稱
	RouteName struct {
		PTXServiceDTOSharedSpecificationV3BaseNameType
	} `json:"RouteName,omitempty" xml:"NameType,omitempty"`
}

// Validate validates this p t x service d t o ship specification v3 alert route
func (m *PTXServiceDTOShipSpecificationV3AlertRoute) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRouteName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOShipSpecificationV3AlertRoute) validateRouteName(formats strfmt.Registry) error {
	if swag.IsZero(m.RouteName) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this p t x service d t o ship specification v3 alert route based on the context it is used
func (m *PTXServiceDTOShipSpecificationV3AlertRoute) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRouteName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOShipSpecificationV3AlertRoute) contextValidateRouteName(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOShipSpecificationV3AlertRoute) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOShipSpecificationV3AlertRoute) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOShipSpecificationV3AlertRoute
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
