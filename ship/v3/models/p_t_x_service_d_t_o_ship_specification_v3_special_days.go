// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PTXServiceDTOShipSpecificationV3SpecialDays SpecialDays
//
// swagger:model PTX.Service.DTO.Ship.Specification.V3.SpecialDays
type PTXServiceDTOShipSpecificationV3SpecialDays struct {

	// DatePeriod
	//
	// 連續特殊日期
	DatePeriod struct {
		PTXServiceDTOShipSpecificationV3DatePeriod
	} `json:"DatePeriod,omitempty" xml:"DatePeriod,omitempty"`

	// Dates
	//
	// 不連續特殊日期
	Dates struct {
		PTXServiceDTOShipSpecificationV3Dates
	} `json:"Dates,omitempty" xml:"Dates,omitempty"`

	// String
	//
	// 特殊營運描述
	Description string `json:"Description,omitempty" xml:"Description,omitempty"`

	// String
	//
	// 營運服務狀態代碼: [0:'停止營運',1:'正常營運',2:'加班營運']
	ServiceStatus string `json:"ServiceStatus,omitempty" xml:"ServiceStatus,omitempty"`
}

// Validate validates this p t x service d t o ship specification v3 special days
func (m *PTXServiceDTOShipSpecificationV3SpecialDays) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDatePeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDates(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOShipSpecificationV3SpecialDays) validateDatePeriod(formats strfmt.Registry) error {
	if swag.IsZero(m.DatePeriod) { // not required
		return nil
	}

	return nil
}

func (m *PTXServiceDTOShipSpecificationV3SpecialDays) validateDates(formats strfmt.Registry) error {
	if swag.IsZero(m.Dates) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this p t x service d t o ship specification v3 special days based on the context it is used
func (m *PTXServiceDTOShipSpecificationV3SpecialDays) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDatePeriod(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateDates(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOShipSpecificationV3SpecialDays) contextValidateDatePeriod(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOShipSpecificationV3SpecialDays) contextValidateDates(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOShipSpecificationV3SpecialDays) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOShipSpecificationV3SpecialDays) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOShipSpecificationV3SpecialDays
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
