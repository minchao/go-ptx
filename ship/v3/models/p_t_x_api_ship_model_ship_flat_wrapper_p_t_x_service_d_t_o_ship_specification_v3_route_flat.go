// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PTXAPIShipModelShipFlatWrapperPTXServiceDTOShipSpecificationV3RouteFlat ShipRouteFlatList
//
// swagger:model PTX.API.Ship.Model.ShipFlatWrapper[PTX.Service.DTO.Ship.Specification.V3.RouteFlat]
type PTXAPIShipModelShipFlatWrapperPTXServiceDTOShipSpecificationV3RouteFlat struct {

	// 資料總筆數<span class="emphasis fas fa-pen" rel="與來源Inbound XML不同，為提供資料的總筆數[該欄位由本平台自動產製]"></span>
	Count int64 `json:"Count,omitempty"`

	// Array
	//
	// 資料(陣列)
	RouteFlats []*PTXServiceDTOShipSpecificationV3RouteFlat "json:\"RouteFlats\" xml:\"List`1\""
}

// Validate validates this p t x API ship model ship flat wrapper p t x service d t o ship specification v3 route flat
func (m *PTXAPIShipModelShipFlatWrapperPTXServiceDTOShipSpecificationV3RouteFlat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRouteFlats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXAPIShipModelShipFlatWrapperPTXServiceDTOShipSpecificationV3RouteFlat) validateRouteFlats(formats strfmt.Registry) error {
	if swag.IsZero(m.RouteFlats) { // not required
		return nil
	}

	for i := 0; i < len(m.RouteFlats); i++ {
		if swag.IsZero(m.RouteFlats[i]) { // not required
			continue
		}

		if m.RouteFlats[i] != nil {
			if err := m.RouteFlats[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("RouteFlats" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this p t x API ship model ship flat wrapper p t x service d t o ship specification v3 route flat based on the context it is used
func (m *PTXAPIShipModelShipFlatWrapperPTXServiceDTOShipSpecificationV3RouteFlat) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRouteFlats(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXAPIShipModelShipFlatWrapperPTXServiceDTOShipSpecificationV3RouteFlat) contextValidateRouteFlats(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.RouteFlats); i++ {

		if m.RouteFlats[i] != nil {
			if err := m.RouteFlats[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("RouteFlats" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *PTXAPIShipModelShipFlatWrapperPTXServiceDTOShipSpecificationV3RouteFlat) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXAPIShipModelShipFlatWrapperPTXServiceDTOShipSpecificationV3RouteFlat) UnmarshalBinary(b []byte) error {
	var res PTXAPIShipModelShipFlatWrapperPTXServiceDTOShipSpecificationV3RouteFlat
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
