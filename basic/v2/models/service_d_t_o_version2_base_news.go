// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion2BaseNews News
//
// 業管機關資料型別
// swagger:model Service.DTO.Version2.Base.News
type ServiceDTOVersion2BaseNews struct {

	// 相關網站連結
	AttachmentURL string `json:"AttachmentURL,omitempty"`

	// 發布單位
	Department string `json:"Department,omitempty"`

	// 內容描述
	// Required: true
	Description *string `json:"Description"`

	// DateTime
	//
	// 結束時間
	EndTime string `json:"EndTime,omitempty"`

	// 語系
	// Required: true
	Language *string `json:"Language"`

	// 消息類別
	// Enum: [1: 最新消息 2: 新聞稿 3: 營運資訊 4: 轉乘資訊 5: 活動訊息 6: 系統公告 7: 新服務上架 8: API修正 9: 來源異常 99: 其他]
	NewsCategory string `json:"NewsCategory,omitempty"`

	// 最新消息原單位發布代碼
	// Required: true
	// Format: uuid
	NewsID *strfmt.UUID `json:"NewsID"`

	// 報導網站連結
	NewsURL string `json:"NewsURL,omitempty"`

	// DateTime
	//
	// 消息公告日期時間
	PublishTime string `json:"PublishTime,omitempty"`

	// DateTime
	//
	// 開始時間
	StartTime string `json:"StartTime,omitempty"`

	// 消息標題
	Title string `json:"Title,omitempty"`

	// DateTime
	//
	// 消息更新時間
	UpdateTime string `json:"UpdateTime,omitempty"`
}

// Validate validates this service d t o version2 base news
func (m *ServiceDTOVersion2BaseNews) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLanguage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNewsCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNewsID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion2BaseNews) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("Description", "body", m.Description); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion2BaseNews) validateLanguage(formats strfmt.Registry) error {

	if err := validate.Required("Language", "body", m.Language); err != nil {
		return err
	}

	return nil
}

var serviceDTOVersion2BaseNewsTypeNewsCategoryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["1: 最新消息","2: 新聞稿","3: 營運資訊","4: 轉乘資訊","5: 活動訊息","6: 系統公告","7: 新服務上架","8: API修正","9: 來源異常","99: 其他"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		serviceDTOVersion2BaseNewsTypeNewsCategoryPropEnum = append(serviceDTOVersion2BaseNewsTypeNewsCategoryPropEnum, v)
	}
}

const (

	// ServiceDTOVersion2BaseNewsNewsCategoryNr1最新消息 captures enum value "1: 最新消息"
	ServiceDTOVersion2BaseNewsNewsCategoryNr1最新消息 string = "1: 最新消息"

	// ServiceDTOVersion2BaseNewsNewsCategoryNr2新聞稿 captures enum value "2: 新聞稿"
	ServiceDTOVersion2BaseNewsNewsCategoryNr2新聞稿 string = "2: 新聞稿"

	// ServiceDTOVersion2BaseNewsNewsCategoryNr3營運資訊 captures enum value "3: 營運資訊"
	ServiceDTOVersion2BaseNewsNewsCategoryNr3營運資訊 string = "3: 營運資訊"

	// ServiceDTOVersion2BaseNewsNewsCategoryNr4轉乘資訊 captures enum value "4: 轉乘資訊"
	ServiceDTOVersion2BaseNewsNewsCategoryNr4轉乘資訊 string = "4: 轉乘資訊"

	// ServiceDTOVersion2BaseNewsNewsCategoryNr5活動訊息 captures enum value "5: 活動訊息"
	ServiceDTOVersion2BaseNewsNewsCategoryNr5活動訊息 string = "5: 活動訊息"

	// ServiceDTOVersion2BaseNewsNewsCategoryNr6系統公告 captures enum value "6: 系統公告"
	ServiceDTOVersion2BaseNewsNewsCategoryNr6系統公告 string = "6: 系統公告"

	// ServiceDTOVersion2BaseNewsNewsCategoryNr7新服務上架 captures enum value "7: 新服務上架"
	ServiceDTOVersion2BaseNewsNewsCategoryNr7新服務上架 string = "7: 新服務上架"

	// ServiceDTOVersion2BaseNewsNewsCategoryNr8API修正 captures enum value "8: API修正"
	ServiceDTOVersion2BaseNewsNewsCategoryNr8API修正 string = "8: API修正"

	// ServiceDTOVersion2BaseNewsNewsCategoryNr9來源異常 captures enum value "9: 來源異常"
	ServiceDTOVersion2BaseNewsNewsCategoryNr9來源異常 string = "9: 來源異常"

	// ServiceDTOVersion2BaseNewsNewsCategoryNr99其他 captures enum value "99: 其他"
	ServiceDTOVersion2BaseNewsNewsCategoryNr99其他 string = "99: 其他"
)

// prop value enum
func (m *ServiceDTOVersion2BaseNews) validateNewsCategoryEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, serviceDTOVersion2BaseNewsTypeNewsCategoryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ServiceDTOVersion2BaseNews) validateNewsCategory(formats strfmt.Registry) error {

	if swag.IsZero(m.NewsCategory) { // not required
		return nil
	}

	// value enum
	if err := m.validateNewsCategoryEnum("NewsCategory", "body", m.NewsCategory); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion2BaseNews) validateNewsID(formats strfmt.Registry) error {

	if err := validate.Required("NewsID", "body", m.NewsID); err != nil {
		return err
	}

	if err := validate.FormatOf("NewsID", "body", "uuid", m.NewsID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion2BaseNews) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion2BaseNews) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion2BaseNews
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
