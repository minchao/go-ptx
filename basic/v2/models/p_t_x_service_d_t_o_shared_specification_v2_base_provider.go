// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOSharedSpecificationV2BaseProvider Provider
//
// 資料提供平台資料型別
//
// swagger:model PTX.Service.DTO.Shared.Specification.V2.Base.Provider
type PTXServiceDTOSharedSpecificationV2BaseProvider struct {

	// String
	//
	// 資料提供平台簡碼
	// Required: true
	ProviderCode *string `json:"ProviderCode"`

	// String
	//
	// 資料提供平台電子信箱
	ProviderEmail string `json:"ProviderEmail,omitempty"`

	// String
	//
	// 資料提供平台代碼
	// Required: true
	ProviderID *string `json:"ProviderID"`

	// NameType
	//
	// 資料提供平台名稱
	// Required: true
	ProviderName struct {
		PTXServiceDTOSharedSpecificationV2BaseNameType
	} `json:"ProviderName"`

	// String
	//
	// 資料提供平台連絡電話
	ProviderPhone string `json:"ProviderPhone,omitempty"`

	// String
	//
	// 資料提供平台網址鏈結
	ProviderURL string `json:"ProviderUrl,omitempty"`

	// DateTime
	//
	// 資料更新日期時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz)
	// Required: true
	UpdateTime *string `json:"UpdateTime"`
}

// Validate validates this p t x service d t o shared specification v2 base provider
func (m *PTXServiceDTOSharedSpecificationV2BaseProvider) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProviderCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProviderID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProviderName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseProvider) validateProviderCode(formats strfmt.Registry) error {

	if err := validate.Required("ProviderCode", "body", m.ProviderCode); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseProvider) validateProviderID(formats strfmt.Registry) error {

	if err := validate.Required("ProviderID", "body", m.ProviderID); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseProvider) validateProviderName(formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseProvider) validateUpdateTime(formats strfmt.Registry) error {

	if err := validate.Required("UpdateTime", "body", m.UpdateTime); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOSharedSpecificationV2BaseProvider) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOSharedSpecificationV2BaseProvider) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOSharedSpecificationV2BaseProvider
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
