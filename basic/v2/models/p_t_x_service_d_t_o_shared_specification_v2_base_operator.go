// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOSharedSpecificationV2BaseOperator Operator
//
// 營運業者資料型別
//
// swagger:model PTX.Service.DTO.Shared.Specification.V2.Base.Operator
type PTXServiceDTOSharedSpecificationV2BaseOperator struct {

	// String
	//
	// 營運業者業管機關簡碼(對於於公路客運/國道客運而言為THB)
	// Required: true
	AuthorityCode *string `json:"AuthorityCode" xml:"String"`

	// String
	//
	// 營運業者簡碼
	// Required: true
	OperatorCode *string `json:"OperatorCode" xml:"String"`

	// String
	//
	// 營運業者電子信箱
	OperatorEmail string `json:"OperatorEmail,omitempty" xml:"String,omitempty"`

	// String
	//
	// 營運業者代碼
	// Required: true
	OperatorID *string `json:"OperatorID" xml:"String"`

	// NameType
	//
	// 營運業者名稱
	// Required: true
	OperatorName struct {
		PTXServiceDTOSharedSpecificationV2BaseNameType
	} `json:"OperatorName" xml:"NameType"`

	// String
	//
	// 營運業者編號[交通部票證資料系統定義]
	// Required: true
	OperatorNo *string `json:"OperatorNo" xml:"String"`

	// String
	//
	// 營運業者連絡電話
	OperatorPhone string `json:"OperatorPhone,omitempty" xml:"String,omitempty"`

	// String
	//
	// 營運業者網址鏈結
	OperatorURL string `json:"OperatorUrl,omitempty" xml:"String,omitempty"`

	// String
	//
	// 資料提供平台代碼
	// Required: true
	ProviderID *string `json:"ProviderID" xml:"String"`

	// String
	//
	// 訂票連絡電話
	ReservationPhone string `json:"ReservationPhone,omitempty" xml:"String,omitempty"`

	// String
	//
	// 訂票網址鏈結
	ReservationURL string `json:"ReservationUrl,omitempty" xml:"String,omitempty"`

	// String
	//
	// 營運業者所屬業管子機關簡碼(對於公路客運/國道客運路線而言為區監理所如THB-VO10-1..等)
	SubAuthorityCode string `json:"SubAuthorityCode,omitempty" xml:"String,omitempty"`

	// DateTime
	//
	// 資料更新日期時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz)
	// Required: true
	// Format: date-time
	UpdateTime *strfmt.DateTime `json:"UpdateTime"`
}

// Validate validates this p t x service d t o shared specification v2 base operator
func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthorityCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperatorCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperatorID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperatorName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperatorNo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProviderID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) validateAuthorityCode(formats strfmt.Registry) error {

	if err := validate.Required("AuthorityCode", "body", m.AuthorityCode); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) validateOperatorCode(formats strfmt.Registry) error {

	if err := validate.Required("OperatorCode", "body", m.OperatorCode); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) validateOperatorID(formats strfmt.Registry) error {

	if err := validate.Required("OperatorID", "body", m.OperatorID); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) validateOperatorName(formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) validateOperatorNo(formats strfmt.Registry) error {

	if err := validate.Required("OperatorNo", "body", m.OperatorNo); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) validateProviderID(formats strfmt.Registry) error {

	if err := validate.Required("ProviderID", "body", m.ProviderID); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) validateUpdateTime(formats strfmt.Registry) error {

	if err := validate.Required("UpdateTime", "body", m.UpdateTime); err != nil {
		return err
	}

	if err := validate.FormatOf("UpdateTime", "body", "date-time", m.UpdateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this p t x service d t o shared specification v2 base operator based on the context it is used
func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOperatorName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) contextValidateOperatorName(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOSharedSpecificationV2BaseOperator) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOSharedSpecificationV2BaseOperator
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
