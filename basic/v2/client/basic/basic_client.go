// Code generated by go-swagger; DO NOT EDIT.

package basic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new basic API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for basic API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	BasicAPIAuthority2160(params *BasicAPIAuthority2160Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BasicAPIAuthority2160OK, error)

	BasicAPIOperator2162(params *BasicAPIOperator2162Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BasicAPIOperator2162OK, error)

	BasicAPIProvider2161(params *BasicAPIProvider2161Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BasicAPIProvider2161OK, error)

	WebSiteAPINews2163(params *WebSiteAPINews2163Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*WebSiteAPINews2163OK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  BasicAPIAuthority2160 取得業管機關資料s
*/
func (a *Client) BasicAPIAuthority2160(params *BasicAPIAuthority2160Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BasicAPIAuthority2160OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBasicAPIAuthority2160Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "BasicApi_Authority_2160",
		Method:             "GET",
		PathPattern:        "/v2/Basic/Authority",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BasicAPIAuthority2160Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BasicAPIAuthority2160OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for BasicApi_Authority_2160: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BasicAPIOperator2162 取得營運業者資料s
*/
func (a *Client) BasicAPIOperator2162(params *BasicAPIOperator2162Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BasicAPIOperator2162OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBasicAPIOperator2162Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "BasicApi_Operator_2162",
		Method:             "GET",
		PathPattern:        "/v2/Basic/Operator",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BasicAPIOperator2162Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BasicAPIOperator2162OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for BasicApi_Operator_2162: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BasicAPIProvider2161 取得資料提供平台資料s
*/
func (a *Client) BasicAPIProvider2161(params *BasicAPIProvider2161Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BasicAPIProvider2161OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBasicAPIProvider2161Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "BasicApi_Provider_2161",
		Method:             "GET",
		PathPattern:        "/v2/Basic/Provider",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BasicAPIProvider2161Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BasicAPIProvider2161OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for BasicApi_Provider_2161: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WebSiteAPINews2163 取得s p t x官網最新消息資料
*/
func (a *Client) WebSiteAPINews2163(params *WebSiteAPINews2163Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*WebSiteAPINews2163OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWebSiteAPINews2163Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "WebSiteApi_News_2163",
		Method:             "GET",
		PathPattern:        "/v2/PTX/Web/News",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WebSiteAPINews2163Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WebSiteAPINews2163OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for WebSiteApi_News_2163: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
