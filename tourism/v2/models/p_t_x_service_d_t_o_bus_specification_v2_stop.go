// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOBusSpecificationV2Stop Stop
//
// swagger:model PTX.Service.DTO.Bus.Specification.V2.Stop
type PTXServiceDTOBusSpecificationV2Stop struct {

	// String
	LocationCityCode string `json:"LocationCityCode,omitempty"`

	// String
	// Required: true
	StationGroupID *string `json:"StationGroupID"`

	// String
	StationID string `json:"StationID,omitempty"`

	// integer
	//
	// [-1:'可下車',0:'可上下車',1:'可上車']
	StopBoarding int32 `json:"StopBoarding,omitempty"`

	// String
	// Required: true
	StopID *string `json:"StopID"`

	// NameType
	//
	// 名稱資料型別
	// Required: true
	StopName struct {
		PTXServiceDTOSharedSpecificationV2BaseNameType
	} `json:"StopName"`

	// PointType
	//
	// 座標資料型別
	// Required: true
	StopPosition struct {
		PTXServiceDTOSharedSpecificationV2BasePointType
	} `json:"StopPosition"`

	// Int32
	// Required: true
	StopSequence *int32 `json:"StopSequence"`

	// String
	// Required: true
	StopUID *string `json:"StopUID"`
}

// Validate validates this p t x service d t o bus specification v2 stop
func (m *PTXServiceDTOBusSpecificationV2Stop) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStationGroupID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStopID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStopName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStopPosition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStopSequence(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStopUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV2Stop) validateStationGroupID(formats strfmt.Registry) error {

	if err := validate.Required("StationGroupID", "body", m.StationGroupID); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2Stop) validateStopID(formats strfmt.Registry) error {

	if err := validate.Required("StopID", "body", m.StopID); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2Stop) validateStopName(formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2Stop) validateStopPosition(formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2Stop) validateStopSequence(formats strfmt.Registry) error {

	if err := validate.Required("StopSequence", "body", m.StopSequence); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2Stop) validateStopUID(formats strfmt.Registry) error {

	if err := validate.Required("StopUID", "body", m.StopUID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV2Stop) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV2Stop) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOBusSpecificationV2Stop
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
