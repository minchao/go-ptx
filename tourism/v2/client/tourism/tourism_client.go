// Code generated by go-swagger; DO NOT EDIT.

package tourism

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new tourism API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for tourism API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	TaiwanTripBusAPIEstimatedTimeOfArrival(params *TaiwanTripBusAPIEstimatedTimeOfArrivalParams, opts ...ClientOption) (*TaiwanTripBusAPIEstimatedTimeOfArrivalOK, *TaiwanTripBusAPIEstimatedTimeOfArrivalStatus299, error)

	TaiwanTripBusAPIEstimatedTimeOfArrival1(params *TaiwanTripBusAPIEstimatedTimeOfArrival1Params, opts ...ClientOption) (*TaiwanTripBusAPIEstimatedTimeOfArrival1OK, *TaiwanTripBusAPIEstimatedTimeOfArrival1Status299, error)

	TaiwanTripBusAPINews(params *TaiwanTripBusAPINewsParams, opts ...ClientOption) (*TaiwanTripBusAPINewsOK, *TaiwanTripBusAPINewsStatus299, error)

	TaiwanTripBusAPIRealTimeByFrequency(params *TaiwanTripBusAPIRealTimeByFrequencyParams, opts ...ClientOption) (*TaiwanTripBusAPIRealTimeByFrequencyOK, *TaiwanTripBusAPIRealTimeByFrequencyStatus299, error)

	TaiwanTripBusAPIRealTimeByFrequency1(params *TaiwanTripBusAPIRealTimeByFrequency1Params, opts ...ClientOption) (*TaiwanTripBusAPIRealTimeByFrequency1OK, *TaiwanTripBusAPIRealTimeByFrequency1Status299, error)

	TaiwanTripBusAPIRealTimeNearStop(params *TaiwanTripBusAPIRealTimeNearStopParams, opts ...ClientOption) (*TaiwanTripBusAPIRealTimeNearStopOK, *TaiwanTripBusAPIRealTimeNearStopStatus299, error)

	TaiwanTripBusAPIRealTimeNearStop1(params *TaiwanTripBusAPIRealTimeNearStop1Params, opts ...ClientOption) (*TaiwanTripBusAPIRealTimeNearStop1OK, *TaiwanTripBusAPIRealTimeNearStop1Status299, error)

	TaiwanTripBusAPIRoute(params *TaiwanTripBusAPIRouteParams, opts ...ClientOption) (*TaiwanTripBusAPIRouteOK, *TaiwanTripBusAPIRouteStatus299, error)

	TaiwanTripBusAPIRoute1(params *TaiwanTripBusAPIRoute1Params, opts ...ClientOption) (*TaiwanTripBusAPIRoute1OK, *TaiwanTripBusAPIRoute1Status299, error)

	TaiwanTripBusAPIS2TravelTime(params *TaiwanTripBusAPIS2TravelTimeParams, opts ...ClientOption) (*TaiwanTripBusAPIS2TravelTimeOK, *TaiwanTripBusAPIS2TravelTimeStatus299, error)

	TaiwanTripBusAPISchedule(params *TaiwanTripBusAPIScheduleParams, opts ...ClientOption) (*TaiwanTripBusAPIScheduleOK, *TaiwanTripBusAPIScheduleStatus299, error)

	TaiwanTripBusAPISchedule1(params *TaiwanTripBusAPISchedule1Params, opts ...ClientOption) (*TaiwanTripBusAPISchedule1OK, *TaiwanTripBusAPISchedule1Status299, error)

	TaiwanTripBusAPIShape(params *TaiwanTripBusAPIShapeParams, opts ...ClientOption) (*TaiwanTripBusAPIShapeOK, *TaiwanTripBusAPIShapeStatus299, error)

	TaiwanTripBusAPIShape1(params *TaiwanTripBusAPIShape1Params, opts ...ClientOption) (*TaiwanTripBusAPIShape1OK, *TaiwanTripBusAPIShape1Status299, error)

	TaiwanTripBusAPIStopOfRoute(params *TaiwanTripBusAPIStopOfRouteParams, opts ...ClientOption) (*TaiwanTripBusAPIStopOfRouteOK, *TaiwanTripBusAPIStopOfRouteStatus299, error)

	TaiwanTripBusAPIStopOfRoute1(params *TaiwanTripBusAPIStopOfRoute1Params, opts ...ClientOption) (*TaiwanTripBusAPIStopOfRoute1OK, *TaiwanTripBusAPIStopOfRoute1Status299, error)

	TourismAPIActivity(params *TourismAPIActivityParams, opts ...ClientOption) (*TourismAPIActivityOK, *TourismAPIActivityStatus299, error)

	TourismAPIActivity0(params *TourismAPIActivity0Params, opts ...ClientOption) (*TourismAPIActivity0OK, *TourismAPIActivity0Status299, error)

	TourismAPIHotel(params *TourismAPIHotelParams, opts ...ClientOption) (*TourismAPIHotelOK, *TourismAPIHotelStatus299, error)

	TourismAPIHotel0(params *TourismAPIHotel0Params, opts ...ClientOption) (*TourismAPIHotel0OK, *TourismAPIHotel0Status299, error)

	TourismAPIRestaurant(params *TourismAPIRestaurantParams, opts ...ClientOption) (*TourismAPIRestaurantOK, *TourismAPIRestaurantStatus299, error)

	TourismAPIRestaurant0(params *TourismAPIRestaurant0Params, opts ...ClientOption) (*TourismAPIRestaurant0OK, *TourismAPIRestaurant0Status299, error)

	TourismAPIScenicSpot(params *TourismAPIScenicSpotParams, opts ...ClientOption) (*TourismAPIScenicSpotOK, *TourismAPIScenicSpotStatus299, error)

	TourismAPIScenicSpot0(params *TourismAPIScenicSpot0Params, opts ...ClientOption) (*TourismAPIScenicSpot0OK, *TourismAPIScenicSpot0Status299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  TaiwanTripBusAPIEstimatedTimeOfArrival 取得台灣好行公車的預估到站資料s n1

  取得台灣好行公車的預估到站資料(N1)
*/
func (a *Client) TaiwanTripBusAPIEstimatedTimeOfArrival(params *TaiwanTripBusAPIEstimatedTimeOfArrivalParams, opts ...ClientOption) (*TaiwanTripBusAPIEstimatedTimeOfArrivalOK, *TaiwanTripBusAPIEstimatedTimeOfArrivalStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIEstimatedTimeOfArrivalParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_EstimatedTimeOfArrival",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/EstimatedTimeOfArrival/TaiwanTrip",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIEstimatedTimeOfArrivalReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIEstimatedTimeOfArrivalOK:
		return value, nil, nil
	case *TaiwanTripBusAPIEstimatedTimeOfArrivalStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIEstimatedTimeOfArrival1 取得指定s 路線名稱 的台灣好行公車的預估到站資料 n1

  取得指定[路線名稱]的台灣好行公車的預估到站資料(N1)
*/
func (a *Client) TaiwanTripBusAPIEstimatedTimeOfArrival1(params *TaiwanTripBusAPIEstimatedTimeOfArrival1Params, opts ...ClientOption) (*TaiwanTripBusAPIEstimatedTimeOfArrival1OK, *TaiwanTripBusAPIEstimatedTimeOfArrival1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIEstimatedTimeOfArrival1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_EstimatedTimeOfArrival_1",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/EstimatedTimeOfArrival/TaiwanTrip/{TaiwanTripName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIEstimatedTimeOfArrival1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIEstimatedTimeOfArrival1OK:
		return value, nil, nil
	case *TaiwanTripBusAPIEstimatedTimeOfArrival1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPINews 取得台灣好行公車之最新消息s

  取得台灣好行公車之最新消息
*/
func (a *Client) TaiwanTripBusAPINews(params *TaiwanTripBusAPINewsParams, opts ...ClientOption) (*TaiwanTripBusAPINewsOK, *TaiwanTripBusAPINewsStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPINewsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_News",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/News/TaiwanTrip",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPINewsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPINewsOK:
		return value, nil, nil
	case *TaiwanTripBusAPINewsStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIRealTimeByFrequency 取得台灣好行公車的動態定時資料s a1

  取得台灣好行公車的動態定時資料(A1)
*/
func (a *Client) TaiwanTripBusAPIRealTimeByFrequency(params *TaiwanTripBusAPIRealTimeByFrequencyParams, opts ...ClientOption) (*TaiwanTripBusAPIRealTimeByFrequencyOK, *TaiwanTripBusAPIRealTimeByFrequencyStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIRealTimeByFrequencyParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_RealTimeByFrequency",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/RealTimeByFrequency/TaiwanTrip",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIRealTimeByFrequencyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIRealTimeByFrequencyOK:
		return value, nil, nil
	case *TaiwanTripBusAPIRealTimeByFrequencyStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIRealTimeByFrequency1 取得指定s 路線名稱 的台灣好行公車的動態定時資料 a1

  取得指定[路線名稱]的台灣好行公車的動態定時資料(A1)
*/
func (a *Client) TaiwanTripBusAPIRealTimeByFrequency1(params *TaiwanTripBusAPIRealTimeByFrequency1Params, opts ...ClientOption) (*TaiwanTripBusAPIRealTimeByFrequency1OK, *TaiwanTripBusAPIRealTimeByFrequency1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIRealTimeByFrequency1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_RealTimeByFrequency_1",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/RealTimeByFrequency/TaiwanTrip/{TaiwanTripName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIRealTimeByFrequency1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIRealTimeByFrequency1OK:
		return value, nil, nil
	case *TaiwanTripBusAPIRealTimeByFrequency1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIRealTimeNearStop 取得台灣好行公車的動態定點資料s a2

  取得台灣好行公車的動態定點資料(A2)
*/
func (a *Client) TaiwanTripBusAPIRealTimeNearStop(params *TaiwanTripBusAPIRealTimeNearStopParams, opts ...ClientOption) (*TaiwanTripBusAPIRealTimeNearStopOK, *TaiwanTripBusAPIRealTimeNearStopStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIRealTimeNearStopParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_RealTimeNearStop",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/RealTimeNearStop/TaiwanTrip",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIRealTimeNearStopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIRealTimeNearStopOK:
		return value, nil, nil
	case *TaiwanTripBusAPIRealTimeNearStopStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIRealTimeNearStop1 取得指定s 路線名稱 的台灣好行公車的動態定點資料 a2

  取得指定[路線名稱]的台灣好行公車的動態定點資料(A2)
*/
func (a *Client) TaiwanTripBusAPIRealTimeNearStop1(params *TaiwanTripBusAPIRealTimeNearStop1Params, opts ...ClientOption) (*TaiwanTripBusAPIRealTimeNearStop1OK, *TaiwanTripBusAPIRealTimeNearStop1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIRealTimeNearStop1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_RealTimeNearStop_1",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/RealTimeNearStop/TaiwanTrip/{TaiwanTripName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIRealTimeNearStop1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIRealTimeNearStop1OK:
		return value, nil, nil
	case *TaiwanTripBusAPIRealTimeNearStop1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIRoute 取得台灣好行公車路線資料s

  取得台灣好行公車路線資料
*/
func (a *Client) TaiwanTripBusAPIRoute(params *TaiwanTripBusAPIRouteParams, opts ...ClientOption) (*TaiwanTripBusAPIRouteOK, *TaiwanTripBusAPIRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIRouteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_Route",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/Route/TaiwanTrip",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIRouteOK:
		return value, nil, nil
	case *TaiwanTripBusAPIRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIRoute1 取得指定s 路線名稱 的台灣好行公車路線資料

  取得指定[路線名稱]的台灣好行公車路線資料
*/
func (a *Client) TaiwanTripBusAPIRoute1(params *TaiwanTripBusAPIRoute1Params, opts ...ClientOption) (*TaiwanTripBusAPIRoute1OK, *TaiwanTripBusAPIRoute1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIRoute1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_Route_1",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/Route/TaiwanTrip/{TaiwanTripName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIRoute1OK:
		return value, nil, nil
	case *TaiwanTripBusAPIRoute1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIS2TravelTime 取得台灣好行公車路線站間旅行時間基本資料s

  取得台灣好行公車路線站間旅行時間基本資料
*/
func (a *Client) TaiwanTripBusAPIS2TravelTime(params *TaiwanTripBusAPIS2TravelTimeParams, opts ...ClientOption) (*TaiwanTripBusAPIS2TravelTimeOK, *TaiwanTripBusAPIS2TravelTimeStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIS2TravelTimeParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_S2TravelTime",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/S2TravelTime/TaiwanTrip",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIS2TravelTimeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIS2TravelTimeOK:
		return value, nil, nil
	case *TaiwanTripBusAPIS2TravelTimeStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPISchedule 取得台灣好行公車路線班表資料s

  取得台灣好行公車路線班表資料
*/
func (a *Client) TaiwanTripBusAPISchedule(params *TaiwanTripBusAPIScheduleParams, opts ...ClientOption) (*TaiwanTripBusAPIScheduleOK, *TaiwanTripBusAPIScheduleStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIScheduleParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_Schedule",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/Schedule/TaiwanTrip",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIScheduleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIScheduleOK:
		return value, nil, nil
	case *TaiwanTripBusAPIScheduleStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPISchedule1 取得指定s 路線名稱 的台灣好行公車路線班表資料

  取得指定[路線名稱]的台灣好行公車路線班表資料
*/
func (a *Client) TaiwanTripBusAPISchedule1(params *TaiwanTripBusAPISchedule1Params, opts ...ClientOption) (*TaiwanTripBusAPISchedule1OK, *TaiwanTripBusAPISchedule1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPISchedule1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_Schedule_1",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/Schedule/TaiwanTrip/{TaiwanTripName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPISchedule1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPISchedule1OK:
		return value, nil, nil
	case *TaiwanTripBusAPISchedule1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIShape 取得台灣好行公車線型資料s

  取得台灣好行公車線型資料
*/
func (a *Client) TaiwanTripBusAPIShape(params *TaiwanTripBusAPIShapeParams, opts ...ClientOption) (*TaiwanTripBusAPIShapeOK, *TaiwanTripBusAPIShapeStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIShapeParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_Shape",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/Shape/TaiwanTrip",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIShapeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIShapeOK:
		return value, nil, nil
	case *TaiwanTripBusAPIShapeStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIShape1 取得指定s 路線名稱 的台灣好行公車線型資料

  取得指定[路線名稱]的台灣好行公車線型資料
*/
func (a *Client) TaiwanTripBusAPIShape1(params *TaiwanTripBusAPIShape1Params, opts ...ClientOption) (*TaiwanTripBusAPIShape1OK, *TaiwanTripBusAPIShape1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIShape1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_Shape_1",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/Shape/TaiwanTrip/{TaiwanTripName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIShape1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIShape1OK:
		return value, nil, nil
	case *TaiwanTripBusAPIShape1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIStopOfRoute 取得台灣好行公車路線與站牌資料s

  取得台灣好行公車路線與站牌資料
*/
func (a *Client) TaiwanTripBusAPIStopOfRoute(params *TaiwanTripBusAPIStopOfRouteParams, opts ...ClientOption) (*TaiwanTripBusAPIStopOfRouteOK, *TaiwanTripBusAPIStopOfRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIStopOfRouteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_StopOfRoute",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/StopOfRoute/TaiwanTrip",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIStopOfRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIStopOfRouteOK:
		return value, nil, nil
	case *TaiwanTripBusAPIStopOfRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TaiwanTripBusAPIStopOfRoute1 取得指定s 路線名稱 的台灣好行公車路線與站牌資料

  取得指定[路線名稱]的台灣好行公車路線與站牌資料
*/
func (a *Client) TaiwanTripBusAPIStopOfRoute1(params *TaiwanTripBusAPIStopOfRoute1Params, opts ...ClientOption) (*TaiwanTripBusAPIStopOfRoute1OK, *TaiwanTripBusAPIStopOfRoute1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaiwanTripBusAPIStopOfRoute1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TaiwanTripBusApi_StopOfRoute_1",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Bus/StopOfRoute/TaiwanTrip/{TaiwanTripName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TaiwanTripBusAPIStopOfRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TaiwanTripBusAPIStopOfRoute1OK:
		return value, nil, nil
	case *TaiwanTripBusAPIStopOfRoute1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TourismAPIActivity 取得所有觀光活動資料s

  取得所有觀光活動資料
*/
func (a *Client) TourismAPIActivity(params *TourismAPIActivityParams, opts ...ClientOption) (*TourismAPIActivityOK, *TourismAPIActivityStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTourismAPIActivityParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TourismApi_Activity",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Activity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TourismAPIActivityReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TourismAPIActivityOK:
		return value, nil, nil
	case *TourismAPIActivityStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TourismAPIActivity0 取得指定s 縣市 觀光活動資料

  取得指定[縣市]觀光活動資料
*/
func (a *Client) TourismAPIActivity0(params *TourismAPIActivity0Params, opts ...ClientOption) (*TourismAPIActivity0OK, *TourismAPIActivity0Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTourismAPIActivity0Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TourismApi_Activity_0",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Activity/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TourismAPIActivity0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TourismAPIActivity0OK:
		return value, nil, nil
	case *TourismAPIActivity0Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TourismAPIHotel 取得所有觀光旅宿資料s

  取得所有觀光旅宿資料
*/
func (a *Client) TourismAPIHotel(params *TourismAPIHotelParams, opts ...ClientOption) (*TourismAPIHotelOK, *TourismAPIHotelStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTourismAPIHotelParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TourismApi_Hotel",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Hotel",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TourismAPIHotelReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TourismAPIHotelOK:
		return value, nil, nil
	case *TourismAPIHotelStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TourismAPIHotel0 取得指定s 縣市 觀光旅宿資料

  取得指定[縣市]觀光旅宿資料
*/
func (a *Client) TourismAPIHotel0(params *TourismAPIHotel0Params, opts ...ClientOption) (*TourismAPIHotel0OK, *TourismAPIHotel0Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTourismAPIHotel0Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TourismApi_Hotel_0",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Hotel/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TourismAPIHotel0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TourismAPIHotel0OK:
		return value, nil, nil
	case *TourismAPIHotel0Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TourismAPIRestaurant 取得所有觀光餐飲資料s

  取得所有觀光餐飲資料
*/
func (a *Client) TourismAPIRestaurant(params *TourismAPIRestaurantParams, opts ...ClientOption) (*TourismAPIRestaurantOK, *TourismAPIRestaurantStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTourismAPIRestaurantParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TourismApi_Restaurant",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Restaurant",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TourismAPIRestaurantReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TourismAPIRestaurantOK:
		return value, nil, nil
	case *TourismAPIRestaurantStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TourismAPIRestaurant0 取得指定s 縣市 觀光餐飲資料

  取得指定[縣市]觀光餐飲資料
*/
func (a *Client) TourismAPIRestaurant0(params *TourismAPIRestaurant0Params, opts ...ClientOption) (*TourismAPIRestaurant0OK, *TourismAPIRestaurant0Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTourismAPIRestaurant0Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TourismApi_Restaurant_0",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/Restaurant/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TourismAPIRestaurant0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TourismAPIRestaurant0OK:
		return value, nil, nil
	case *TourismAPIRestaurant0Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TourismAPIScenicSpot 取得所有觀光景點資料s

  取得所有觀光景點資料
*/
func (a *Client) TourismAPIScenicSpot(params *TourismAPIScenicSpotParams, opts ...ClientOption) (*TourismAPIScenicSpotOK, *TourismAPIScenicSpotStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTourismAPIScenicSpotParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "TourismApi_ScenicSpot",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/ScenicSpot",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TourismAPIScenicSpotReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TourismAPIScenicSpotOK:
		return value, nil, nil
	case *TourismAPIScenicSpotStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TourismAPIScenicSpot0 取得指定s 縣市 觀光景點資料

  取得指定[縣市]觀光景點資料
*/
func (a *Client) TourismAPIScenicSpot0(params *TourismAPIScenicSpot0Params, opts ...ClientOption) (*TourismAPIScenicSpot0OK, *TourismAPIScenicSpot0Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTourismAPIScenicSpot0Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TourismApi_ScenicSpot_0",
		Method:             "GET",
		PathPattern:        "/v2/Tourism/ScenicSpot/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TourismAPIScenicSpot0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TourismAPIScenicSpot0OK:
		return value, nil, nil
	case *TourismAPIScenicSpot0Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for tourism: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
