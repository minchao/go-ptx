// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion3RailTRADailyTrainTimeTableDiningFlagSection DiningFlagSection
//
// swagger:model Service.DTO.Version3.Rail.TRA.DailyTrainTimeTable.DiningFlagSection
type ServiceDTOVersion3RailTRADailyTrainTimeTableDiningFlagSection struct {

	// SectionAmong
	//
	// 乘客目的站所屬區間
	// Required: true
	EndSection *ServiceDTOVersion3RailTRADailyTrainTimeTableSectionAmong `json:"EndSection"`

	// SectionAmong
	//
	// 乘客出發站所屬區間
	// Required: true
	StartSection *ServiceDTOVersion3RailTRADailyTrainTimeTableSectionAmong `json:"StartSection"`
}

// Validate validates this service d t o version3 rail t r a daily train time table dining flag section
func (m *ServiceDTOVersion3RailTRADailyTrainTimeTableDiningFlagSection) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndSection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartSection(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion3RailTRADailyTrainTimeTableDiningFlagSection) validateEndSection(formats strfmt.Registry) error {

	if err := validate.Required("EndSection", "body", m.EndSection); err != nil {
		return err
	}

	if m.EndSection != nil {
		if err := m.EndSection.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("EndSection")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion3RailTRADailyTrainTimeTableDiningFlagSection) validateStartSection(formats strfmt.Registry) error {

	if err := validate.Required("StartSection", "body", m.StartSection); err != nil {
		return err
	}

	if m.StartSection != nil {
		if err := m.StartSection.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("StartSection")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion3RailTRADailyTrainTimeTableDiningFlagSection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion3RailTRADailyTrainTimeTableDiningFlagSection) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion3RailTRADailyTrainTimeTableDiningFlagSection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
