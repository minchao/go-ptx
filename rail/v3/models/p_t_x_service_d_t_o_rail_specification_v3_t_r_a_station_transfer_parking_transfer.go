// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTORailSpecificationV3TRAStationTransferParkingTransfer ParkingTransfer
//
// 停車場轉乘資訊
//
// swagger:model PTX.Service.DTO.Rail.Specification.V3.TRA.StationTransfer.ParkingTransfer
type PTXServiceDTORailSpecificationV3TRAStationTransferParkingTransfer struct {

	// String
	//
	// 停車場代碼
	// Required: true
	CarParkID *string `json:"CarParkID"`

	// NameType
	//
	// 停車場名稱
	// Required: true
	CarParkName struct {
		PTXServiceDTOSharedSpecificationV3BaseNameType
	} `json:"CarParkName"`

	// String
	//
	// 轉乘描述
	Description string `json:"Description,omitempty"`

	// String
	//
	// 轉乘樓層
	FloorLevel string `json:"FloorLevel,omitempty"`

	// 是否為站內或站外轉乘
	IsOnSiteTransfer bool `json:"IsOnSiteTransfer,omitempty"`

	// 最短轉乘時間
	MinTransferTime float64 `json:"MinTransferTime,omitempty"`

	// String
	//
	// 運具種類代碼
	// Required: true
	Mode *string `json:"Mode"`
}

// Validate validates this p t x service d t o rail specification v3 t r a station transfer parking transfer
func (m *PTXServiceDTORailSpecificationV3TRAStationTransferParkingTransfer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCarParkID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCarParkName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTORailSpecificationV3TRAStationTransferParkingTransfer) validateCarParkID(formats strfmt.Registry) error {

	if err := validate.Required("CarParkID", "body", m.CarParkID); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTORailSpecificationV3TRAStationTransferParkingTransfer) validateCarParkName(formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTORailSpecificationV3TRAStationTransferParkingTransfer) validateMode(formats strfmt.Registry) error {

	if err := validate.Required("Mode", "body", m.Mode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTORailSpecificationV3TRAStationTransferParkingTransfer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTORailSpecificationV3TRAStationTransferParkingTransfer) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTORailSpecificationV3TRAStationTransferParkingTransfer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
