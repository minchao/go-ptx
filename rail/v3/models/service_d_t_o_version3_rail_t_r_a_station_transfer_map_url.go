// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion3RailTRAStationTransferMapURL MapURL
//
// 轉乘地圖簡圖連結資訊
// swagger:model Service.DTO.Version3.Rail.TRA.StationTransfer.MapURL
type ServiceDTOVersion3RailTRAStationTransferMapURL struct {

	// 樓層
	FloorLevel string `json:"FloorLevel,omitempty"`

	// 地圖名稱
	// Required: true
	MapName *string `json:"MapName"`

	// 地圖簡圖連結
	// Required: true
	MapURL *string `json:"MapURL"`
}

// Validate validates this service d t o version3 rail t r a station transfer map URL
func (m *ServiceDTOVersion3RailTRAStationTransferMapURL) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMapName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMapURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion3RailTRAStationTransferMapURL) validateMapName(formats strfmt.Registry) error {

	if err := validate.Required("MapName", "body", m.MapName); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3RailTRAStationTransferMapURL) validateMapURL(formats strfmt.Registry) error {

	if err := validate.Required("MapURL", "body", m.MapURL); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion3RailTRAStationTransferMapURL) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion3RailTRAStationTransferMapURL) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion3RailTRAStationTransferMapURL
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
