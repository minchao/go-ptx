// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ServiceDTOVersion3RailTRAGeneralStationTimetableTimetable Timetable
//
// 車次停靠站資料
//
// swagger:model Service.DTO.Version3.Rail.TRA.GeneralStationTimetable.Timetable
type ServiceDTOVersion3RailTRAGeneralStationTimetableTimetable struct {

	// 到站時刻
	ArrivalTime string `json:"ArrivalTime,omitempty"`

	// 發車時刻
	DepartureTime string `json:"DepartureTime,omitempty"`

	// 目的站車站代號
	DestinationStationID string `json:"DestinationStationID,omitempty"`

	// NameType
	//
	// 目的站車站
	DestinationStationName *ServiceDTOVersion3BaseNameType `json:"DestinationStationName,omitempty"`

	// 發車順序
	Sequence int32 `json:"Sequence,omitempty"`

	// 車次代碼
	TrainNo string `json:"TrainNo,omitempty"`

	// 車種簡碼 = ['1: 太魯閣', '2: 普悠瑪', '3: 自強', '4: 莒光', '5: 復興', '6: 區間', '7: 普快', '10: 區間快']
	TrainTypeCode string `json:"TrainTypeCode,omitempty"`

	// 車種代嗎
	TrainTypeID string `json:"TrainTypeID,omitempty"`

	// NameType
	//
	// 車種名稱
	TrainTypeName *ServiceDTOVersion3BaseNameType `json:"TrainTypeName,omitempty"`
}

// Validate validates this service d t o version3 rail t r a general station timetable timetable
func (m *ServiceDTOVersion3RailTRAGeneralStationTimetableTimetable) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDestinationStationName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTrainTypeName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion3RailTRAGeneralStationTimetableTimetable) validateDestinationStationName(formats strfmt.Registry) error {

	if swag.IsZero(m.DestinationStationName) { // not required
		return nil
	}

	if m.DestinationStationName != nil {
		if err := m.DestinationStationName.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DestinationStationName")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion3RailTRAGeneralStationTimetableTimetable) validateTrainTypeName(formats strfmt.Registry) error {

	if swag.IsZero(m.TrainTypeName) { // not required
		return nil
	}

	if m.TrainTypeName != nil {
		if err := m.TrainTypeName.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("TrainTypeName")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion3RailTRAGeneralStationTimetableTimetable) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion3RailTRAGeneralStationTimetableTimetable) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion3RailTRAGeneralStationTimetableTimetable
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
