// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion3RailTRALineNetworkLineNetwork LineNetwork
//
// 路線網路拓撲基本資料
// swagger:model Service.DTO.Version3.Rail.TRA.LineNetwork.LineNetwork
type ServiceDTOVersion3RailTRALineNetworkLineNetwork struct {

	// 路線編號
	// Required: true
	LineID *string `json:"LineID"`

	// NameType
	//
	// 路線名稱
	// Required: true
	LineName *ServiceDTOVersion3BaseNameType `json:"LineName"`

	// 路線站點間線段資訊
	LineSegments []*ServiceDTOVersion3RailTRALineNetworkLineSegment `json:"LineSegments"`
}

// Validate validates this service d t o version3 rail t r a line network line network
func (m *ServiceDTOVersion3RailTRALineNetworkLineNetwork) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLineID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLineName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLineSegments(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion3RailTRALineNetworkLineNetwork) validateLineID(formats strfmt.Registry) error {

	if err := validate.Required("LineID", "body", m.LineID); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3RailTRALineNetworkLineNetwork) validateLineName(formats strfmt.Registry) error {

	if err := validate.Required("LineName", "body", m.LineName); err != nil {
		return err
	}

	if m.LineName != nil {
		if err := m.LineName.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("LineName")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion3RailTRALineNetworkLineNetwork) validateLineSegments(formats strfmt.Registry) error {

	if swag.IsZero(m.LineSegments) { // not required
		return nil
	}

	for i := 0; i < len(m.LineSegments); i++ {
		if swag.IsZero(m.LineSegments[i]) { // not required
			continue
		}

		if m.LineSegments[i] != nil {
			if err := m.LineSegments[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("LineSegments" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion3RailTRALineNetworkLineNetwork) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion3RailTRALineNetworkLineNetwork) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion3RailTRALineNetworkLineNetwork
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
