// Code generated by go-swagger; DO NOT EDIT.

package t_r_a

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/minchao/go-ptx/rail/v3/models"
)

// TrainLiveBoardAPIControllerGetReader is a Reader for the TrainLiveBoardAPIControllerGet structure.
type TrainLiveBoardAPIControllerGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TrainLiveBoardAPIControllerGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTrainLiveBoardAPIControllerGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTrainLiveBoardAPIControllerGetOK creates a TrainLiveBoardAPIControllerGetOK with default headers values
func NewTrainLiveBoardAPIControllerGetOK() *TrainLiveBoardAPIControllerGetOK {
	return &TrainLiveBoardAPIControllerGetOK{}
}

/*TrainLiveBoardAPIControllerGetOK handles this case with default header values.

OK
*/
type TrainLiveBoardAPIControllerGetOK struct {
	Payload *models.MOTCAPIRailModelsTRARealTimeWrapperServiceDTOVersion3RailTRATRATrainLiveBoardListTrainLiveBoard
}

func (o *TrainLiveBoardAPIControllerGetOK) Error() string {
	return fmt.Sprintf("[GET /v3/Rail/TRA/TrainLiveBoard][%d] trainLiveBoardApiControllerGetOK  %+v", 200, o.Payload)
}

func (o *TrainLiveBoardAPIControllerGetOK) GetPayload() *models.MOTCAPIRailModelsTRARealTimeWrapperServiceDTOVersion3RailTRATRATrainLiveBoardListTrainLiveBoard {
	return o.Payload
}

func (o *TrainLiveBoardAPIControllerGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MOTCAPIRailModelsTRARealTimeWrapperServiceDTOVersion3RailTRATRATrainLiveBoardListTrainLiveBoard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
