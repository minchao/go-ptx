// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion2RailMetroSubClassTimetable Timetable
//
// 車站發車時刻資訊
//
// swagger:model Service.DTO.Version2.Rail.Metro.SubClass.Timetable
type ServiceDTOVersion2RailMetroSubClassTimetable struct {

	// 到站時刻(hh:mm)
	// Required: true
	ArrivalTime *string `json:"ArrivalTime"`

	// 發車時刻(hh:mm)
	// Required: true
	DepartureTime *string `json:"DepartureTime"`

	// 發車順序
	// Required: true
	Sequence *int32 `json:"Sequence"`

	// 車次號碼(捷運通常沒有TrainNo車次資訊)
	// Required: true
	TrainNo *string `json:"TrainNo"`

	// 車種(0:不分車種, 1:普通車, 2:直達車)
	TrainType int32 `json:"TrainType,omitempty"`
}

// Validate validates this service d t o version2 rail metro sub class timetable
func (m *ServiceDTOVersion2RailMetroSubClassTimetable) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateArrivalTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepartureTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSequence(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTrainNo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion2RailMetroSubClassTimetable) validateArrivalTime(formats strfmt.Registry) error {

	if err := validate.Required("ArrivalTime", "body", m.ArrivalTime); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion2RailMetroSubClassTimetable) validateDepartureTime(formats strfmt.Registry) error {

	if err := validate.Required("DepartureTime", "body", m.DepartureTime); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion2RailMetroSubClassTimetable) validateSequence(formats strfmt.Registry) error {

	if err := validate.Required("Sequence", "body", m.Sequence); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion2RailMetroSubClassTimetable) validateTrainNo(formats strfmt.Registry) error {

	if err := validate.Required("TrainNo", "body", m.TrainNo); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion2RailMetroSubClassTimetable) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion2RailMetroSubClassTimetable) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion2RailMetroSubClassTimetable
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
