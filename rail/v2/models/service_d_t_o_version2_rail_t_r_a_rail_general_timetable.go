// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion2RailTRARailGeneralTimetable RailGeneralTimetable
//
// 台鐵到離站時刻資料型別
//
// swagger:model Service.DTO.Version2.Rail.TRA.RailGeneralTimetable
type ServiceDTOVersion2RailTRARailGeneralTimetable struct {

	// GeneralTimetable
	//
	// 定期時刻表資料
	// Required: true
	GeneralTimetable *ServiceDTOVersion2RailTRAGeneralTimetable `json:"GeneralTimetable"`

	// DateTime
	//
	// 資料更新日期(格式: yyyy-MM-dd)
	UpdateTime string `json:"UpdateTime,omitempty"`

	// 資料版本編號
	// Required: true
	VersionID *int32 `json:"VersionID"`
}

// Validate validates this service d t o version2 rail t r a rail general timetable
func (m *ServiceDTOVersion2RailTRARailGeneralTimetable) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGeneralTimetable(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion2RailTRARailGeneralTimetable) validateGeneralTimetable(formats strfmt.Registry) error {

	if err := validate.Required("GeneralTimetable", "body", m.GeneralTimetable); err != nil {
		return err
	}

	if m.GeneralTimetable != nil {
		if err := m.GeneralTimetable.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("GeneralTimetable")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion2RailTRARailGeneralTimetable) validateVersionID(formats strfmt.Registry) error {

	if err := validate.Required("VersionID", "body", m.VersionID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion2RailTRARailGeneralTimetable) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion2RailTRARailGeneralTimetable) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion2RailTRARailGeneralTimetable
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
