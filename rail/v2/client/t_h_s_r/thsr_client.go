// Code generated by go-swagger; DO NOT EDIT.

package t_h_s_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new t h s r API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for t h s r API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
THSRAPIAlertInfo 取得即時通阻事件資料s

取得即時通阻事件資料
*/
func (a *Client) THSRAPIAlertInfo(params *THSRAPIAlertInfoParams) (*THSRAPIAlertInfoOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAlertInfoParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_AlertInfo",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AlertInfo",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAlertInfoReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIAlertInfoOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_AlertInfo: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIAvailableSeatStatusList 取得動態指定s 車站 的對號座剩餘座位資訊看板資料

取得動態指定[車站]的對號座剩餘座位資訊看板資料
*/
func (a *Client) THSRAPIAvailableSeatStatusList(params *THSRAPIAvailableSeatStatusListParams) (*THSRAPIAvailableSeatStatusListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAvailableSeatStatusListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_AvailableSeatStatusList",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AvailableSeatStatusList/{StationID}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAvailableSeatStatusListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIAvailableSeatStatusListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_AvailableSeatStatusList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIDailyTimetable 取得當天所有車次的時刻表資料s

取得當天所有車次的時刻表資料
*/
func (a *Client) THSRAPIDailyTimetable(params *THSRAPIDailyTimetableParams) (*THSRAPIDailyTimetableOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTimetableParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_DailyTimetable",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/Today",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTimetableReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIDailyTimetableOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_DailyTimetable: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIDailyTimetable1 取得當天指定s 車次 的時刻表資料

取得當天指定[車次]的時刻表資料
*/
func (a *Client) THSRAPIDailyTimetable1(params *THSRAPIDailyTimetable1Params) (*THSRAPIDailyTimetable1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTimetable1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_DailyTimetable_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/Today/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTimetable1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIDailyTimetable1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_DailyTimetable_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIDailyTimetable2 取得指定s 日期 所有車次的時刻表資料

取得指定[日期]所有車次的時刻表資料(高鐵提供近28天每日時刻表)
*/
func (a *Client) THSRAPIDailyTimetable2(params *THSRAPIDailyTimetable2Params) (*THSRAPIDailyTimetable2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTimetable2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_DailyTimetable_2",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTimetable2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIDailyTimetable2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_DailyTimetable_2: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIDailyTimetable3 取得指定s 日期 車次 的時刻表資料

取得指定[日期],[車次]的時刻表資料(高鐵提供近28天每日時刻表)
*/
func (a *Client) THSRAPIDailyTimetable3(params *THSRAPIDailyTimetable3Params) (*THSRAPIDailyTimetable3OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTimetable3Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_DailyTimetable_3",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/TrainNo/{TrainNo}/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTimetable3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIDailyTimetable3OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_DailyTimetable_3: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIDailyTrainInfo 取得當天所有車次的車次資料s

取得當天所有車次的車次資料
*/
func (a *Client) THSRAPIDailyTrainInfo(params *THSRAPIDailyTrainInfoParams) (*THSRAPIDailyTrainInfoOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTrainInfoParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_DailyTrainInfo",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTrainInfo/Today",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTrainInfoReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIDailyTrainInfoOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_DailyTrainInfo: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIDailyTrainInfo1 取得當天指定s 車次 的車次資料

取得當天指定[車次]的車次資料
*/
func (a *Client) THSRAPIDailyTrainInfo1(params *THSRAPIDailyTrainInfo1Params) (*THSRAPIDailyTrainInfo1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTrainInfo1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_DailyTrainInfo_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTrainInfo/Today/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTrainInfo1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIDailyTrainInfo1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_DailyTrainInfo_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIDailyTrainInfo2 取得指定s 日期 所有車次的車次資料

取得指定[日期]所有車次的車次資料(高鐵提供近28天每日時刻表)
*/
func (a *Client) THSRAPIDailyTrainInfo2(params *THSRAPIDailyTrainInfo2Params) (*THSRAPIDailyTrainInfo2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTrainInfo2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_DailyTrainInfo_2",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTrainInfo/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTrainInfo2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIDailyTrainInfo2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_DailyTrainInfo_2: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIDailyTrainInfo3 取得指定s 日期 車次 的車次資料

取得指定[日期],[車次]的車次資料(高鐵提供近28天每日時刻表)
*/
func (a *Client) THSRAPIDailyTrainInfo3(params *THSRAPIDailyTrainInfo3Params) (*THSRAPIDailyTrainInfo3OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTrainInfo3Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_DailyTrainInfo_3",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTrainInfo/TrainNo/{TrainNo}/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTrainInfo3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIDailyTrainInfo3OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_DailyTrainInfo_3: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIGeneralTimetable 取得所有車次的定期時刻表資料s

取得所有車次的定期時刻表資料
*/
func (a *Client) THSRAPIGeneralTimetable(params *THSRAPIGeneralTimetableParams) (*THSRAPIGeneralTimetableOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIGeneralTimetableParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_GeneralTimetable",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/GeneralTimetable",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIGeneralTimetableReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIGeneralTimetableOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_GeneralTimetable: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIGeneralTimetable1 取得指定s 車次 的定期時刻表資料

取得指定[車次]的定期時刻表資料
*/
func (a *Client) THSRAPIGeneralTimetable1(params *THSRAPIGeneralTimetable1Params) (*THSRAPIGeneralTimetable1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIGeneralTimetable1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_GeneralTimetable_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/GeneralTimetable/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIGeneralTimetable1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIGeneralTimetable1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_GeneralTimetable_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPINews 取得高鐵最新消息資料s

取得高鐵最新消息資料
*/
func (a *Client) THSRAPINews(params *THSRAPINewsParams) (*THSRAPINewsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPINewsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_News",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/News",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPINewsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPINewsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_News: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIODDailyTimetable 取得指定s 日期 起迄站間 之時刻表資料

取得指定[日期],[起迄站間]之時刻表資料
*/
func (a *Client) THSRAPIODDailyTimetable(params *THSRAPIODDailyTimetableParams) (*THSRAPIODDailyTimetableOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIODDailyTimetableParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_ODDailyTimetable",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/OD/{OriginStationID}/to/{DestinationStationID}/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIODDailyTimetableReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIODDailyTimetableOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_ODDailyTimetable: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIODFare 取得票價資料s

取得票價資料
*/
func (a *Client) THSRAPIODFare(params *THSRAPIODFareParams) (*THSRAPIODFareOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIODFareParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_ODFare",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/ODFare",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIODFareReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIODFareOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_ODFare: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIODFare1 取得指定s 起訖站間 之票價資料

取得指定[起訖站間]之票價資料
*/
func (a *Client) THSRAPIODFare1(params *THSRAPIODFare1Params) (*THSRAPIODFare1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIODFare1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_ODFare_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/ODFare/{OriginStationID}/to/{DestinationStationID}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIODFare1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIODFare1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_ODFare_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIShape 取得軌道路網實體路線圖資資料s

取得軌道路網實體路線圖資資料
*/
func (a *Client) THSRAPIShape(params *THSRAPIShapeParams) (*THSRAPIShapeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIShapeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_Shape",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/Shape",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIShapeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIShapeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_Shape: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIStation 取得車站基本資料s

取得車站基本資料
*/
func (a *Client) THSRAPIStation(params *THSRAPIStationParams) (*THSRAPIStationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIStationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_Station",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/Station",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIStationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_Station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIStationExit 取得車站出入口基本資料s

取得車站出入口基本資料
*/
func (a *Client) THSRAPIStationExit(params *THSRAPIStationExitParams) (*THSRAPIStationExitOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIStationExitParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_StationExit",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/StationExit",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIStationExitReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIStationExitOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_StationExit: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
THSRAPIStationTimetable 取得指定s 日期 車站 的站別時刻表資料

取得指定[日期],[車站]的站別時刻表資料
*/
func (a *Client) THSRAPIStationTimetable(params *THSRAPIStationTimetableParams) (*THSRAPIStationTimetableOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIStationTimetableParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "THSRApi_StationTimetable",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/Station/{StationID}/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIStationTimetableReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*THSRAPIStationTimetableOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for THSRApi_StationTimetable: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
