// Code generated by go-swagger; DO NOT EDIT.

package t_h_s_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new t h s r API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for t h s r API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	THSRAPIAlertInfo2127(params *THSRAPIAlertInfo2127Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAlertInfo2127OK, *THSRAPIAlertInfo2127Status299, error)

	THSRAPIAvailableSeatStatusListStation2130(params *THSRAPIAvailableSeatStatusListStation2130Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusListStation2130OK, *THSRAPIAvailableSeatStatusListStation2130Status299, error)

	THSRAPIAvailableSeatStatusListStation21301(params *THSRAPIAvailableSeatStatusListStation21301Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusListStation21301OK, *THSRAPIAvailableSeatStatusListStation21301Status299, error)

	THSRAPIAvailableSeatStatus2135(params *THSRAPIAvailableSeatStatus2135Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatus2135OK, *THSRAPIAvailableSeatStatus2135Status299, error)

	THSRAPIAvailableSeatStatus21351(params *THSRAPIAvailableSeatStatus21351Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatus21351OK, *THSRAPIAvailableSeatStatus21351Status299, error)

	THSRAPIAvailableSeatStatusOD2136(params *THSRAPIAvailableSeatStatusOD2136Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusOD2136OK, *THSRAPIAvailableSeatStatusOD2136Status299, error)

	THSRAPIAvailableSeatStatusOD21361(params *THSRAPIAvailableSeatStatusOD21361Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusOD21361OK, *THSRAPIAvailableSeatStatusOD21361Status299, error)

	THSRAPIAvailableSeatStatusOD21362(params *THSRAPIAvailableSeatStatusOD21362Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusOD21362OK, *THSRAPIAvailableSeatStatusOD21362Status299, error)

	THSRAPIDailyTimetable2124(params *THSRAPIDailyTimetable2124Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable2124OK, *THSRAPIDailyTimetable2124Status299, error)

	THSRAPIDailyTimetable21241(params *THSRAPIDailyTimetable21241Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable21241OK, *THSRAPIDailyTimetable21241Status299, error)

	THSRAPIDailyTimetable21242(params *THSRAPIDailyTimetable21242Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable21242OK, *THSRAPIDailyTimetable21242Status299, error)

	THSRAPIDailyTimetable21243(params *THSRAPIDailyTimetable21243Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable21243OK, *THSRAPIDailyTimetable21243Status299, error)

	THSRAPIDailyTimetable21244(params *THSRAPIDailyTimetable21244Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable21244OK, *THSRAPIDailyTimetable21244Status299, error)

	THSRAPIDailyTrainInfo2123(params *THSRAPIDailyTrainInfo2123Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTrainInfo2123OK, *THSRAPIDailyTrainInfo2123Status299, error)

	THSRAPIDailyTrainInfo21231(params *THSRAPIDailyTrainInfo21231Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTrainInfo21231OK, *THSRAPIDailyTrainInfo21231Status299, error)

	THSRAPIDailyTrainInfo21232(params *THSRAPIDailyTrainInfo21232Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTrainInfo21232OK, *THSRAPIDailyTrainInfo21232Status299, error)

	THSRAPIDailyTrainInfo21233(params *THSRAPIDailyTrainInfo21233Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTrainInfo21233OK, *THSRAPIDailyTrainInfo21233Status299, error)

	THSRAPIGeneralTimetable2122(params *THSRAPIGeneralTimetable2122Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIGeneralTimetable2122OK, *THSRAPIGeneralTimetable2122Status299, error)

	THSRAPIGeneralTimetable21221(params *THSRAPIGeneralTimetable21221Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIGeneralTimetable21221OK, *THSRAPIGeneralTimetable21221Status299, error)

	THSRAPINews2128(params *THSRAPINews2128Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPINews2128OK, *THSRAPINews2128Status299, error)

	THSRAPIODDailyTimetable2126(params *THSRAPIODDailyTimetable2126Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIODDailyTimetable2126OK, *THSRAPIODDailyTimetable2126Status299, error)

	THSRAPIODFare2121(params *THSRAPIODFare2121Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIODFare2121OK, *THSRAPIODFare2121Status299, error)

	THSRAPIODFare21211(params *THSRAPIODFare21211Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIODFare21211OK, *THSRAPIODFare21211Status299, error)

	THSRAPIShape2129(params *THSRAPIShape2129Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIShape2129OK, *THSRAPIShape2129Status299, error)

	THSRAPIStationExit2132(params *THSRAPIStationExit2132Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIStationExit2132OK, *THSRAPIStationExit2132Status299, error)

	THSRAPIStationTimetable2125(params *THSRAPIStationTimetable2125Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIStationTimetable2125OK, *THSRAPIStationTimetable2125Status299, error)

	THSRAPIStation2120(params *THSRAPIStation2120Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIStation2120OK, *THSRAPIStation2120Status299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  THSRAPIAlertInfo2127 取得即時通阻事件資料s

  取得即時通阻事件資料
*/
func (a *Client) THSRAPIAlertInfo2127(params *THSRAPIAlertInfo2127Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAlertInfo2127OK, *THSRAPIAlertInfo2127Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAlertInfo2127Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_AlertInfo_2127",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AlertInfo",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAlertInfo2127Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIAlertInfo2127OK:
		return value, nil, nil
	case *THSRAPIAlertInfo2127Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIAvailableSeatStatusListStation2130 取得動態對號座剩餘座位資訊看板資料s

  取得動態對號座剩餘座位資訊看板資料
*/
func (a *Client) THSRAPIAvailableSeatStatusListStation2130(params *THSRAPIAvailableSeatStatusListStation2130Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusListStation2130OK, *THSRAPIAvailableSeatStatusListStation2130Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAvailableSeatStatusListStation2130Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_AvailableSeatStatusList_Station_2130",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AvailableSeatStatusList",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAvailableSeatStatusListStation2130Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIAvailableSeatStatusListStation2130OK:
		return value, nil, nil
	case *THSRAPIAvailableSeatStatusListStation2130Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIAvailableSeatStatusListStation21301 取得動態指定s 車站 的對號座剩餘座位資訊看板資料

  取得動態指定[車站]的對號座剩餘座位資訊看板資料
*/
func (a *Client) THSRAPIAvailableSeatStatusListStation21301(params *THSRAPIAvailableSeatStatusListStation21301Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusListStation21301OK, *THSRAPIAvailableSeatStatusListStation21301Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAvailableSeatStatusListStation21301Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_AvailableSeatStatusList_Station_2130_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AvailableSeatStatusList/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAvailableSeatStatusListStation21301Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIAvailableSeatStatusListStation21301OK:
		return value, nil, nil
	case *THSRAPIAvailableSeatStatusListStation21301Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIAvailableSeatStatus2135 開發用測試版s 取得當天對號座即時剩餘位資料 原始 列車區段 leg角度

  取得當天對號座即時剩餘位資料({原始}列車區段Leg角度)
- (更新頻率為10分鐘)
- **(本服務尚在測試中,穩定度及更新頻率將持續優化)**
*/
func (a *Client) THSRAPIAvailableSeatStatus2135(params *THSRAPIAvailableSeatStatus2135Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatus2135OK, *THSRAPIAvailableSeatStatus2135Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAvailableSeatStatus2135Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_AvailableSeatStatus_2135",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AvailableSeatStatus/Train/Leg/Today",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAvailableSeatStatus2135Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIAvailableSeatStatus2135OK:
		return value, nil, nil
	case *THSRAPIAvailableSeatStatus2135Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIAvailableSeatStatus21351 開發用測試版s 取得指定 日期 對號座即時剩餘位資料 原始 列車區段 leg角度

  取得指定[日期]對號座即時剩餘位資料({原始}列車區段Leg角度)
- (更新頻率為每日的10、16、22時)
- **(本服務尚在測試中,穩定度及更新頻率將持續優化)**
*/
func (a *Client) THSRAPIAvailableSeatStatus21351(params *THSRAPIAvailableSeatStatus21351Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatus21351OK, *THSRAPIAvailableSeatStatus21351Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAvailableSeatStatus21351Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_AvailableSeatStatus_2135_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AvailableSeatStatus/Train/Leg/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAvailableSeatStatus21351Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIAvailableSeatStatus21351OK:
		return value, nil, nil
	case *THSRAPIAvailableSeatStatus21351Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIAvailableSeatStatusOD2136 開發用測試版s 取得指定 日期 對號座即時剩餘位資料 加值型列車起迄段 o d角度

  取得指定[日期]對號座即時剩餘位資料(加值型列車起迄段OD角度)
- 當日(D)之更新頻率為每10分鐘
- 當日後27日(D+1~D+27)之更新頻率為每日的10、16、22時
- **(本服務尚在測試中,穩定度及更新頻率將持續優化)**
*/
func (a *Client) THSRAPIAvailableSeatStatusOD2136(params *THSRAPIAvailableSeatStatusOD2136Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusOD2136OK, *THSRAPIAvailableSeatStatusOD2136Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAvailableSeatStatusOD2136Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_AvailableSeatStatus_OD_2136",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AvailableSeatStatus/Train/OD/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAvailableSeatStatusOD2136Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIAvailableSeatStatusOD2136OK:
		return value, nil, nil
	case *THSRAPIAvailableSeatStatusOD2136Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIAvailableSeatStatusOD21361 開發用測試版s 取得指定 日期 起迄站 對號座即時剩餘位資料 加值型列車起迄段 o d角度

  取得指定[日期], [起迄站]對號座即時剩餘位資料(加值型列車起迄段OD角度)
- 當日(D)之更新頻率為每10分鐘
- 當日後27日(D+1~D+27)之更新頻率為每日的10、16、22時
- **(本服務尚在測試中,穩定度及更新頻率將持續優化)**
*/
func (a *Client) THSRAPIAvailableSeatStatusOD21361(params *THSRAPIAvailableSeatStatusOD21361Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusOD21361OK, *THSRAPIAvailableSeatStatusOD21361Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAvailableSeatStatusOD21361Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_AvailableSeatStatus_OD_2136_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AvailableSeatStatus/Train/OD/{OriginStationID}/to/{DestinationStationID}/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAvailableSeatStatusOD21361Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIAvailableSeatStatusOD21361OK:
		return value, nil, nil
	case *THSRAPIAvailableSeatStatusOD21361Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIAvailableSeatStatusOD21362 開發用測試版s 取得指定 日期 車次 起迄站 對號座即時剩餘位資料 加值型列車起迄段 o d角度

  取得指定[日期], [起迄站]對號座即時剩餘位資料(加值型列車起迄段OD角度)
- 當日(D)之更新頻率為每10分鐘
- 當日後27日(D+1~D+27)之更新頻率為每日的10、16、22時
- **(本服務尚在測試中,穩定度及更新頻率將持續優化)**
*/
func (a *Client) THSRAPIAvailableSeatStatusOD21362(params *THSRAPIAvailableSeatStatusOD21362Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIAvailableSeatStatusOD21362OK, *THSRAPIAvailableSeatStatusOD21362Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIAvailableSeatStatusOD21362Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_AvailableSeatStatus_OD_2136_2",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/AvailableSeatStatus/Train/OD/{OriginStationID}/to/{DestinationStationID}/TrainDate/{TrainDate}/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIAvailableSeatStatusOD21362Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIAvailableSeatStatusOD21362OK:
		return value, nil, nil
	case *THSRAPIAvailableSeatStatusOD21362Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIDailyTimetable2124 取得當天所有車次的時刻表資料s

  取得當天所有車次的時刻表資料
*/
func (a *Client) THSRAPIDailyTimetable2124(params *THSRAPIDailyTimetable2124Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable2124OK, *THSRAPIDailyTimetable2124Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTimetable2124Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_DailyTimetable_2124",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/Today",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTimetable2124Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIDailyTimetable2124OK:
		return value, nil, nil
	case *THSRAPIDailyTimetable2124Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIDailyTimetable21241 取得當天指定s 車次 的時刻表資料

  取得當天指定[車次]的時刻表資料
*/
func (a *Client) THSRAPIDailyTimetable21241(params *THSRAPIDailyTimetable21241Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable21241OK, *THSRAPIDailyTimetable21241Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTimetable21241Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_DailyTimetable_2124_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/Today/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTimetable21241Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIDailyTimetable21241OK:
		return value, nil, nil
	case *THSRAPIDailyTimetable21241Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIDailyTimetable21242 取得高鐵每日時刻表所有供應的日期資料s

  取得高鐵每日時刻表所有供應的日期資料
*/
func (a *Client) THSRAPIDailyTimetable21242(params *THSRAPIDailyTimetable21242Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable21242OK, *THSRAPIDailyTimetable21242Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTimetable21242Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_DailyTimetable_2124_2",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/TrainDates",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTimetable21242Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIDailyTimetable21242OK:
		return value, nil, nil
	case *THSRAPIDailyTimetable21242Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIDailyTimetable21243 取得指定s 日期 所有車次的時刻表資料

  取得指定[日期]所有車次的時刻表資料(高鐵提供近28天每日時刻表)
*/
func (a *Client) THSRAPIDailyTimetable21243(params *THSRAPIDailyTimetable21243Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable21243OK, *THSRAPIDailyTimetable21243Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTimetable21243Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_DailyTimetable_2124_3",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTimetable21243Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIDailyTimetable21243OK:
		return value, nil, nil
	case *THSRAPIDailyTimetable21243Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIDailyTimetable21244 取得指定s 日期 車次 的時刻表資料

  取得指定[日期],[車次]的時刻表資料(高鐵提供近28天每日時刻表)
*/
func (a *Client) THSRAPIDailyTimetable21244(params *THSRAPIDailyTimetable21244Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTimetable21244OK, *THSRAPIDailyTimetable21244Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTimetable21244Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_DailyTimetable_2124_4",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/TrainNo/{TrainNo}/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTimetable21244Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIDailyTimetable21244OK:
		return value, nil, nil
	case *THSRAPIDailyTimetable21244Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIDailyTrainInfo2123 取得當天所有車次的車次資料s

  取得當天所有車次的車次資料
*/
func (a *Client) THSRAPIDailyTrainInfo2123(params *THSRAPIDailyTrainInfo2123Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTrainInfo2123OK, *THSRAPIDailyTrainInfo2123Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTrainInfo2123Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_DailyTrainInfo_2123",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTrainInfo/Today",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTrainInfo2123Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIDailyTrainInfo2123OK:
		return value, nil, nil
	case *THSRAPIDailyTrainInfo2123Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIDailyTrainInfo21231 取得當天指定s 車次 的車次資料

  取得當天指定[車次]的車次資料
*/
func (a *Client) THSRAPIDailyTrainInfo21231(params *THSRAPIDailyTrainInfo21231Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTrainInfo21231OK, *THSRAPIDailyTrainInfo21231Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTrainInfo21231Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_DailyTrainInfo_2123_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTrainInfo/Today/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTrainInfo21231Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIDailyTrainInfo21231OK:
		return value, nil, nil
	case *THSRAPIDailyTrainInfo21231Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIDailyTrainInfo21232 取得指定s 日期 所有車次的車次資料

  取得指定[日期]所有車次的車次資料(高鐵提供近28天每日時刻表)
*/
func (a *Client) THSRAPIDailyTrainInfo21232(params *THSRAPIDailyTrainInfo21232Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTrainInfo21232OK, *THSRAPIDailyTrainInfo21232Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTrainInfo21232Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_DailyTrainInfo_2123_2",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTrainInfo/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTrainInfo21232Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIDailyTrainInfo21232OK:
		return value, nil, nil
	case *THSRAPIDailyTrainInfo21232Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIDailyTrainInfo21233 取得指定s 日期 車次 的車次資料

  取得指定[日期],[車次]的車次資料(高鐵提供近28天每日時刻表)
*/
func (a *Client) THSRAPIDailyTrainInfo21233(params *THSRAPIDailyTrainInfo21233Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIDailyTrainInfo21233OK, *THSRAPIDailyTrainInfo21233Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIDailyTrainInfo21233Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_DailyTrainInfo_2123_3",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTrainInfo/TrainNo/{TrainNo}/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIDailyTrainInfo21233Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIDailyTrainInfo21233OK:
		return value, nil, nil
	case *THSRAPIDailyTrainInfo21233Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIGeneralTimetable2122 取得所有車次的定期時刻表資料s

  取得所有車次的定期時刻表資料
*/
func (a *Client) THSRAPIGeneralTimetable2122(params *THSRAPIGeneralTimetable2122Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIGeneralTimetable2122OK, *THSRAPIGeneralTimetable2122Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIGeneralTimetable2122Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_GeneralTimetable_2122",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/GeneralTimetable",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIGeneralTimetable2122Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIGeneralTimetable2122OK:
		return value, nil, nil
	case *THSRAPIGeneralTimetable2122Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIGeneralTimetable21221 取得指定s 車次 的定期時刻表資料

  取得指定[車次]的定期時刻表資料
*/
func (a *Client) THSRAPIGeneralTimetable21221(params *THSRAPIGeneralTimetable21221Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIGeneralTimetable21221OK, *THSRAPIGeneralTimetable21221Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIGeneralTimetable21221Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_GeneralTimetable_2122_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/GeneralTimetable/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIGeneralTimetable21221Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIGeneralTimetable21221OK:
		return value, nil, nil
	case *THSRAPIGeneralTimetable21221Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPINews2128 取得高鐵最新消息資料s

  取得高鐵最新消息資料
*/
func (a *Client) THSRAPINews2128(params *THSRAPINews2128Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPINews2128OK, *THSRAPINews2128Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPINews2128Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_News_2128",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/News",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPINews2128Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPINews2128OK:
		return value, nil, nil
	case *THSRAPINews2128Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIODDailyTimetable2126 取得指定s 日期 起迄站間 之時刻表資料

  取得指定[日期],[起迄站間]之時刻表資料
*/
func (a *Client) THSRAPIODDailyTimetable2126(params *THSRAPIODDailyTimetable2126Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIODDailyTimetable2126OK, *THSRAPIODDailyTimetable2126Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIODDailyTimetable2126Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_ODDailyTimetable_2126",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/OD/{OriginStationID}/to/{DestinationStationID}/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIODDailyTimetable2126Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIODDailyTimetable2126OK:
		return value, nil, nil
	case *THSRAPIODDailyTimetable2126Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIODFare2121 取得票價資料s

  取得票價資料
*/
func (a *Client) THSRAPIODFare2121(params *THSRAPIODFare2121Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIODFare2121OK, *THSRAPIODFare2121Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIODFare2121Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_ODFare_2121",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/ODFare",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIODFare2121Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIODFare2121OK:
		return value, nil, nil
	case *THSRAPIODFare2121Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIODFare21211 取得指定s 起訖站間 之票價資料

  取得指定[起訖站間]之票價資料
*/
func (a *Client) THSRAPIODFare21211(params *THSRAPIODFare21211Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIODFare21211OK, *THSRAPIODFare21211Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIODFare21211Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_ODFare_2121_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/ODFare/{OriginStationID}/to/{DestinationStationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIODFare21211Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIODFare21211OK:
		return value, nil, nil
	case *THSRAPIODFare21211Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIShape2129 取得軌道路網實體路線圖資資料s

  取得軌道路網實體路線圖資資料
*/
func (a *Client) THSRAPIShape2129(params *THSRAPIShape2129Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIShape2129OK, *THSRAPIShape2129Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIShape2129Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_Shape_2129",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/Shape",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIShape2129Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIShape2129OK:
		return value, nil, nil
	case *THSRAPIShape2129Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIStationExit2132 取得車站出入口基本資料s

  取得車站出入口基本資料
*/
func (a *Client) THSRAPIStationExit2132(params *THSRAPIStationExit2132Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIStationExit2132OK, *THSRAPIStationExit2132Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIStationExit2132Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_StationExit_2132",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/StationExit",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIStationExit2132Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIStationExit2132OK:
		return value, nil, nil
	case *THSRAPIStationExit2132Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIStationTimetable2125 取得指定s 日期 車站 的站別時刻表資料

  取得指定[日期],[車站]的站別時刻表資料
*/
func (a *Client) THSRAPIStationTimetable2125(params *THSRAPIStationTimetable2125Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIStationTimetable2125OK, *THSRAPIStationTimetable2125Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIStationTimetable2125Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_StationTimetable_2125",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/DailyTimetable/Station/{StationID}/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIStationTimetable2125Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIStationTimetable2125OK:
		return value, nil, nil
	case *THSRAPIStationTimetable2125Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  THSRAPIStation2120 取得車站基本資料s

  取得車站基本資料
*/
func (a *Client) THSRAPIStation2120(params *THSRAPIStation2120Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*THSRAPIStation2120OK, *THSRAPIStation2120Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTHSRAPIStation2120Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "THSRApi_Station_2120",
		Method:             "GET",
		PathPattern:        "/v2/Rail/THSR/Station",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &THSRAPIStation2120Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *THSRAPIStation2120OK:
		return value, nil, nil
	case *THSRAPIStation2120Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_h_s_r: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
