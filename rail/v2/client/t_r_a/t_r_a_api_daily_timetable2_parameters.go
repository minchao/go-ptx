// Code generated by go-swagger; DO NOT EDIT.

package t_r_a

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewTRAAPIDailyTimetable2Params creates a new TRAAPIDailyTimetable2Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewTRAAPIDailyTimetable2Params() *TRAAPIDailyTimetable2Params {
	return &TRAAPIDailyTimetable2Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewTRAAPIDailyTimetable2ParamsWithTimeout creates a new TRAAPIDailyTimetable2Params object
// with the ability to set a timeout on a request.
func NewTRAAPIDailyTimetable2ParamsWithTimeout(timeout time.Duration) *TRAAPIDailyTimetable2Params {
	return &TRAAPIDailyTimetable2Params{
		timeout: timeout,
	}
}

// NewTRAAPIDailyTimetable2ParamsWithContext creates a new TRAAPIDailyTimetable2Params object
// with the ability to set a context for a request.
func NewTRAAPIDailyTimetable2ParamsWithContext(ctx context.Context) *TRAAPIDailyTimetable2Params {
	return &TRAAPIDailyTimetable2Params{
		Context: ctx,
	}
}

// NewTRAAPIDailyTimetable2ParamsWithHTTPClient creates a new TRAAPIDailyTimetable2Params object
// with the ability to set a custom HTTPClient for a request.
func NewTRAAPIDailyTimetable2ParamsWithHTTPClient(client *http.Client) *TRAAPIDailyTimetable2Params {
	return &TRAAPIDailyTimetable2Params{
		HTTPClient: client,
	}
}

/* TRAAPIDailyTimetable2Params contains all the parameters to send to the API endpoint
   for the t r a Api daily timetable 2 operation.

   Typically these are written to a http.Request.
*/
type TRAAPIDailyTimetable2Params struct {

	/* DollarFormat.

	   指定來源格式
	*/
	DollarFormat string

	/* Health.

	   加入參數'?health=true'即可查詢此API服務的健康狀態
	*/
	Health *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the t r a Api daily timetable 2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TRAAPIDailyTimetable2Params) WithDefaults() *TRAAPIDailyTimetable2Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the t r a Api daily timetable 2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TRAAPIDailyTimetable2Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) WithTimeout(timeout time.Duration) *TRAAPIDailyTimetable2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) WithContext(ctx context.Context) *TRAAPIDailyTimetable2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) WithHTTPClient(client *http.Client) *TRAAPIDailyTimetable2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDollarFormat adds the dollarFormat to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) WithDollarFormat(dollarFormat string) *TRAAPIDailyTimetable2Params {
	o.SetDollarFormat(dollarFormat)
	return o
}

// SetDollarFormat adds the dollarFormat to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) SetDollarFormat(dollarFormat string) {
	o.DollarFormat = dollarFormat
}

// WithHealth adds the health to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) WithHealth(health *string) *TRAAPIDailyTimetable2Params {
	o.SetHealth(health)
	return o
}

// SetHealth adds the health to the t r a Api daily timetable 2 params
func (o *TRAAPIDailyTimetable2Params) SetHealth(health *string) {
	o.Health = health
}

// WriteToRequest writes these params to a swagger request
func (o *TRAAPIDailyTimetable2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param $format
	qrDollarFormat := o.DollarFormat
	qDollarFormat := qrDollarFormat
	if qDollarFormat != "" {

		if err := r.SetQueryParam("$format", qDollarFormat); err != nil {
			return err
		}
	}

	if o.Health != nil {

		// query param health
		var qrHealth string

		if o.Health != nil {
			qrHealth = *o.Health
		}
		qHealth := qrHealth
		if qHealth != "" {

			if err := r.SetQueryParam("health", qHealth); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
