// Code generated by go-swagger; DO NOT EDIT.

package t_r_a

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new t r a API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for t r a API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	TRAAPIDailyTimetable2150(params *TRAAPIDailyTimetable2150Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable2150OK, *TRAAPIDailyTimetable2150Status299, error)

	TRAAPIDailyTimetable21501(params *TRAAPIDailyTimetable21501Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable21501OK, *TRAAPIDailyTimetable21501Status299, error)

	TRAAPIDailyTimetable21502(params *TRAAPIDailyTimetable21502Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable21502OK, *TRAAPIDailyTimetable21502Status299, error)

	TRAAPIDailyTimetable21503(params *TRAAPIDailyTimetable21503Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable21503OK, *TRAAPIDailyTimetable21503Status299, error)

	TRAAPIDailyTimetable21504(params *TRAAPIDailyTimetable21504Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable21504OK, *TRAAPIDailyTimetable21504Status299, error)

	TRAAPIDailyTrainInfo2149(params *TRAAPIDailyTrainInfo2149Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTrainInfo2149OK, *TRAAPIDailyTrainInfo2149Status299, error)

	TRAAPIDailyTrainInfo21491(params *TRAAPIDailyTrainInfo21491Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTrainInfo21491OK, *TRAAPIDailyTrainInfo21491Status299, error)

	TRAAPIDailyTrainInfo21492(params *TRAAPIDailyTrainInfo21492Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTrainInfo21492OK, *TRAAPIDailyTrainInfo21492Status299, error)

	TRAAPIDailyTrainInfo21493(params *TRAAPIDailyTrainInfo21493Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTrainInfo21493OK, *TRAAPIDailyTrainInfo21493Status299, error)

	TRAAPIGeneralTimetable2148(params *TRAAPIGeneralTimetable2148Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIGeneralTimetable2148OK, *TRAAPIGeneralTimetable2148Status299, error)

	TRAAPIGeneralTimetable21481(params *TRAAPIGeneralTimetable21481Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIGeneralTimetable21481OK, *TRAAPIGeneralTimetable21481Status299, error)

	TRAAPIGeneralTrainInfo2147(params *TRAAPIGeneralTrainInfo2147Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIGeneralTrainInfo2147OK, *TRAAPIGeneralTrainInfo2147Status299, error)

	TRAAPIGeneralTrainInfo21471(params *TRAAPIGeneralTrainInfo21471Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIGeneralTrainInfo21471OK, *TRAAPIGeneralTrainInfo21471Status299, error)

	TRAAPILine2142(params *TRAAPILine2142Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPILine2142OK, *TRAAPILine2142Status299, error)

	TRAAPILiveBoard2153(params *TRAAPILiveBoard2153Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPILiveBoard2153OK, *TRAAPILiveBoard2153Status299, error)

	TRAAPILiveBoard21531(params *TRAAPILiveBoard21531Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPILiveBoard21531OK, *TRAAPILiveBoard21531Status299, error)

	TRAAPILiveTrainDelay2154(params *TRAAPILiveTrainDelay2154Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPILiveTrainDelay2154OK, *TRAAPILiveTrainDelay2154Status299, error)

	TRAAPINetwork2140(params *TRAAPINetwork2140Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPINetwork2140OK, *TRAAPINetwork2140Status299, error)

	TRAAPIODDailyTimetable2152(params *TRAAPIODDailyTimetable2152Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIODDailyTimetable2152OK, *TRAAPIODDailyTimetable2152Status299, error)

	TRAAPIODFareStation2146(params *TRAAPIODFareStation2146Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIODFareStation2146OK, *TRAAPIODFareStation2146Status299, error)

	TRAAPIODFareStation21461(params *TRAAPIODFareStation21461Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIODFareStation21461OK, *TRAAPIODFareStation21461Status299, error)

	TRAAPIShape2145(params *TRAAPIShape2145Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIShape2145OK, *TRAAPIShape2145Status299, error)

	TRAAPIStationOfLine2143(params *TRAAPIStationOfLine2143Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIStationOfLine2143OK, *TRAAPIStationOfLine2143Status299, error)

	TRAAPIStationTimetable2151(params *TRAAPIStationTimetable2151Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIStationTimetable2151OK, *TRAAPIStationTimetable2151Status299, error)

	TRAAPIStation2141(params *TRAAPIStation2141Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIStation2141OK, *TRAAPIStation2141Status299, error)

	TRAAPITrainType2144(params *TRAAPITrainType2144Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPITrainType2144OK, *TRAAPITrainType2144Status299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  TRAAPIDailyTimetable2150 取得當天所有車次的時刻表資料s

  取得當天所有車次的時刻表資料
*/
func (a *Client) TRAAPIDailyTimetable2150(params *TRAAPIDailyTimetable2150Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable2150OK, *TRAAPIDailyTimetable2150Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIDailyTimetable2150Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_DailyTimetable_2150",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTimetable/Today",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIDailyTimetable2150Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIDailyTimetable2150OK:
		return value, nil, nil
	case *TRAAPIDailyTimetable2150Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIDailyTimetable21501 取得當天指定s 車次 的時刻表資料

  取得當天指定[車次]的時刻表資料
*/
func (a *Client) TRAAPIDailyTimetable21501(params *TRAAPIDailyTimetable21501Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable21501OK, *TRAAPIDailyTimetable21501Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIDailyTimetable21501Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_DailyTimetable_2150_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTimetable/Today/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIDailyTimetable21501Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIDailyTimetable21501OK:
		return value, nil, nil
	case *TRAAPIDailyTimetable21501Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIDailyTimetable21502 取得台鐵每日時刻表所有供應的日期資料s

  取得台鐵每日時刻表所有供應的日期資料
*/
func (a *Client) TRAAPIDailyTimetable21502(params *TRAAPIDailyTimetable21502Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable21502OK, *TRAAPIDailyTimetable21502Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIDailyTimetable21502Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_DailyTimetable_2150_2",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTimetable/TrainDates",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIDailyTimetable21502Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIDailyTimetable21502OK:
		return value, nil, nil
	case *TRAAPIDailyTimetable21502Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIDailyTimetable21503 取得指定s 日期 所有車次的時刻表資料

  取得指定[日期]所有車次的時刻表資料(台鐵提供近60天每日時刻表)
*/
func (a *Client) TRAAPIDailyTimetable21503(params *TRAAPIDailyTimetable21503Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable21503OK, *TRAAPIDailyTimetable21503Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIDailyTimetable21503Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_DailyTimetable_2150_3",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTimetable/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIDailyTimetable21503Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIDailyTimetable21503OK:
		return value, nil, nil
	case *TRAAPIDailyTimetable21503Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIDailyTimetable21504 取得指定s 日期 車次 的時刻表資料

  取得指定[日期],[車次]的時刻表資料(台鐵提供近60天每日時刻表)
*/
func (a *Client) TRAAPIDailyTimetable21504(params *TRAAPIDailyTimetable21504Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTimetable21504OK, *TRAAPIDailyTimetable21504Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIDailyTimetable21504Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_DailyTimetable_2150_4",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTimetable/TrainNo/{TrainNo}/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIDailyTimetable21504Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIDailyTimetable21504OK:
		return value, nil, nil
	case *TRAAPIDailyTimetable21504Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIDailyTrainInfo2149 取得當天所有車次的車次資料s

  取得當天所有車次的車次資料
*/
func (a *Client) TRAAPIDailyTrainInfo2149(params *TRAAPIDailyTrainInfo2149Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTrainInfo2149OK, *TRAAPIDailyTrainInfo2149Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIDailyTrainInfo2149Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_DailyTrainInfo_2149",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTrainInfo/Today",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIDailyTrainInfo2149Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIDailyTrainInfo2149OK:
		return value, nil, nil
	case *TRAAPIDailyTrainInfo2149Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIDailyTrainInfo21491 取得當天指定s 車次 的車次資料

  取得當天指定[車次]的車次資料
*/
func (a *Client) TRAAPIDailyTrainInfo21491(params *TRAAPIDailyTrainInfo21491Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTrainInfo21491OK, *TRAAPIDailyTrainInfo21491Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIDailyTrainInfo21491Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_DailyTrainInfo_2149_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTrainInfo/Today/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIDailyTrainInfo21491Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIDailyTrainInfo21491OK:
		return value, nil, nil
	case *TRAAPIDailyTrainInfo21491Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIDailyTrainInfo21492 取得指定s 日期 所有車次的車次資料

  取得指定[日期]所有車次的車次資料(台鐵提供近60天每日時刻表)
*/
func (a *Client) TRAAPIDailyTrainInfo21492(params *TRAAPIDailyTrainInfo21492Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTrainInfo21492OK, *TRAAPIDailyTrainInfo21492Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIDailyTrainInfo21492Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_DailyTrainInfo_2149_2",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTrainInfo/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIDailyTrainInfo21492Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIDailyTrainInfo21492OK:
		return value, nil, nil
	case *TRAAPIDailyTrainInfo21492Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIDailyTrainInfo21493 取得指定s 日期 與 車次 的車次資料

  取得指定[日期]與[車次]的車次資料(台鐵提供近60天每日時刻表)
*/
func (a *Client) TRAAPIDailyTrainInfo21493(params *TRAAPIDailyTrainInfo21493Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIDailyTrainInfo21493OK, *TRAAPIDailyTrainInfo21493Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIDailyTrainInfo21493Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_DailyTrainInfo_2149_3",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTrainInfo/TrainNo/{TrainNo}/TrainDate/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIDailyTrainInfo21493Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIDailyTrainInfo21493OK:
		return value, nil, nil
	case *TRAAPIDailyTrainInfo21493Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIGeneralTimetable2148 取得所有車次的定期時刻表資料s

  取得所有車次的定期時刻表資料
*/
func (a *Client) TRAAPIGeneralTimetable2148(params *TRAAPIGeneralTimetable2148Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIGeneralTimetable2148OK, *TRAAPIGeneralTimetable2148Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIGeneralTimetable2148Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_GeneralTimetable_2148",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/GeneralTimetable",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIGeneralTimetable2148Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIGeneralTimetable2148OK:
		return value, nil, nil
	case *TRAAPIGeneralTimetable2148Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIGeneralTimetable21481 取得指定s 車次 的定期時刻表資料

  取得指定[車次]的定期時刻表資料
*/
func (a *Client) TRAAPIGeneralTimetable21481(params *TRAAPIGeneralTimetable21481Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIGeneralTimetable21481OK, *TRAAPIGeneralTimetable21481Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIGeneralTimetable21481Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_GeneralTimetable_2148_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/GeneralTimetable/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIGeneralTimetable21481Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIGeneralTimetable21481OK:
		return value, nil, nil
	case *TRAAPIGeneralTimetable21481Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIGeneralTrainInfo2147 取得所有車次的定期車次資料s

  取得所有車次的定期車次資料
*/
func (a *Client) TRAAPIGeneralTrainInfo2147(params *TRAAPIGeneralTrainInfo2147Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIGeneralTrainInfo2147OK, *TRAAPIGeneralTrainInfo2147Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIGeneralTrainInfo2147Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_GeneralTrainInfo_2147",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/GeneralTrainInfo",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIGeneralTrainInfo2147Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIGeneralTrainInfo2147OK:
		return value, nil, nil
	case *TRAAPIGeneralTrainInfo2147Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIGeneralTrainInfo21471 取得指定s 車次 的定期車次資料

  取得指定[車次]的定期車次資料
*/
func (a *Client) TRAAPIGeneralTrainInfo21471(params *TRAAPIGeneralTrainInfo21471Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIGeneralTrainInfo21471OK, *TRAAPIGeneralTrainInfo21471Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIGeneralTrainInfo21471Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_GeneralTrainInfo_2147_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/GeneralTrainInfo/TrainNo/{TrainNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIGeneralTrainInfo21471Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIGeneralTrainInfo21471OK:
		return value, nil, nil
	case *TRAAPIGeneralTrainInfo21471Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPILine2142 取得路線基本資料s

  取得路線基本資料
*/
func (a *Client) TRAAPILine2142(params *TRAAPILine2142Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPILine2142OK, *TRAAPILine2142Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPILine2142Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_Line_2142",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/Line",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPILine2142Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPILine2142OK:
		return value, nil, nil
	case *TRAAPILine2142Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPILiveBoard2153 取得車站別列車即時到離站電子看板s 動態前後30分鐘的車次

  取得車站別列車即時到離站電子看板(動態前後30分鐘的車次)。更新頻率：2分鐘。此資料已過濾離站車次資訊
*/
func (a *Client) TRAAPILiveBoard2153(params *TRAAPILiveBoard2153Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPILiveBoard2153OK, *TRAAPILiveBoard2153Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPILiveBoard2153Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_LiveBoard_2153",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/LiveBoard",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPILiveBoard2153Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPILiveBoard2153OK:
		return value, nil, nil
	case *TRAAPILiveBoard2153Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPILiveBoard21531 取得指定s 車站 列車即時到離站電子看板 動態前後30分鐘的車次

  取得指定[車站]列車即時到離站電子看板(動態前後30分鐘的車次)。更新頻率：2分鐘。此資料已過濾離站車次資訊
*/
func (a *Client) TRAAPILiveBoard21531(params *TRAAPILiveBoard21531Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPILiveBoard21531OK, *TRAAPILiveBoard21531Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPILiveBoard21531Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_LiveBoard_2153_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/LiveBoard/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPILiveBoard21531Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPILiveBoard21531OK:
		return value, nil, nil
	case *TRAAPILiveBoard21531Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPILiveTrainDelay2154 取得列車即時準點s 延誤時間資料

  取得列車即時準點/延誤時間資料。更新頻率：2分鐘
*/
func (a *Client) TRAAPILiveTrainDelay2154(params *TRAAPILiveTrainDelay2154Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPILiveTrainDelay2154OK, *TRAAPILiveTrainDelay2154Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPILiveTrainDelay2154Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_LiveTrainDelay_2154",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/LiveTrainDelay",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPILiveTrainDelay2154Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPILiveTrainDelay2154OK:
		return value, nil, nil
	case *TRAAPILiveTrainDelay2154Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPINetwork2140 取得臺鐵路網資料s

  取得臺鐵路網資料
*/
func (a *Client) TRAAPINetwork2140(params *TRAAPINetwork2140Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPINetwork2140OK, *TRAAPINetwork2140Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPINetwork2140Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_Network_2140",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/Network",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPINetwork2140Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPINetwork2140OK:
		return value, nil, nil
	case *TRAAPINetwork2140Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIODDailyTimetable2152 取得指定s 日期 起迄站間 之站間時刻表資料

  取得指定[日期],[起迄站間]之站間時刻表資料
*/
func (a *Client) TRAAPIODDailyTimetable2152(params *TRAAPIODDailyTimetable2152Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIODDailyTimetable2152OK, *TRAAPIODDailyTimetable2152Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIODDailyTimetable2152Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_ODDailyTimetable_2152",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTimetable/OD/{OriginStationID}/to/{DestinationStationID}/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIODDailyTimetable2152Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIODDailyTimetable2152OK:
		return value, nil, nil
	case *TRAAPIODDailyTimetable2152Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIODFareStation2146 取得票價資料s

  取得票價資料
*/
func (a *Client) TRAAPIODFareStation2146(params *TRAAPIODFareStation2146Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIODFareStation2146OK, *TRAAPIODFareStation2146Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIODFareStation2146Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_ODFareStation_2146",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/ODFare",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIODFareStation2146Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIODFareStation2146OK:
		return value, nil, nil
	case *TRAAPIODFareStation2146Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIODFareStation21461 取得指定s 起訖站間 之票價資料

  取得指定[起訖站間]之票價資料
*/
func (a *Client) TRAAPIODFareStation21461(params *TRAAPIODFareStation21461Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIODFareStation21461OK, *TRAAPIODFareStation21461Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIODFareStation21461Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_ODFareStation_2146_1",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/ODFare/{OriginStationID}/to/{DestinationStationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIODFareStation21461Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIODFareStation21461OK:
		return value, nil, nil
	case *TRAAPIODFareStation21461Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIShape2145 取得軌道路網實體路線圖資資料s

  取得軌道路網實體路線圖資資料
*/
func (a *Client) TRAAPIShape2145(params *TRAAPIShape2145Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIShape2145OK, *TRAAPIShape2145Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIShape2145Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_Shape_2145",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/Shape",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIShape2145Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIShape2145OK:
		return value, nil, nil
	case *TRAAPIShape2145Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIStationOfLine2143 取得路線車站基本資料s

  取得路線車站基本資料
*/
func (a *Client) TRAAPIStationOfLine2143(params *TRAAPIStationOfLine2143Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIStationOfLine2143OK, *TRAAPIStationOfLine2143Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIStationOfLine2143Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_StationOfLine_2143",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/StationOfLine",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIStationOfLine2143Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIStationOfLine2143OK:
		return value, nil, nil
	case *TRAAPIStationOfLine2143Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIStationTimetable2151 取得指定s 日期 車站 的站別時刻表資料

  取得指定[日期],[車站]的站別時刻表資料
*/
func (a *Client) TRAAPIStationTimetable2151(params *TRAAPIStationTimetable2151Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIStationTimetable2151OK, *TRAAPIStationTimetable2151Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIStationTimetable2151Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_StationTimetable_2151",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/DailyTimetable/Station/{StationID}/{TrainDate}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIStationTimetable2151Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIStationTimetable2151OK:
		return value, nil, nil
	case *TRAAPIStationTimetable2151Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPIStation2141 取得車站基本資料s

  取得車站基本資料
*/
func (a *Client) TRAAPIStation2141(params *TRAAPIStation2141Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPIStation2141OK, *TRAAPIStation2141Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPIStation2141Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_Station_2141",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/Station",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPIStation2141Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPIStation2141OK:
		return value, nil, nil
	case *TRAAPIStation2141Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TRAAPITrainType2144 取得所有列車車種資料s

  取得所有列車車種資料
*/
func (a *Client) TRAAPITrainType2144(params *TRAAPITrainType2144Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*TRAAPITrainType2144OK, *TRAAPITrainType2144Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTRAAPITrainType2144Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "TRAApi_TrainType_2144",
		Method:             "GET",
		PathPattern:        "/v2/Rail/TRA/TrainType",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TRAAPITrainType2144Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *TRAAPITrainType2144OK:
		return value, nil, nil
	case *TRAAPITrainType2144Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for t_r_a: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
