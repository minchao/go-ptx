// Code generated by go-swagger; DO NOT EDIT.

package inter_city_bus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new inter city bus API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for inter city bus API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
InterCityBusAPIDataVersion 取得公路客運的動態定時資料s a1

公路客運之定時資料(A1)
*/
func (a *Client) InterCityBusAPIDataVersion(params *InterCityBusAPIDataVersionParams) (*InterCityBusAPIDataVersionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIDataVersionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_DataVersion",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DataVersion/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml", "text/json", "text/xml"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIDataVersionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIDataVersionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_DataVersion: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIEstimatedTimeOfArrival 取得公路客運的預估到站資料s n1

公路客運之預估到站資料(N1)(不保留[現在時間]超過[本平台資料更新時間]兩分鐘的資料)
*/
func (a *Client) InterCityBusAPIEstimatedTimeOfArrival(params *InterCityBusAPIEstimatedTimeOfArrivalParams) (*InterCityBusAPIEstimatedTimeOfArrivalOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIEstimatedTimeOfArrivalParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_EstimatedTimeOfArrival",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIEstimatedTimeOfArrivalReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIEstimatedTimeOfArrivalOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_EstimatedTimeOfArrival: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIEstimatedTimeOfArrival1 取得指定s 路線名稱 的公路客運預估到站資料 n1

公路客運之預估到站資料(N1)(不保留[現在時間]超過[本平台資料更新時間]兩分鐘的資料)
*/
func (a *Client) InterCityBusAPIEstimatedTimeOfArrival1(params *InterCityBusAPIEstimatedTimeOfArrival1Params) (*InterCityBusAPIEstimatedTimeOfArrival1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIEstimatedTimeOfArrival1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_EstimatedTimeOfArrival_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIEstimatedTimeOfArrival1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIEstimatedTimeOfArrival1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_EstimatedTimeOfArrival_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPINews 取得公路客運之最新消息s

公路客運之最新消息
*/
func (a *Client) InterCityBusAPINews(params *InterCityBusAPINewsParams) (*InterCityBusAPINewsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPINewsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_News",
		Method:             "GET",
		PathPattern:        "/v2/Bus/News/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPINewsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPINewsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_News: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIOperator 取得公路客運的營運業者資料s

公路客運之營運業者資料
*/
func (a *Client) InterCityBusAPIOperator(params *InterCityBusAPIOperatorParams) (*InterCityBusAPIOperatorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIOperatorParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_Operator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Operator/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIOperatorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_Operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIRealTimeByFrequency 取得公路客運的動態定時資料s a1

公路客運之定時資料(A1)
*/
func (a *Client) InterCityBusAPIRealTimeByFrequency(params *InterCityBusAPIRealTimeByFrequencyParams) (*InterCityBusAPIRealTimeByFrequencyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeByFrequencyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeByFrequency",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeByFrequencyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIRealTimeByFrequencyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_RealTimeByFrequency: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIRealTimeByFrequency1 取得指定s 路線名稱 的公路客運動態定時資料 a1

公路客運之定時資料(A1)
*/
func (a *Client) InterCityBusAPIRealTimeByFrequency1(params *InterCityBusAPIRealTimeByFrequency1Params) (*InterCityBusAPIRealTimeByFrequency1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeByFrequency1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeByFrequency_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeByFrequency1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIRealTimeByFrequency1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_RealTimeByFrequency_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIRealTimeNearStop 取得公路客運的動態定點資料s a2

公路客運之定點資料(A2)
*/
func (a *Client) InterCityBusAPIRealTimeNearStop(params *InterCityBusAPIRealTimeNearStopParams) (*InterCityBusAPIRealTimeNearStopOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeNearStopParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeNearStop",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeNearStopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIRealTimeNearStopOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_RealTimeNearStop: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIRealTimeNearStop1 取得指定s 路線名稱 的公路客運動態定點資料 a2

公路客運之定點資料(A2)
*/
func (a *Client) InterCityBusAPIRealTimeNearStop1(params *InterCityBusAPIRealTimeNearStop1Params) (*InterCityBusAPIRealTimeNearStop1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeNearStop1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeNearStop_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeNearStop1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIRealTimeNearStop1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_RealTimeNearStop_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIRoute 取得公路客運路線資料s

公路客運之路線資料
*/
func (a *Client) InterCityBusAPIRoute(params *InterCityBusAPIRouteParams) (*InterCityBusAPIRouteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_Route",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIRouteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_Route: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIRouteFare 取得公路客運之路線票價資料s

公路客運之路線票價資料
*/
func (a *Client) InterCityBusAPIRouteFare(params *InterCityBusAPIRouteFareParams) (*InterCityBusAPIRouteFareOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRouteFareParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_RouteFare",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRouteFareReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIRouteFareOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_RouteFare: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIRouteFare1 取得指定s 路線名稱 的公路客運路線資料

公路客運之路線資料
*/
func (a *Client) InterCityBusAPIRouteFare1(params *InterCityBusAPIRouteFare1Params) (*InterCityBusAPIRouteFare1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRouteFare1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_RouteFare_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRouteFare1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIRouteFare1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_RouteFare_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIRoute1 取得指定s 路線名稱 的公路客運路線資料

公路客運之路線資料
*/
func (a *Client) InterCityBusAPIRoute1(params *InterCityBusAPIRoute1Params) (*InterCityBusAPIRoute1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRoute1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_Route_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIRoute1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_Route_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPISchedule 取得公路客運路線班表資料s

公路客運之預定班表及班距資料。公路及國道客運多採用【班表】式時刻表
*/
func (a *Client) InterCityBusAPISchedule(params *InterCityBusAPIScheduleParams) (*InterCityBusAPIScheduleOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIScheduleParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_Schedule",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIScheduleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIScheduleOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_Schedule: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPISchedule1 取得指定s 路線名稱 的公路客運路線班表資料

公路客運之預定班表及班距資料。公路及國道客運多採用【班表】式時刻表
*/
func (a *Client) InterCityBusAPISchedule1(params *InterCityBusAPISchedule1Params) (*InterCityBusAPISchedule1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPISchedule1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_Schedule_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPISchedule1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPISchedule1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_Schedule_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIStation 取得公路客運站位資料s

公路客運之各站牌所屬的站位資料
*/
func (a *Client) InterCityBusAPIStation(params *InterCityBusAPIStationParams) (*InterCityBusAPIStationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_Station",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Station/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIStationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_Station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIStationName 取得公路客運站名碼資料s

公路客運之各站牌所屬的站名碼資料
*/
func (a *Client) InterCityBusAPIStationName(params *InterCityBusAPIStationNameParams) (*InterCityBusAPIStationNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStationNameParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_StationName",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StationName/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStationNameReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIStationNameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_StationName: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIStop 取得公路客運站牌資料s

公路客運之站牌資料
*/
func (a *Client) InterCityBusAPIStop(params *InterCityBusAPIStopParams) (*InterCityBusAPIStopOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_Stop",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIStopOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_Stop: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIStopOfRoute 取得公路客運路線與站牌資料s

公路客運之路線與站牌資料
*/
func (a *Client) InterCityBusAPIStopOfRoute(params *InterCityBusAPIStopOfRouteParams) (*InterCityBusAPIStopOfRouteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopOfRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_StopOfRoute",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopOfRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIStopOfRouteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_StopOfRoute: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIStopOfRoute1 取得指定s 路線名稱 的公路客運路線與站牌資料

公路客運之路線與站牌資料
*/
func (a *Client) InterCityBusAPIStopOfRoute1(params *InterCityBusAPIStopOfRoute1Params) (*InterCityBusAPIStopOfRoute1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopOfRoute1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_StopOfRoute_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopOfRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIStopOfRoute1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_StopOfRoute_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
InterCityBusAPIVehicle 取得公路客運之車輛資料s

公路客運之車輛資料
*/
func (a *Client) InterCityBusAPIVehicle(params *InterCityBusAPIVehicleParams) (*InterCityBusAPIVehicleOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIVehicleParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InterCityBusApi_Vehicle",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Vehicle/InterCity",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIVehicleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterCityBusAPIVehicleOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InterCityBusApi_Vehicle: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
