// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion2BusSpecialDay SpecialDay
// swagger:model Service.DTO.Version2.Bus.SpecialDay
type ServiceDTOVersion2BusSpecialDay struct {

	// DatePeriod
	//
	// 連續特殊日期
	DatePeriod *ServiceDTOVersion2BusDatePeriod `json:"DatePeriod,omitempty"`

	// 不連續特殊日期
	Dates []string `json:"Dates"`

	// 特殊營運描述
	Description string `json:"Description,omitempty"`

	// 營運服務狀態代碼
	// Enum: [0: 正常營運 1: 加班營運 2: 取消/停駛營運]
	ServiceStatus string `json:"ServiceStatus,omitempty"`
}

// Validate validates this service d t o version2 bus special day
func (m *ServiceDTOVersion2BusSpecialDay) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDatePeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion2BusSpecialDay) validateDatePeriod(formats strfmt.Registry) error {

	if swag.IsZero(m.DatePeriod) { // not required
		return nil
	}

	if m.DatePeriod != nil {
		if err := m.DatePeriod.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DatePeriod")
			}
			return err
		}
	}

	return nil
}

var serviceDTOVersion2BusSpecialDayTypeServiceStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["0: 正常營運","1: 加班營運","2: 取消/停駛營運"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		serviceDTOVersion2BusSpecialDayTypeServiceStatusPropEnum = append(serviceDTOVersion2BusSpecialDayTypeServiceStatusPropEnum, v)
	}
}

const (

	// ServiceDTOVersion2BusSpecialDayServiceStatusNr0正常營運 captures enum value "0: 正常營運"
	ServiceDTOVersion2BusSpecialDayServiceStatusNr0正常營運 string = "0: 正常營運"

	// ServiceDTOVersion2BusSpecialDayServiceStatusNr1加班營運 captures enum value "1: 加班營運"
	ServiceDTOVersion2BusSpecialDayServiceStatusNr1加班營運 string = "1: 加班營運"

	// ServiceDTOVersion2BusSpecialDayServiceStatusNr2取消停駛營運 captures enum value "2: 取消/停駛營運"
	ServiceDTOVersion2BusSpecialDayServiceStatusNr2取消停駛營運 string = "2: 取消/停駛營運"
)

// prop value enum
func (m *ServiceDTOVersion2BusSpecialDay) validateServiceStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, serviceDTOVersion2BusSpecialDayTypeServiceStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ServiceDTOVersion2BusSpecialDay) validateServiceStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateServiceStatusEnum("ServiceStatus", "body", m.ServiceStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion2BusSpecialDay) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion2BusSpecialDay) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion2BusSpecialDay
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
