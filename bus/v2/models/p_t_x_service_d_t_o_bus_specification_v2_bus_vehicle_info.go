// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOBusSpecificationV2BusVehicleInfo BusVehicleInfo
//
// 公車車輛基本資料
//
// swagger:model PTX.Service.DTO.Bus.Specification.V2.BusVehicleInfo
type PTXServiceDTOBusSpecificationV2BusVehicleInfo struct {

	// String
	//
	// 車牌號碼
	// Required: true
	PlateNumb *string `json:"PlateNumb" xml:"String"`

	// DateTime
	//
	// 資料更新日期時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz)
	// Required: true
	// Format: date-time
	UpdateTime *strfmt.DateTime `json:"UpdateTime"`

	// Int32
	//
	// 車輛種類 : [0:'一般',1:'無障礙公車',2:'復康巴士',3:'小型巴士']
	// Required: true
	VehicleType *int64 `json:"VehicleType"`
}

// Validate validates this p t x service d t o bus specification v2 bus vehicle info
func (m *PTXServiceDTOBusSpecificationV2BusVehicleInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePlateNumb(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVehicleType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusVehicleInfo) validatePlateNumb(formats strfmt.Registry) error {

	if err := validate.Required("PlateNumb", "body", m.PlateNumb); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusVehicleInfo) validateUpdateTime(formats strfmt.Registry) error {

	if err := validate.Required("UpdateTime", "body", m.UpdateTime); err != nil {
		return err
	}

	if err := validate.FormatOf("UpdateTime", "body", "date-time", m.UpdateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusVehicleInfo) validateVehicleType(formats strfmt.Registry) error {

	if err := validate.Required("VehicleType", "body", m.VehicleType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this p t x service d t o bus specification v2 bus vehicle info based on context it is used
func (m *PTXServiceDTOBusSpecificationV2BusVehicleInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV2BusVehicleInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV2BusVehicleInfo) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOBusSpecificationV2BusVehicleInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
