// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOBusSpecificationV2BusODFare BusODFare
//
// 起迄站間計費
//
// swagger:model PTX.Service.DTO.Bus.Specification.V2.BusODFare
type PTXServiceDTOBusSpecificationV2BusODFare struct {

	// Stop
	//
	// 計費迄點站牌資訊
	// Required: true
	DestinationStop struct {
		PTXServiceDTOBusSpecificationV2BusRouteFareStop
	} `json:"DestinationStop" xml:"Stop"`

	// integer
	//
	// 方向性描述 : [0:'去程',1:'返程',2:'迴圈',255:'未知']
	// Required: true
	Direction *int64 `json:"Direction"`

	// Array
	//
	// 票價內容
	// Required: true
	Fares []*PTXServiceDTOBusSpecificationV2BusRouteFareFare "json:\"Fares\" xml:\"List`1\""

	// Stop
	//
	// 計費起點站牌資訊
	// Required: true
	OriginStop struct {
		PTXServiceDTOBusSpecificationV2BusRouteFareStop
	} `json:"OriginStop" xml:"Stop"`
}

// Validate validates this p t x service d t o bus specification v2 bus o d fare
func (m *PTXServiceDTOBusSpecificationV2BusODFare) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDestinationStop(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFares(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginStop(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusODFare) validateDestinationStop(formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusODFare) validateDirection(formats strfmt.Registry) error {

	if err := validate.Required("Direction", "body", m.Direction); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusODFare) validateFares(formats strfmt.Registry) error {

	if err := validate.Required("Fares", "body", m.Fares); err != nil {
		return err
	}

	for i := 0; i < len(m.Fares); i++ {
		if swag.IsZero(m.Fares[i]) { // not required
			continue
		}

		if m.Fares[i] != nil {
			if err := m.Fares[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Fares" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusODFare) validateOriginStop(formats strfmt.Registry) error {

	return nil
}

// ContextValidate validate this p t x service d t o bus specification v2 bus o d fare based on the context it is used
func (m *PTXServiceDTOBusSpecificationV2BusODFare) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDestinationStop(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateFares(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateOriginStop(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusODFare) contextValidateDestinationStop(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusODFare) contextValidateFares(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Fares); i++ {

		if m.Fares[i] != nil {
			if err := m.Fares[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Fares" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV2BusODFare) contextValidateOriginStop(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV2BusODFare) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV2BusODFare) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOBusSpecificationV2BusODFare
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
