// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion2BusFirstLastTrip FirstLastTrip
//
// 首末班車資料型別
//
// swagger:model Service.DTO.Version2.Bus.FirstLastTrip
type ServiceDTOVersion2BusFirstLastTrip struct {

	// 頭班車發車時間(HH:mm)
	// Required: true
	FirstTripDepTime *string `json:"FirstTripDepTime"`

	// 末班車發車時間(HH:mm)
	// Required: true
	LastTripDepTime *string `json:"LastTripDepTime"`

	// ServiceDay
	//
	// 服務日型態
	// Required: true
	ServiceDay *ServiceDTOVersion2BusBusFirstLastTripInfoServiceDay `json:"ServiceDay"`
}

// Validate validates this service d t o version2 bus first last trip
func (m *ServiceDTOVersion2BusFirstLastTrip) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFirstTripDepTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastTripDepTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceDay(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion2BusFirstLastTrip) validateFirstTripDepTime(formats strfmt.Registry) error {

	if err := validate.Required("FirstTripDepTime", "body", m.FirstTripDepTime); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion2BusFirstLastTrip) validateLastTripDepTime(formats strfmt.Registry) error {

	if err := validate.Required("LastTripDepTime", "body", m.LastTripDepTime); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion2BusFirstLastTrip) validateServiceDay(formats strfmt.Registry) error {

	if err := validate.Required("ServiceDay", "body", m.ServiceDay); err != nil {
		return err
	}

	if m.ServiceDay != nil {
		if err := m.ServiceDay.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ServiceDay")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion2BusFirstLastTrip) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion2BusFirstLastTrip) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion2BusFirstLastTrip
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
