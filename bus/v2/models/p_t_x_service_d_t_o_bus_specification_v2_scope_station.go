// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PTXServiceDTOBusSpecificationV2ScopeStation Station
//
// 站位資料
//
// swagger:model PTX.Service.DTO.Bus.Specification.V2.Scope+Station
type PTXServiceDTOBusSpecificationV2ScopeStation struct {

	// String
	//
	// 站位代碼
	StationID string `json:"StationID,omitempty"`

	// NameType
	//
	// 站位名稱
	StationName struct {
		PTXServiceDTOSharedSpecificationV2BaseNameType
	} `json:"StationName,omitempty"`
}

// Validate validates this p t x service d t o bus specification v2 scope station
func (m *PTXServiceDTOBusSpecificationV2ScopeStation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStationName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV2ScopeStation) validateStationName(formats strfmt.Registry) error {
	if swag.IsZero(m.StationName) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this p t x service d t o bus specification v2 scope station based on the context it is used
func (m *PTXServiceDTOBusSpecificationV2ScopeStation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateStationName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV2ScopeStation) contextValidateStationName(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV2ScopeStation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV2ScopeStation) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOBusSpecificationV2ScopeStation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
