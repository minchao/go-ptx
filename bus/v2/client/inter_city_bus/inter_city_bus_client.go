// Code generated by go-swagger; DO NOT EDIT.

package inter_city_bus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new inter city bus API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for inter city bus API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	InterCityBusAPIAlert(params *InterCityBusAPIAlertParams, opts ...ClientOption) (*InterCityBusAPIAlertOK, *InterCityBusAPIAlertStatus299, error)

	InterCityBusAPIDataVersion(params *InterCityBusAPIDataVersionParams, opts ...ClientOption) (*InterCityBusAPIDataVersionOK, *InterCityBusAPIDataVersionStatus299, error)

	InterCityBusAPIEstimatedTimeOfArrival(params *InterCityBusAPIEstimatedTimeOfArrivalParams, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrivalOK, *InterCityBusAPIEstimatedTimeOfArrivalStatus299, error)

	InterCityBusAPIEstimatedTimeOfArrival1(params *InterCityBusAPIEstimatedTimeOfArrival1Params, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrival1OK, *InterCityBusAPIEstimatedTimeOfArrival1Status299, error)

	InterCityBusAPIEstimatedTimeOfArrivalUDP(params *InterCityBusAPIEstimatedTimeOfArrivalUDPParams, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrivalUDPOK, *InterCityBusAPIEstimatedTimeOfArrivalUDPStatus299, error)

	InterCityBusAPIEstimatedTimeOfArrivalUDP1(params *InterCityBusAPIEstimatedTimeOfArrivalUDP1Params, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrivalUdp1OK, *InterCityBusAPIEstimatedTimeOfArrivalUdp1Status299, error)

	InterCityBusAPINews(params *InterCityBusAPINewsParams, opts ...ClientOption) (*InterCityBusAPINewsOK, *InterCityBusAPINewsStatus299, error)

	InterCityBusAPIOperator(params *InterCityBusAPIOperatorParams, opts ...ClientOption) (*InterCityBusAPIOperatorOK, *InterCityBusAPIOperatorStatus299, error)

	InterCityBusAPIRealTimeByFrequency(params *InterCityBusAPIRealTimeByFrequencyParams, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyOK, *InterCityBusAPIRealTimeByFrequencyStatus299, error)

	InterCityBusAPIRealTimeByFrequency1(params *InterCityBusAPIRealTimeByFrequency1Params, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequency1OK, *InterCityBusAPIRealTimeByFrequency1Status299, error)

	InterCityBusAPIRealTimeByFrequencyUDP(params *InterCityBusAPIRealTimeByFrequencyUDPParams, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyUDPOK, *InterCityBusAPIRealTimeByFrequencyUDPStatus299, error)

	InterCityBusAPIRealTimeByFrequencyUDP1(params *InterCityBusAPIRealTimeByFrequencyUDP1Params, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyUdp1OK, *InterCityBusAPIRealTimeByFrequencyUdp1Status299, error)

	InterCityBusAPIRealTimeNearStop(params *InterCityBusAPIRealTimeNearStopParams, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopOK, *InterCityBusAPIRealTimeNearStopStatus299, error)

	InterCityBusAPIRealTimeNearStop1(params *InterCityBusAPIRealTimeNearStop1Params, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStop1OK, *InterCityBusAPIRealTimeNearStop1Status299, error)

	InterCityBusAPIRealTimeNearStopUDP(params *InterCityBusAPIRealTimeNearStopUDPParams, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopUDPOK, *InterCityBusAPIRealTimeNearStopUDPStatus299, error)

	InterCityBusAPIRealTimeNearStopUDP1(params *InterCityBusAPIRealTimeNearStopUDP1Params, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopUdp1OK, *InterCityBusAPIRealTimeNearStopUdp1Status299, error)

	InterCityBusAPIRoute(params *InterCityBusAPIRouteParams, opts ...ClientOption) (*InterCityBusAPIRouteOK, *InterCityBusAPIRouteStatus299, error)

	InterCityBusAPIRouteFare(params *InterCityBusAPIRouteFareParams, opts ...ClientOption) (*InterCityBusAPIRouteFareOK, *InterCityBusAPIRouteFareStatus299, error)

	InterCityBusAPIRouteFare1(params *InterCityBusAPIRouteFare1Params, opts ...ClientOption) (*InterCityBusAPIRouteFare1OK, *InterCityBusAPIRouteFare1Status299, error)

	InterCityBusAPIRoute1(params *InterCityBusAPIRoute1Params, opts ...ClientOption) (*InterCityBusAPIRoute1OK, *InterCityBusAPIRoute1Status299, error)

	InterCityBusAPIS2STravelTimeDetail(params *InterCityBusAPIS2STravelTimeDetailParams, opts ...ClientOption) (*InterCityBusAPIS2STravelTimeDetailOK, *InterCityBusAPIS2STravelTimeDetailStatus299, error)

	InterCityBusAPISchedule(params *InterCityBusAPIScheduleParams, opts ...ClientOption) (*InterCityBusAPIScheduleOK, *InterCityBusAPIScheduleStatus299, error)

	InterCityBusAPISchedule1(params *InterCityBusAPISchedule1Params, opts ...ClientOption) (*InterCityBusAPISchedule1OK, *InterCityBusAPISchedule1Status299, error)

	InterCityBusAPIShape(params *InterCityBusAPIShapeParams, opts ...ClientOption) (*InterCityBusAPIShapeOK, *InterCityBusAPIShapeStatus299, error)

	InterCityBusAPIShape1(params *InterCityBusAPIShape1Params, opts ...ClientOption) (*InterCityBusAPIShape1OK, *InterCityBusAPIShape1Status299, error)

	InterCityBusAPIStation(params *InterCityBusAPIStationParams, opts ...ClientOption) (*InterCityBusAPIStationOK, *InterCityBusAPIStationStatus299, error)

	InterCityBusAPIStationGroup(params *InterCityBusAPIStationGroupParams, opts ...ClientOption) (*InterCityBusAPIStationGroupOK, *InterCityBusAPIStationGroupStatus299, error)

	InterCityBusAPIStop(params *InterCityBusAPIStopParams, opts ...ClientOption) (*InterCityBusAPIStopOK, *InterCityBusAPIStopStatus299, error)

	InterCityBusAPIStopOfRoute(params *InterCityBusAPIStopOfRouteParams, opts ...ClientOption) (*InterCityBusAPIStopOfRouteOK, *InterCityBusAPIStopOfRouteStatus299, error)

	InterCityBusAPIStopOfRoute1(params *InterCityBusAPIStopOfRoute1Params, opts ...ClientOption) (*InterCityBusAPIStopOfRoute1OK, *InterCityBusAPIStopOfRoute1Status299, error)

	InterCityBusAPIVehicle(params *InterCityBusAPIVehicleParams, opts ...ClientOption) (*InterCityBusAPIVehicleOK, *InterCityBusAPIVehicleStatus299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  InterCityBusAPIAlert 取得公路客運之營運通阻資料s

  公路客運之營運通阻資料
*/
func (a *Client) InterCityBusAPIAlert(params *InterCityBusAPIAlertParams, opts ...ClientOption) (*InterCityBusAPIAlertOK, *InterCityBusAPIAlertStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIAlertParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Alert",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Alert/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIAlertReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIAlertOK:
		return value, nil, nil
	case *InterCityBusAPIAlertStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIDataVersion 取得公路客運目前資料的最新版本資訊s

  版本詳細資訊
*/
func (a *Client) InterCityBusAPIDataVersion(params *InterCityBusAPIDataVersionParams, opts ...ClientOption) (*InterCityBusAPIDataVersionOK, *InterCityBusAPIDataVersionStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIDataVersionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_DataVersion",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DataVersion/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIDataVersionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIDataVersionOK:
		return value, nil, nil
	case *InterCityBusAPIDataVersionStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIEstimatedTimeOfArrival 取得公路客運的預估到站資料s n1 批次更新

  ###公路客運之預估到站資料(N1)###
- 不保留[現在時間]超過[本平台資料更新時間]兩分鐘的資料
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIEstimatedTimeOfArrival(params *InterCityBusAPIEstimatedTimeOfArrivalParams, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrivalOK, *InterCityBusAPIEstimatedTimeOfArrivalStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIEstimatedTimeOfArrivalParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_EstimatedTimeOfArrival",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIEstimatedTimeOfArrivalReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIEstimatedTimeOfArrivalOK:
		return value, nil, nil
	case *InterCityBusAPIEstimatedTimeOfArrivalStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIEstimatedTimeOfArrival1 取得指定s 路線名稱 的公路客運預估到站資料 n1 批次更新

  ### 公路客運之預估到站資料(N1) ###
- 不保留[現在時間]超過[本平台資料更新時間]兩分鐘的資料
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIEstimatedTimeOfArrival1(params *InterCityBusAPIEstimatedTimeOfArrival1Params, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrival1OK, *InterCityBusAPIEstimatedTimeOfArrival1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIEstimatedTimeOfArrival1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_EstimatedTimeOfArrival_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIEstimatedTimeOfArrival1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIEstimatedTimeOfArrival1OK:
		return value, nil, nil
	case *InterCityBusAPIEstimatedTimeOfArrival1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIEstimatedTimeOfArrivalUDP 取得公路客運的預估到站資料s n1 逐筆更新

  ### 公路客運之預估到站資料(N1) ###
- 不保留[現在時間]超過[本平台資料更新時間]兩分鐘的資料
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
- N1僅於該路線上有任一車輛離站時，來源端才會重新計算並發佈，因此使用者需自行處理時間遞減機制，或以EstimateTime-(收到資料時間-SrcTrasTime)(秒)作為實際預估抵達時間。
*/
func (a *Client) InterCityBusAPIEstimatedTimeOfArrivalUDP(params *InterCityBusAPIEstimatedTimeOfArrivalUDPParams, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrivalUDPOK, *InterCityBusAPIEstimatedTimeOfArrivalUDPStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIEstimatedTimeOfArrivalUDPParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_EstimatedTimeOfArrival_UDP",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/Streaming/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIEstimatedTimeOfArrivalUDPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIEstimatedTimeOfArrivalUDPOK:
		return value, nil, nil
	case *InterCityBusAPIEstimatedTimeOfArrivalUDPStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIEstimatedTimeOfArrivalUDP1 取得指定s 路線名稱 的公路客運預估到站資料 n1 逐筆更新

  ### 公路客運之預估到站資料(N1) ###
- 不保留[現在時間]超過[本平台資料更新時間]兩分鐘的資料
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
- N1僅於該路線上有任一車輛離站時，來源端才會重新計算並發佈，因此使用者需自行處理時間遞減機制，或以EstimateTime-(收到資料時間-SrcTrasTime)(秒)作為實際預估抵達時間。
*/
func (a *Client) InterCityBusAPIEstimatedTimeOfArrivalUDP1(params *InterCityBusAPIEstimatedTimeOfArrivalUDP1Params, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrivalUdp1OK, *InterCityBusAPIEstimatedTimeOfArrivalUdp1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIEstimatedTimeOfArrivalUDP1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_EstimatedTimeOfArrival_UDP_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/Streaming/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIEstimatedTimeOfArrivalUDP1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIEstimatedTimeOfArrivalUdp1OK:
		return value, nil, nil
	case *InterCityBusAPIEstimatedTimeOfArrivalUdp1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPINews 取得公路客運之最新消息s

  公路客運之最新消息
*/
func (a *Client) InterCityBusAPINews(params *InterCityBusAPINewsParams, opts ...ClientOption) (*InterCityBusAPINewsOK, *InterCityBusAPINewsStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPINewsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_News",
		Method:             "GET",
		PathPattern:        "/v2/Bus/News/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPINewsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPINewsOK:
		return value, nil, nil
	case *InterCityBusAPINewsStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIOperator 取得公路客運的營運業者資料s

  公路客運之營運業者資料
*/
func (a *Client) InterCityBusAPIOperator(params *InterCityBusAPIOperatorParams, opts ...ClientOption) (*InterCityBusAPIOperatorOK, *InterCityBusAPIOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Operator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Operator/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeByFrequency 取得公路客運的動態定時資料s a1 批次更新

  ### 公路客運之定時資料(A1) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIRealTimeByFrequency(params *InterCityBusAPIRealTimeByFrequencyParams, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyOK, *InterCityBusAPIRealTimeByFrequencyStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeByFrequencyParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeByFrequency",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeByFrequencyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeByFrequencyOK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeByFrequencyStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeByFrequency1 取得指定s 路線名稱 的公路客運動態定時資料 a1 批次更新

  ### 公路客運之定時資料(A1) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIRealTimeByFrequency1(params *InterCityBusAPIRealTimeByFrequency1Params, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequency1OK, *InterCityBusAPIRealTimeByFrequency1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeByFrequency1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeByFrequency_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeByFrequency1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeByFrequency1OK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeByFrequency1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeByFrequencyUDP 取得公路客運的動態定時資料s a1 逐筆更新

  ### 公路客運之定時資料(A1) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIRealTimeByFrequencyUDP(params *InterCityBusAPIRealTimeByFrequencyUDPParams, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyUDPOK, *InterCityBusAPIRealTimeByFrequencyUDPStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeByFrequencyUDPParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeByFrequency_UDP",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/Streaming/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeByFrequencyUDPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeByFrequencyUDPOK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeByFrequencyUDPStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeByFrequencyUDP1 取得指定s 路線名稱 的公路客運動態定時資料 a1 逐筆更新

  ### 公路客運之定時資料(A1) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIRealTimeByFrequencyUDP1(params *InterCityBusAPIRealTimeByFrequencyUDP1Params, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyUdp1OK, *InterCityBusAPIRealTimeByFrequencyUdp1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeByFrequencyUDP1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeByFrequency_UDP_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/Streaming/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeByFrequencyUDP1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeByFrequencyUdp1OK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeByFrequencyUdp1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeNearStop 取得公路客運的動態定點資料s a2 批次更新

  ### 公路客運之定點資料(A2) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIRealTimeNearStop(params *InterCityBusAPIRealTimeNearStopParams, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopOK, *InterCityBusAPIRealTimeNearStopStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeNearStopParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeNearStop",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeNearStopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeNearStopOK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeNearStopStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeNearStop1 取得指定s 路線名稱 的公路客運動態定點資料 a2 批次更新

  ### 公路客運之定點資料(A2) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIRealTimeNearStop1(params *InterCityBusAPIRealTimeNearStop1Params, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStop1OK, *InterCityBusAPIRealTimeNearStop1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeNearStop1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeNearStop_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeNearStop1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeNearStop1OK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeNearStop1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeNearStopUDP 取得公路客運的動態定點資料s a2 逐筆更新

  ### 公路客運之定點資料(A2) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIRealTimeNearStopUDP(params *InterCityBusAPIRealTimeNearStopUDPParams, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopUDPOK, *InterCityBusAPIRealTimeNearStopUDPStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeNearStopUDPParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeNearStop_UDP",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/Streaming/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeNearStopUDPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeNearStopUDPOK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeNearStopUDPStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeNearStopUDP1 取得指定s 路線名稱 的公路客運動態定點資料 a2 逐筆更新

  ### 公路客運之定點資料(A2) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) InterCityBusAPIRealTimeNearStopUDP1(params *InterCityBusAPIRealTimeNearStopUDP1Params, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopUdp1OK, *InterCityBusAPIRealTimeNearStopUdp1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeNearStopUDP1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeNearStop_UDP_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/Streaming/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeNearStopUDP1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeNearStopUdp1OK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeNearStopUdp1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRoute 取得公路客運路線資料s

  公路客運之路線資料
*/
func (a *Client) InterCityBusAPIRoute(params *InterCityBusAPIRouteParams, opts ...ClientOption) (*InterCityBusAPIRouteOK, *InterCityBusAPIRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRouteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Route",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRouteOK:
		return value, nil, nil
	case *InterCityBusAPIRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRouteFare 取得公路客運之路線票價資料s

  公路客運之路線票價資料
*/
func (a *Client) InterCityBusAPIRouteFare(params *InterCityBusAPIRouteFareParams, opts ...ClientOption) (*InterCityBusAPIRouteFareOK, *InterCityBusAPIRouteFareStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRouteFareParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RouteFare",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRouteFareReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRouteFareOK:
		return value, nil, nil
	case *InterCityBusAPIRouteFareStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRouteFare1 取得指定s 路線名稱 的公路客運路線票價資料

  公路客運之路線票價資料
*/
func (a *Client) InterCityBusAPIRouteFare1(params *InterCityBusAPIRouteFare1Params, opts ...ClientOption) (*InterCityBusAPIRouteFare1OK, *InterCityBusAPIRouteFare1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRouteFare1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RouteFare_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRouteFare1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRouteFare1OK:
		return value, nil, nil
	case *InterCityBusAPIRouteFare1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRoute1 取得指定s 路線名稱 的公路客運路線資料

  公路客運之路線資料
*/
func (a *Client) InterCityBusAPIRoute1(params *InterCityBusAPIRoute1Params, opts ...ClientOption) (*InterCityBusAPIRoute1OK, *InterCityBusAPIRoute1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRoute1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Route_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRoute1OK:
		return value, nil, nil
	case *InterCityBusAPIRoute1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIS2STravelTimeDetail 取得指定s 路線代碼 的公路客運站間旅行時間資料

  指定[路線代碼]的公路客運站間旅行時間資料
*/
func (a *Client) InterCityBusAPIS2STravelTimeDetail(params *InterCityBusAPIS2STravelTimeDetailParams, opts ...ClientOption) (*InterCityBusAPIS2STravelTimeDetailOK, *InterCityBusAPIS2STravelTimeDetailStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIS2STravelTimeDetailParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_S2STravelTimeDetail",
		Method:             "GET",
		PathPattern:        "/v2/Bus/S2STravelTime/InterCity/{RouteID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIS2STravelTimeDetailReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIS2STravelTimeDetailOK:
		return value, nil, nil
	case *InterCityBusAPIS2STravelTimeDetailStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPISchedule 取得公路客運路線班表資料s

  公路客運之預定班表及班距資料。公路及國道客運多採用【班表】式時刻表
*/
func (a *Client) InterCityBusAPISchedule(params *InterCityBusAPIScheduleParams, opts ...ClientOption) (*InterCityBusAPIScheduleOK, *InterCityBusAPIScheduleStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIScheduleParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Schedule",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIScheduleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIScheduleOK:
		return value, nil, nil
	case *InterCityBusAPIScheduleStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPISchedule1 取得指定s 路線名稱 的公路客運路線班表資料

  公路客運之預定班表及班距資料。公路及國道客運多採用【班表】式時刻表
*/
func (a *Client) InterCityBusAPISchedule1(params *InterCityBusAPISchedule1Params, opts ...ClientOption) (*InterCityBusAPISchedule1OK, *InterCityBusAPISchedule1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPISchedule1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Schedule_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPISchedule1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPISchedule1OK:
		return value, nil, nil
	case *InterCityBusAPISchedule1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIShape 取得公路公車線型資料s

  公路客運之線型資料
*/
func (a *Client) InterCityBusAPIShape(params *InterCityBusAPIShapeParams, opts ...ClientOption) (*InterCityBusAPIShapeOK, *InterCityBusAPIShapeStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIShapeParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Shape",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIShapeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIShapeOK:
		return value, nil, nil
	case *InterCityBusAPIShapeStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIShape1 取得指定s 路線名稱 的公路公車線型資料

  公路客運之線型資料
*/
func (a *Client) InterCityBusAPIShape1(params *InterCityBusAPIShape1Params, opts ...ClientOption) (*InterCityBusAPIShape1OK, *InterCityBusAPIShape1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIShape1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Shape_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIShape1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIShape1OK:
		return value, nil, nil
	case *InterCityBusAPIShape1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStation 取得公路客運站位資料s

  公路客運之各站牌所屬的站位資料
*/
func (a *Client) InterCityBusAPIStation(params *InterCityBusAPIStationParams, opts ...ClientOption) (*InterCityBusAPIStationOK, *InterCityBusAPIStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Station",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Station/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStationOK:
		return value, nil, nil
	case *InterCityBusAPIStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStationGroup 取得公路客運組站位資料s

  公路客運之各站牌所屬的組站位資料
*/
func (a *Client) InterCityBusAPIStationGroup(params *InterCityBusAPIStationGroupParams, opts ...ClientOption) (*InterCityBusAPIStationGroupOK, *InterCityBusAPIStationGroupStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStationGroupParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_StationGroup",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StationGroup/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStationGroupReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStationGroupOK:
		return value, nil, nil
	case *InterCityBusAPIStationGroupStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStop 取得公路客運站牌資料s

  公路客運之站牌資料
*/
func (a *Client) InterCityBusAPIStop(params *InterCityBusAPIStopParams, opts ...ClientOption) (*InterCityBusAPIStopOK, *InterCityBusAPIStopStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Stop",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStopOK:
		return value, nil, nil
	case *InterCityBusAPIStopStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStopOfRoute 取得公路客運路線與站牌資料s

  公路客運之路線與站牌資料
*/
func (a *Client) InterCityBusAPIStopOfRoute(params *InterCityBusAPIStopOfRouteParams, opts ...ClientOption) (*InterCityBusAPIStopOfRouteOK, *InterCityBusAPIStopOfRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopOfRouteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_StopOfRoute",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopOfRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStopOfRouteOK:
		return value, nil, nil
	case *InterCityBusAPIStopOfRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStopOfRoute1 取得指定s 路線名稱 的公路客運路線與站牌資料

  公路客運之路線與站牌資料
*/
func (a *Client) InterCityBusAPIStopOfRoute1(params *InterCityBusAPIStopOfRoute1Params, opts ...ClientOption) (*InterCityBusAPIStopOfRoute1OK, *InterCityBusAPIStopOfRoute1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopOfRoute1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_StopOfRoute_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/InterCity/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopOfRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStopOfRoute1OK:
		return value, nil, nil
	case *InterCityBusAPIStopOfRoute1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIVehicle 取得公路客運之車輛資料s

  公路客運之車輛資料
*/
func (a *Client) InterCityBusAPIVehicle(params *InterCityBusAPIVehicleParams, opts ...ClientOption) (*InterCityBusAPIVehicleOK, *InterCityBusAPIVehicleStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIVehicleParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Vehicle",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Vehicle/InterCity",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIVehicleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIVehicleOK:
		return value, nil, nil
	case *InterCityBusAPIVehicleStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for inter_city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
