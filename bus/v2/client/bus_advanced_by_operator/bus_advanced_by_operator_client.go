// Code generated by go-swagger; DO NOT EDIT.

package bus_advanced_by_operator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new bus advanced by operator API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for bus advanced by operator API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	BusAPIRealTimeByFrequencyByOperator(params *BusAPIRealTimeByFrequencyByOperatorParams, opts ...ClientOption) (*BusAPIRealTimeByFrequencyByOperatorOK, *BusAPIRealTimeByFrequencyByOperatorStatus299, error)

	BusAPIRealTimeNearStopByOperator(params *BusAPIRealTimeNearStopByOperatorParams, opts ...ClientOption) (*BusAPIRealTimeNearStopByOperatorOK, *BusAPIRealTimeNearStopByOperatorStatus299, error)

	BusAPIRouteFareByOperator(params *BusAPIRouteFareByOperatorParams, opts ...ClientOption) (*BusAPIRouteFareByOperatorOK, *BusAPIRouteFareByOperatorStatus299, error)

	BusAPIRouteByOperator(params *BusAPIRouteByOperatorParams, opts ...ClientOption) (*BusAPIRouteByOperatorOK, *BusAPIRouteByOperatorStatus299, error)

	BusAPIScheduleByOperator(params *BusAPIScheduleByOperatorParams, opts ...ClientOption) (*BusAPIScheduleByOperatorOK, *BusAPIScheduleByOperatorStatus299, error)

	BusAPIShapeByOperator(params *BusAPIShapeByOperatorParams, opts ...ClientOption) (*BusAPIShapeByOperatorOK, *BusAPIShapeByOperatorStatus299, error)

	BusAPIStationByOperator(params *BusAPIStationByOperatorParams, opts ...ClientOption) (*BusAPIStationByOperatorOK, *BusAPIStationByOperatorStatus299, error)

	BusAPIStopOfRouteByOperator(params *BusAPIStopOfRouteByOperatorParams, opts ...ClientOption) (*BusAPIStopOfRouteByOperatorOK, *BusAPIStopOfRouteByOperatorStatus299, error)

	BusAPIStopByOperator(params *BusAPIStopByOperatorParams, opts ...ClientOption) (*BusAPIStopByOperatorOK, *BusAPIStopByOperatorStatus299, error)

	CityBusAPIRealTimeByFrequencyByOperator(params *CityBusAPIRealTimeByFrequencyByOperatorParams, opts ...ClientOption) (*CityBusAPIRealTimeByFrequencyByOperatorOK, *CityBusAPIRealTimeByFrequencyByOperatorStatus299, error)

	CityBusAPIRealTimeNearStopByOperator(params *CityBusAPIRealTimeNearStopByOperatorParams, opts ...ClientOption) (*CityBusAPIRealTimeNearStopByOperatorOK, *CityBusAPIRealTimeNearStopByOperatorStatus299, error)

	CityBusAPIRouteFareByOperator(params *CityBusAPIRouteFareByOperatorParams, opts ...ClientOption) (*CityBusAPIRouteFareByOperatorOK, *CityBusAPIRouteFareByOperatorStatus299, error)

	CityBusAPIRouteByOperator(params *CityBusAPIRouteByOperatorParams, opts ...ClientOption) (*CityBusAPIRouteByOperatorOK, *CityBusAPIRouteByOperatorStatus299, error)

	CityBusAPIScheduleByOperator(params *CityBusAPIScheduleByOperatorParams, opts ...ClientOption) (*CityBusAPIScheduleByOperatorOK, *CityBusAPIScheduleByOperatorStatus299, error)

	CityBusAPIShapeByOperator(params *CityBusAPIShapeByOperatorParams, opts ...ClientOption) (*CityBusAPIShapeByOperatorOK, *CityBusAPIShapeByOperatorStatus299, error)

	CityBusAPIStationByOperator(params *CityBusAPIStationByOperatorParams, opts ...ClientOption) (*CityBusAPIStationByOperatorOK, *CityBusAPIStationByOperatorStatus299, error)

	CityBusAPIStopOfRouteByOperator(params *CityBusAPIStopOfRouteByOperatorParams, opts ...ClientOption) (*CityBusAPIStopOfRouteByOperatorOK, *CityBusAPIStopOfRouteByOperatorStatus299, error)

	CityBusAPIStopByOperator(params *CityBusAPIStopByOperatorParams, opts ...ClientOption) (*CityBusAPIStopByOperatorOK, *CityBusAPIStopByOperatorStatus299, error)

	InterCityBusAPIRealTimeByFrequencyByOperator(params *InterCityBusAPIRealTimeByFrequencyByOperatorParams, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyByOperatorOK, *InterCityBusAPIRealTimeByFrequencyByOperatorStatus299, error)

	InterCityBusAPIRealTimeNearStopByOperator(params *InterCityBusAPIRealTimeNearStopByOperatorParams, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopByOperatorOK, *InterCityBusAPIRealTimeNearStopByOperatorStatus299, error)

	InterCityBusAPIRouteFareByOperator(params *InterCityBusAPIRouteFareByOperatorParams, opts ...ClientOption) (*InterCityBusAPIRouteFareByOperatorOK, *InterCityBusAPIRouteFareByOperatorStatus299, error)

	InterCityBusAPIRouteByOperator(params *InterCityBusAPIRouteByOperatorParams, opts ...ClientOption) (*InterCityBusAPIRouteByOperatorOK, *InterCityBusAPIRouteByOperatorStatus299, error)

	InterCityBusAPIScheduleByOperator(params *InterCityBusAPIScheduleByOperatorParams, opts ...ClientOption) (*InterCityBusAPIScheduleByOperatorOK, *InterCityBusAPIScheduleByOperatorStatus299, error)

	InterCityBusAPIShapeByOperator(params *InterCityBusAPIShapeByOperatorParams, opts ...ClientOption) (*InterCityBusAPIShapeByOperatorOK, *InterCityBusAPIShapeByOperatorStatus299, error)

	InterCityBusAPIStationByOperator(params *InterCityBusAPIStationByOperatorParams, opts ...ClientOption) (*InterCityBusAPIStationByOperatorOK, *InterCityBusAPIStationByOperatorStatus299, error)

	InterCityBusAPIStopOfRouteByOperator(params *InterCityBusAPIStopOfRouteByOperatorParams, opts ...ClientOption) (*InterCityBusAPIStopOfRouteByOperatorOK, *InterCityBusAPIStopOfRouteByOperatorStatus299, error)

	InterCityBusAPIStopByOperator(params *InterCityBusAPIStopByOperatorParams, opts ...ClientOption) (*InterCityBusAPIStopByOperatorOK, *InterCityBusAPIStopByOperatorStatus299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  BusAPIRealTimeByFrequencyByOperator 取得指定s 業者編號 的全臺公車動態定時資料 a1
*/
func (a *Client) BusAPIRealTimeByFrequencyByOperator(params *BusAPIRealTimeByFrequencyByOperatorParams, opts ...ClientOption) (*BusAPIRealTimeByFrequencyByOperatorOK, *BusAPIRealTimeByFrequencyByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIRealTimeByFrequencyByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_RealTimeByFrequency_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIRealTimeByFrequencyByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIRealTimeByFrequencyByOperatorOK:
		return value, nil, nil
	case *BusAPIRealTimeByFrequencyByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIRealTimeNearStopByOperator 取得指定s 業者編號 的全臺公車動態定點資料 a2
*/
func (a *Client) BusAPIRealTimeNearStopByOperator(params *BusAPIRealTimeNearStopByOperatorParams, opts ...ClientOption) (*BusAPIRealTimeNearStopByOperatorOK, *BusAPIRealTimeNearStopByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIRealTimeNearStopByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_RealTimeNearStop_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIRealTimeNearStopByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIRealTimeNearStopByOperatorOK:
		return value, nil, nil
	case *BusAPIRealTimeNearStopByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIRouteFareByOperator 取得指定s 業者編號 的全臺公車路線票價資料
*/
func (a *Client) BusAPIRouteFareByOperator(params *BusAPIRouteFareByOperatorParams, opts ...ClientOption) (*BusAPIRouteFareByOperatorOK, *BusAPIRouteFareByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIRouteFareByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_RouteFare_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIRouteFareByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIRouteFareByOperatorOK:
		return value, nil, nil
	case *BusAPIRouteFareByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIRouteByOperator 取得指定s 業者編號 的全臺公車路線資料
*/
func (a *Client) BusAPIRouteByOperator(params *BusAPIRouteByOperatorParams, opts ...ClientOption) (*BusAPIRouteByOperatorOK, *BusAPIRouteByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIRouteByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_Route_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIRouteByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIRouteByOperatorOK:
		return value, nil, nil
	case *BusAPIRouteByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIScheduleByOperator 取得指定s 業者編號 的全臺公車班表資料
*/
func (a *Client) BusAPIScheduleByOperator(params *BusAPIScheduleByOperatorParams, opts ...ClientOption) (*BusAPIScheduleByOperatorOK, *BusAPIScheduleByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIScheduleByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_Schedule_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIScheduleByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIScheduleByOperatorOK:
		return value, nil, nil
	case *BusAPIScheduleByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIShapeByOperator 取得指定s 業者編號 的全臺公車線型資料
*/
func (a *Client) BusAPIShapeByOperator(params *BusAPIShapeByOperatorParams, opts ...ClientOption) (*BusAPIShapeByOperatorOK, *BusAPIShapeByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIShapeByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_Shape_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIShapeByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIShapeByOperatorOK:
		return value, nil, nil
	case *BusAPIShapeByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIStationByOperator 取得指定s 業者編號 的全臺公車站位資料
*/
func (a *Client) BusAPIStationByOperator(params *BusAPIStationByOperatorParams, opts ...ClientOption) (*BusAPIStationByOperatorOK, *BusAPIStationByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIStationByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_Station_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Station/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIStationByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIStationByOperatorOK:
		return value, nil, nil
	case *BusAPIStationByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIStopOfRouteByOperator 取得指定s 業者編號 的全臺公車路線站序資料
*/
func (a *Client) BusAPIStopOfRouteByOperator(params *BusAPIStopOfRouteByOperatorParams, opts ...ClientOption) (*BusAPIStopOfRouteByOperatorOK, *BusAPIStopOfRouteByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIStopOfRouteByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_StopOfRoute_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIStopOfRouteByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIStopOfRouteByOperatorOK:
		return value, nil, nil
	case *BusAPIStopOfRouteByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIStopByOperator 取得指定s 業者編號 的全臺公車站牌資料
*/
func (a *Client) BusAPIStopByOperator(params *BusAPIStopByOperatorParams, opts ...ClientOption) (*BusAPIStopByOperatorOK, *BusAPIStopByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIStopByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_Stop_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIStopByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIStopByOperatorOK:
		return value, nil, nil
	case *BusAPIStopByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequencyByOperator 取得指定s 縣市 業者編號 的市區公車動態定時資料 a1
*/
func (a *Client) CityBusAPIRealTimeByFrequencyByOperator(params *CityBusAPIRealTimeByFrequencyByOperatorParams, opts ...ClientOption) (*CityBusAPIRealTimeByFrequencyByOperatorOK, *CityBusAPIRealTimeByFrequencyByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequencyByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/City/{City}/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequencyByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequencyByOperatorOK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequencyByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStopByOperator 取得指定s 縣市 業者編號 的市區公車動態定點資料 a2
*/
func (a *Client) CityBusAPIRealTimeNearStopByOperator(params *CityBusAPIRealTimeNearStopByOperatorParams, opts ...ClientOption) (*CityBusAPIRealTimeNearStopByOperatorOK, *CityBusAPIRealTimeNearStopByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStopByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/City/{City}/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStopByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStopByOperatorOK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStopByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteFareByOperator 取得指定s 縣市 業者編號 的市區公車路線票價資料
*/
func (a *Client) CityBusAPIRouteFareByOperator(params *CityBusAPIRouteFareByOperatorParams, opts ...ClientOption) (*CityBusAPIRouteFareByOperatorOK, *CityBusAPIRouteFareByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteFareByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RouteFare_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/City/{City}/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteFareByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteFareByOperatorOK:
		return value, nil, nil
	case *CityBusAPIRouteFareByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteByOperator 取得指定s 縣市 業者編號 的市區公車路線資料
*/
func (a *Client) CityBusAPIRouteByOperator(params *CityBusAPIRouteByOperatorParams, opts ...ClientOption) (*CityBusAPIRouteByOperatorOK, *CityBusAPIRouteByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Route_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/City/{City}/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteByOperatorOK:
		return value, nil, nil
	case *CityBusAPIRouteByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIScheduleByOperator 取得指定s 縣市 業者編號 的市區公車班表資料
*/
func (a *Client) CityBusAPIScheduleByOperator(params *CityBusAPIScheduleByOperatorParams, opts ...ClientOption) (*CityBusAPIScheduleByOperatorOK, *CityBusAPIScheduleByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIScheduleByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Schedule_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/City/{City}/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIScheduleByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIScheduleByOperatorOK:
		return value, nil, nil
	case *CityBusAPIScheduleByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIShapeByOperator 取得指定s 縣市 業者編號 的市區公車線型資料
*/
func (a *Client) CityBusAPIShapeByOperator(params *CityBusAPIShapeByOperatorParams, opts ...ClientOption) (*CityBusAPIShapeByOperatorOK, *CityBusAPIShapeByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIShapeByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Shape_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/City/{City}/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIShapeByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIShapeByOperatorOK:
		return value, nil, nil
	case *CityBusAPIShapeByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStationByOperator 取得指定s 縣市 業者編號 的市區公車站位資料
*/
func (a *Client) CityBusAPIStationByOperator(params *CityBusAPIStationByOperatorParams, opts ...ClientOption) (*CityBusAPIStationByOperatorOK, *CityBusAPIStationByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStationByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Station_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Station/City/{City}/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStationByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStationByOperatorOK:
		return value, nil, nil
	case *CityBusAPIStationByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStopOfRouteByOperator 取得指定s 縣市 業者編號 的市區公車路線站序資料
*/
func (a *Client) CityBusAPIStopOfRouteByOperator(params *CityBusAPIStopOfRouteByOperatorParams, opts ...ClientOption) (*CityBusAPIStopOfRouteByOperatorOK, *CityBusAPIStopOfRouteByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopOfRouteByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_StopOfRoute_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/City/{City}/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopOfRouteByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopOfRouteByOperatorOK:
		return value, nil, nil
	case *CityBusAPIStopOfRouteByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStopByOperator 取得指定s 縣市 業者編號 的市區公車站牌資料
*/
func (a *Client) CityBusAPIStopByOperator(params *CityBusAPIStopByOperatorParams, opts ...ClientOption) (*CityBusAPIStopByOperatorOK, *CityBusAPIStopByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Stop_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/City/{City}/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopByOperatorOK:
		return value, nil, nil
	case *CityBusAPIStopByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeByFrequencyByOperator 取得指定s 業者編號 的公路客運動態定時資料 a1
*/
func (a *Client) InterCityBusAPIRealTimeByFrequencyByOperator(params *InterCityBusAPIRealTimeByFrequencyByOperatorParams, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyByOperatorOK, *InterCityBusAPIRealTimeByFrequencyByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeByFrequencyByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeByFrequency_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/InterCity/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeByFrequencyByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeByFrequencyByOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeByFrequencyByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeNearStopByOperator 取得指定s 業者編號 的公路客運動態定點資料 a2
*/
func (a *Client) InterCityBusAPIRealTimeNearStopByOperator(params *InterCityBusAPIRealTimeNearStopByOperatorParams, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopByOperatorOK, *InterCityBusAPIRealTimeNearStopByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeNearStopByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeNearStop_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/InterCity/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeNearStopByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeNearStopByOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeNearStopByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRouteFareByOperator 取得指定s 業者編號 的公路客運路線票價資料
*/
func (a *Client) InterCityBusAPIRouteFareByOperator(params *InterCityBusAPIRouteFareByOperatorParams, opts ...ClientOption) (*InterCityBusAPIRouteFareByOperatorOK, *InterCityBusAPIRouteFareByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRouteFareByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RouteFare_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/InterCity/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRouteFareByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRouteFareByOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIRouteFareByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRouteByOperator 取得指定s 業者編號 的公路客運路線資料
*/
func (a *Client) InterCityBusAPIRouteByOperator(params *InterCityBusAPIRouteByOperatorParams, opts ...ClientOption) (*InterCityBusAPIRouteByOperatorOK, *InterCityBusAPIRouteByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRouteByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Route_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/InterCity/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRouteByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRouteByOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIRouteByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIScheduleByOperator 取得指定s 業者編號 的公路客運班表資料
*/
func (a *Client) InterCityBusAPIScheduleByOperator(params *InterCityBusAPIScheduleByOperatorParams, opts ...ClientOption) (*InterCityBusAPIScheduleByOperatorOK, *InterCityBusAPIScheduleByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIScheduleByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Schedule_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/InterCity/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIScheduleByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIScheduleByOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIScheduleByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIShapeByOperator 取得指定s 業者編號 的公路客運線型資料
*/
func (a *Client) InterCityBusAPIShapeByOperator(params *InterCityBusAPIShapeByOperatorParams, opts ...ClientOption) (*InterCityBusAPIShapeByOperatorOK, *InterCityBusAPIShapeByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIShapeByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Shape_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/InterCity/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIShapeByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIShapeByOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIShapeByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStationByOperator 取得指定s 業者編號 的公路客運站位資料
*/
func (a *Client) InterCityBusAPIStationByOperator(params *InterCityBusAPIStationByOperatorParams, opts ...ClientOption) (*InterCityBusAPIStationByOperatorOK, *InterCityBusAPIStationByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStationByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Station_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Station/InterCity/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStationByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStationByOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIStationByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStopOfRouteByOperator 取得指定s 業者編號 的公路客運路線站序資料
*/
func (a *Client) InterCityBusAPIStopOfRouteByOperator(params *InterCityBusAPIStopOfRouteByOperatorParams, opts ...ClientOption) (*InterCityBusAPIStopOfRouteByOperatorOK, *InterCityBusAPIStopOfRouteByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopOfRouteByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_StopOfRoute_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/InterCity/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopOfRouteByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStopOfRouteByOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIStopOfRouteByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStopByOperator 取得指定s 業者編號 的公路客運站牌資料
*/
func (a *Client) InterCityBusAPIStopByOperator(params *InterCityBusAPIStopByOperatorParams, opts ...ClientOption) (*InterCityBusAPIStopByOperatorOK, *InterCityBusAPIStopByOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopByOperatorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Stop_ByOperator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/InterCity/OperatorNo/{OperatorNo}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopByOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStopByOperatorOK:
		return value, nil, nil
	case *InterCityBusAPIStopByOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
