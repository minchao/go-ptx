// Code generated by go-swagger; DO NOT EDIT.

package bus_advanced_by_station

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new bus advanced by station API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for bus advanced by station API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CityBusAPIEstimatedTimeOfArrivalByStation(params *CityBusAPIEstimatedTimeOfArrivalByStationParams, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrivalByStationOK, *CityBusAPIEstimatedTimeOfArrivalByStationStatus299, error)

	CityBusAPIRealTimeByFrequencyByStation(params *CityBusAPIRealTimeByFrequencyByStationParams, opts ...ClientOption) (*CityBusAPIRealTimeByFrequencyByStationOK, *CityBusAPIRealTimeByFrequencyByStationStatus299, error)

	CityBusAPIRealTimeNearStopByStation(params *CityBusAPIRealTimeNearStopByStationParams, opts ...ClientOption) (*CityBusAPIRealTimeNearStopByStationOK, *CityBusAPIRealTimeNearStopByStationStatus299, error)

	CityBusAPIRouteByStation(params *CityBusAPIRouteByStationParams, opts ...ClientOption) (*CityBusAPIRouteByStationOK, *CityBusAPIRouteByStationStatus299, error)

	CityBusAPIScheduleByStation(params *CityBusAPIScheduleByStationParams, opts ...ClientOption) (*CityBusAPIScheduleByStationOK, *CityBusAPIScheduleByStationStatus299, error)

	CityBusAPIShapeByStation(params *CityBusAPIShapeByStationParams, opts ...ClientOption) (*CityBusAPIShapeByStationOK, *CityBusAPIShapeByStationStatus299, error)

	CityBusAPIStopOfRouteByStation(params *CityBusAPIStopOfRouteByStationParams, opts ...ClientOption) (*CityBusAPIStopOfRouteByStationOK, *CityBusAPIStopOfRouteByStationStatus299, error)

	CityBusAPIStopByStation(params *CityBusAPIStopByStationParams, opts ...ClientOption) (*CityBusAPIStopByStationOK, *CityBusAPIStopByStationStatus299, error)

	InterCityBusAPIEstimatedTimeOfArrivalByStation(params *InterCityBusAPIEstimatedTimeOfArrivalByStationParams, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrivalByStationOK, *InterCityBusAPIEstimatedTimeOfArrivalByStationStatus299, error)

	InterCityBusAPIRealTimeByFrequencyByStation(params *InterCityBusAPIRealTimeByFrequencyByStationParams, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyByStationOK, *InterCityBusAPIRealTimeByFrequencyByStationStatus299, error)

	InterCityBusAPIRealTimeNearStopByStation(params *InterCityBusAPIRealTimeNearStopByStationParams, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopByStationOK, *InterCityBusAPIRealTimeNearStopByStationStatus299, error)

	InterCityBusAPIRouteByStation(params *InterCityBusAPIRouteByStationParams, opts ...ClientOption) (*InterCityBusAPIRouteByStationOK, *InterCityBusAPIRouteByStationStatus299, error)

	InterCityBusAPIScheduleByStation(params *InterCityBusAPIScheduleByStationParams, opts ...ClientOption) (*InterCityBusAPIScheduleByStationOK, *InterCityBusAPIScheduleByStationStatus299, error)

	InterCityBusAPIShapeByStation(params *InterCityBusAPIShapeByStationParams, opts ...ClientOption) (*InterCityBusAPIShapeByStationOK, *InterCityBusAPIShapeByStationStatus299, error)

	InterCityBusAPIStopOfRouteByStation(params *InterCityBusAPIStopOfRouteByStationParams, opts ...ClientOption) (*InterCityBusAPIStopOfRouteByStationOK, *InterCityBusAPIStopOfRouteByStationStatus299, error)

	InterCityBusAPIStopByStation(params *InterCityBusAPIStopByStationParams, opts ...ClientOption) (*InterCityBusAPIStopByStationOK, *InterCityBusAPIStopByStationStatus299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CityBusAPIEstimatedTimeOfArrivalByStation 取得指定s 縣市 站位 的市區公車預估到站資料 n1
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrivalByStation(params *CityBusAPIEstimatedTimeOfArrivalByStationParams, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrivalByStationOK, *CityBusAPIEstimatedTimeOfArrivalByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrivalByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/City/{City}/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrivalByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrivalByStationOK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrivalByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequencyByStation 取得指定s 縣市 站位 的市區公車動態定時資料 a1
*/
func (a *Client) CityBusAPIRealTimeByFrequencyByStation(params *CityBusAPIRealTimeByFrequencyByStationParams, opts ...ClientOption) (*CityBusAPIRealTimeByFrequencyByStationOK, *CityBusAPIRealTimeByFrequencyByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequencyByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/City/{City}/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequencyByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequencyByStationOK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequencyByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStopByStation 取得指定s 縣市 站位 的市區公車動態定點資料 a2
*/
func (a *Client) CityBusAPIRealTimeNearStopByStation(params *CityBusAPIRealTimeNearStopByStationParams, opts ...ClientOption) (*CityBusAPIRealTimeNearStopByStationOK, *CityBusAPIRealTimeNearStopByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStopByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/City/{City}/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStopByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStopByStationOK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStopByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteByStation 取得指定s 縣市 站位 的市區公車路線資料
*/
func (a *Client) CityBusAPIRouteByStation(params *CityBusAPIRouteByStationParams, opts ...ClientOption) (*CityBusAPIRouteByStationOK, *CityBusAPIRouteByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Route_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/City/{City}/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteByStationOK:
		return value, nil, nil
	case *CityBusAPIRouteByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIScheduleByStation 取得指定s 縣市 站位 的市區公車路線班表資料
*/
func (a *Client) CityBusAPIScheduleByStation(params *CityBusAPIScheduleByStationParams, opts ...ClientOption) (*CityBusAPIScheduleByStationOK, *CityBusAPIScheduleByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIScheduleByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Schedule_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/City/{City}/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIScheduleByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIScheduleByStationOK:
		return value, nil, nil
	case *CityBusAPIScheduleByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIShapeByStation 取得指定s 縣市 站位 的市區公車路線線型資料
*/
func (a *Client) CityBusAPIShapeByStation(params *CityBusAPIShapeByStationParams, opts ...ClientOption) (*CityBusAPIShapeByStationOK, *CityBusAPIShapeByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIShapeByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Shape_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/City/{City}/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIShapeByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIShapeByStationOK:
		return value, nil, nil
	case *CityBusAPIShapeByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStopOfRouteByStation 取得指定s 縣市 站位 的市區公車路線站序資料
*/
func (a *Client) CityBusAPIStopOfRouteByStation(params *CityBusAPIStopOfRouteByStationParams, opts ...ClientOption) (*CityBusAPIStopOfRouteByStationOK, *CityBusAPIStopOfRouteByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopOfRouteByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_StopOfRoute_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/City/{City}/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopOfRouteByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopOfRouteByStationOK:
		return value, nil, nil
	case *CityBusAPIStopOfRouteByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStopByStation 取得指定s 縣市 站位 的市區公車站牌資料
*/
func (a *Client) CityBusAPIStopByStation(params *CityBusAPIStopByStationParams, opts ...ClientOption) (*CityBusAPIStopByStationOK, *CityBusAPIStopByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Stop_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/City/{City}/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopByStationOK:
		return value, nil, nil
	case *CityBusAPIStopByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIEstimatedTimeOfArrivalByStation 取得指定s 站位 的公路客運預估到站資料 n1
*/
func (a *Client) InterCityBusAPIEstimatedTimeOfArrivalByStation(params *InterCityBusAPIEstimatedTimeOfArrivalByStationParams, opts ...ClientOption) (*InterCityBusAPIEstimatedTimeOfArrivalByStationOK, *InterCityBusAPIEstimatedTimeOfArrivalByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIEstimatedTimeOfArrivalByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_EstimatedTimeOfArrival_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/InterCity/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIEstimatedTimeOfArrivalByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIEstimatedTimeOfArrivalByStationOK:
		return value, nil, nil
	case *InterCityBusAPIEstimatedTimeOfArrivalByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeByFrequencyByStation 取得指定s 站位 的公路客運動態定時資料 a1
*/
func (a *Client) InterCityBusAPIRealTimeByFrequencyByStation(params *InterCityBusAPIRealTimeByFrequencyByStationParams, opts ...ClientOption) (*InterCityBusAPIRealTimeByFrequencyByStationOK, *InterCityBusAPIRealTimeByFrequencyByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeByFrequencyByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeByFrequency_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/InterCity/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeByFrequencyByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeByFrequencyByStationOK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeByFrequencyByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRealTimeNearStopByStation 取得指定s 站位 的公路客運動態定點資料 a2
*/
func (a *Client) InterCityBusAPIRealTimeNearStopByStation(params *InterCityBusAPIRealTimeNearStopByStationParams, opts ...ClientOption) (*InterCityBusAPIRealTimeNearStopByStationOK, *InterCityBusAPIRealTimeNearStopByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRealTimeNearStopByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_RealTimeNearStop_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/InterCity/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRealTimeNearStopByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRealTimeNearStopByStationOK:
		return value, nil, nil
	case *InterCityBusAPIRealTimeNearStopByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIRouteByStation 取得指定s 站位 的公路客運路線資料
*/
func (a *Client) InterCityBusAPIRouteByStation(params *InterCityBusAPIRouteByStationParams, opts ...ClientOption) (*InterCityBusAPIRouteByStationOK, *InterCityBusAPIRouteByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIRouteByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Route_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/InterCity/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIRouteByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIRouteByStationOK:
		return value, nil, nil
	case *InterCityBusAPIRouteByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIScheduleByStation 取得指定s 站位 的公路客運路線班表資料
*/
func (a *Client) InterCityBusAPIScheduleByStation(params *InterCityBusAPIScheduleByStationParams, opts ...ClientOption) (*InterCityBusAPIScheduleByStationOK, *InterCityBusAPIScheduleByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIScheduleByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Schedule_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/InterCity/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIScheduleByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIScheduleByStationOK:
		return value, nil, nil
	case *InterCityBusAPIScheduleByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIShapeByStation 取得指定s 站位 的公路客運線型資料
*/
func (a *Client) InterCityBusAPIShapeByStation(params *InterCityBusAPIShapeByStationParams, opts ...ClientOption) (*InterCityBusAPIShapeByStationOK, *InterCityBusAPIShapeByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIShapeByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Shape_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/InterCity/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIShapeByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIShapeByStationOK:
		return value, nil, nil
	case *InterCityBusAPIShapeByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStopOfRouteByStation 取得指定s 站位 的公路客運路線站序資料
*/
func (a *Client) InterCityBusAPIStopOfRouteByStation(params *InterCityBusAPIStopOfRouteByStationParams, opts ...ClientOption) (*InterCityBusAPIStopOfRouteByStationOK, *InterCityBusAPIStopOfRouteByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopOfRouteByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_StopOfRoute_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/InterCity/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopOfRouteByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStopOfRouteByStationOK:
		return value, nil, nil
	case *InterCityBusAPIStopOfRouteByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterCityBusAPIStopByStation 取得指定s 站位 的公路客運站牌資料
*/
func (a *Client) InterCityBusAPIStopByStation(params *InterCityBusAPIStopByStationParams, opts ...ClientOption) (*InterCityBusAPIStopByStationOK, *InterCityBusAPIStopByStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterCityBusAPIStopByStationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "InterCityBusApi_Stop_ByStation",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/InterCity/PassThrough/Station/{StationID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterCityBusAPIStopByStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InterCityBusAPIStopByStationOK:
		return value, nil, nil
	case *InterCityBusAPIStopByStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_by_station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
