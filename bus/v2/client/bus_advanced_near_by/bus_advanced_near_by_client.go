// Code generated by go-swagger; DO NOT EDIT.

package bus_advanced_near_by

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new bus advanced near by API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for bus advanced near by API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	BusAPIEstimatedTimeOfArrivalNearBy(params *BusAPIEstimatedTimeOfArrivalNearByParams, opts ...ClientOption) (*BusAPIEstimatedTimeOfArrivalNearByOK, *BusAPIEstimatedTimeOfArrivalNearByStatus299, error)

	BusAPIRealTimeByFrequencyNearBy(params *BusAPIRealTimeByFrequencyNearByParams, opts ...ClientOption) (*BusAPIRealTimeByFrequencyNearByOK, *BusAPIRealTimeByFrequencyNearByStatus299, error)

	BusAPIRealTimeNearStopNearBy(params *BusAPIRealTimeNearStopNearByParams, opts ...ClientOption) (*BusAPIRealTimeNearStopNearByOK, *BusAPIRealTimeNearStopNearByStatus299, error)

	BusAPIRouteNearBy(params *BusAPIRouteNearByParams, opts ...ClientOption) (*BusAPIRouteNearByOK, *BusAPIRouteNearByStatus299, error)

	BusAPIStationNearBy(params *BusAPIStationNearByParams, opts ...ClientOption) (*BusAPIStationNearByOK, *BusAPIStationNearByStatus299, error)

	BusAPIStopNearBy(params *BusAPIStopNearByParams, opts ...ClientOption) (*BusAPIStopNearByOK, *BusAPIStopNearByStatus299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  BusAPIEstimatedTimeOfArrivalNearBy 取得指定s 位置 範圍 的全臺公車預估到站資料 n1

  取得指定[位置,範圍]的全臺公車預估到站資料(N1)
*/
func (a *Client) BusAPIEstimatedTimeOfArrivalNearBy(params *BusAPIEstimatedTimeOfArrivalNearByParams, opts ...ClientOption) (*BusAPIEstimatedTimeOfArrivalNearByOK, *BusAPIEstimatedTimeOfArrivalNearByStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIEstimatedTimeOfArrivalNearByParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_EstimatedTimeOfArrival_NearBy",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/NearBy",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIEstimatedTimeOfArrivalNearByReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIEstimatedTimeOfArrivalNearByOK:
		return value, nil, nil
	case *BusAPIEstimatedTimeOfArrivalNearByStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_near_by: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIRealTimeByFrequencyNearBy 取得指定s 位置 範圍 的全臺公車動態定時資料 a1

  取得指定[位置,範圍]的全臺公車動態定時資料(A1)
*/
func (a *Client) BusAPIRealTimeByFrequencyNearBy(params *BusAPIRealTimeByFrequencyNearByParams, opts ...ClientOption) (*BusAPIRealTimeByFrequencyNearByOK, *BusAPIRealTimeByFrequencyNearByStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIRealTimeByFrequencyNearByParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_RealTimeByFrequency_NearBy",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/NearBy",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIRealTimeByFrequencyNearByReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIRealTimeByFrequencyNearByOK:
		return value, nil, nil
	case *BusAPIRealTimeByFrequencyNearByStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_near_by: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIRealTimeNearStopNearBy 取得指定s 位置 範圍 的全臺公車動態定點資料 a2

  取得指定[位置,範圍]的全臺公車動態定點資料(A2)
*/
func (a *Client) BusAPIRealTimeNearStopNearBy(params *BusAPIRealTimeNearStopNearByParams, opts ...ClientOption) (*BusAPIRealTimeNearStopNearByOK, *BusAPIRealTimeNearStopNearByStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIRealTimeNearStopNearByParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_RealTimeNearStop_NearBy",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/NearBy",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIRealTimeNearStopNearByReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIRealTimeNearStopNearByOK:
		return value, nil, nil
	case *BusAPIRealTimeNearStopNearByStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_near_by: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIRouteNearBy 取得指定s 位置 範圍 的全臺公車路線資料

  取得指定[位置,範圍]的全臺公車路線資料
*/
func (a *Client) BusAPIRouteNearBy(params *BusAPIRouteNearByParams, opts ...ClientOption) (*BusAPIRouteNearByOK, *BusAPIRouteNearByStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIRouteNearByParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_Route_NearBy",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/NearBy",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIRouteNearByReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIRouteNearByOK:
		return value, nil, nil
	case *BusAPIRouteNearByStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_near_by: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIStationNearBy 取得指定s 位置 範圍 的全臺公車站位資料

  取得指定[位置,範圍]的全臺公車站位資料
*/
func (a *Client) BusAPIStationNearBy(params *BusAPIStationNearByParams, opts ...ClientOption) (*BusAPIStationNearByOK, *BusAPIStationNearByStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIStationNearByParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_Station_NearBy",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Station/NearBy",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIStationNearByReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIStationNearByOK:
		return value, nil, nil
	case *BusAPIStationNearByStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_near_by: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BusAPIStopNearBy 取得指定s 位置 範圍 的全臺公車站牌資料

  取得指定[位置,範圍]的全臺公車站牌資料
*/
func (a *Client) BusAPIStopNearBy(params *BusAPIStopNearByParams, opts ...ClientOption) (*BusAPIStopNearByOK, *BusAPIStopNearByStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBusAPIStopNearByParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BusApi_Stop_NearBy",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/NearBy",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BusAPIStopNearByReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BusAPIStopNearByOK:
		return value, nil, nil
	case *BusAPIStopNearByStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bus_advanced_near_by: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
