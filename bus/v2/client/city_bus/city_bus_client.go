// Code generated by go-swagger; DO NOT EDIT.

package city_bus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new city bus API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for city bus API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CityBusAPIDataVersion 取得指定s 縣市 目前資料的最新版本資訊

版本詳細資訊
*/
func (a *Client) CityBusAPIDataVersion(params *CityBusAPIDataVersionParams) (*CityBusAPIDataVersionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDataVersionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_DataVersion",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DataVersion/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml", "text/json", "text/xml"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDataVersionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIDataVersionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_DataVersion: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIDisplayStopOfRoute 取得指定s 縣市 的市區公車顯示用路線站序資料

市區公車之顯示用路線站序資料，僅台北市與新北市可查詢
*/
func (a *Client) CityBusAPIDisplayStopOfRoute(params *CityBusAPIDisplayStopOfRouteParams) (*CityBusAPIDisplayStopOfRouteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDisplayStopOfRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_DisplayStopOfRoute",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DisplayStopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDisplayStopOfRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIDisplayStopOfRouteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_DisplayStopOfRoute: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIDisplayStopOfRoute1 取得指定s 縣市 路線名稱 的市區公車顯示用路線站序資料

市區公車之顯示用路線站序資料，僅台北市與新北市可查詢
*/
func (a *Client) CityBusAPIDisplayStopOfRoute1(params *CityBusAPIDisplayStopOfRoute1Params) (*CityBusAPIDisplayStopOfRoute1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDisplayStopOfRoute1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_DisplayStopOfRoute_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DisplayStopOfRoute/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDisplayStopOfRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIDisplayStopOfRoute1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_DisplayStopOfRoute_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIEstimatedTimeOfArrival 取得指定s 縣市 的公車預估到站資料 n1

[部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime &gt; 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival(params *CityBusAPIEstimatedTimeOfArrivalParams) (*CityBusAPIEstimatedTimeOfArrivalOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrivalParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrivalReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIEstimatedTimeOfArrivalOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_EstimatedTimeOfArrival: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIEstimatedTimeOfArrival1 取得指定s 縣市 路線名稱 的公車預估到站資料 n1

[部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime &gt; 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival1(params *CityBusAPIEstimatedTimeOfArrival1Params) (*CityBusAPIEstimatedTimeOfArrival1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrival1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrival1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIEstimatedTimeOfArrival1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_EstimatedTimeOfArrival_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPINews 取得指定s 縣市 的市區公車最新消息資料

市區公車最新消息資料
*/
func (a *Client) CityBusAPINews(params *CityBusAPINewsParams) (*CityBusAPINewsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPINewsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_News",
		Method:             "GET",
		PathPattern:        "/v2/Bus/News/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPINewsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPINewsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_News: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIOperator 取得指定s 縣市 的市區公車營運業者資料

市區公車之營運業者資料
*/
func (a *Client) CityBusAPIOperator(params *CityBusAPIOperatorParams) (*CityBusAPIOperatorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIOperatorParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Operator",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Operator/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIOperatorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Operator: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRealTimeByFrequency 取得指定s 縣市 的公車動態定時資料 a1

市區公車之定時資料(A1)
*/
func (a *Client) CityBusAPIRealTimeByFrequency(params *CityBusAPIRealTimeByFrequencyParams) (*CityBusAPIRealTimeByFrequencyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequencyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequencyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIRealTimeByFrequencyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_RealTimeByFrequency: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRealTimeByFrequency1 取得指定s 縣市 路線名稱 的公車動態定時資料 a1

市區公車之定時資料(A1)
*/
func (a *Client) CityBusAPIRealTimeByFrequency1(params *CityBusAPIRealTimeByFrequency1Params) (*CityBusAPIRealTimeByFrequency1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequency1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequency1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIRealTimeByFrequency1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_RealTimeByFrequency_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRealTimeNearStop 取得指定s 縣市 的公車動態定點資料 a2

市區公車之定點資料(A2)
*/
func (a *Client) CityBusAPIRealTimeNearStop(params *CityBusAPIRealTimeNearStopParams) (*CityBusAPIRealTimeNearStopOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStopParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIRealTimeNearStopOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_RealTimeNearStop: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRealTimeNearStop1 取得指定s 縣市 路線名稱 的公車動態定點資料 a2

市區公車之定點資料(A2)
*/
func (a *Client) CityBusAPIRealTimeNearStop1(params *CityBusAPIRealTimeNearStop1Params) (*CityBusAPIRealTimeNearStop1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStop1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStop1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIRealTimeNearStop1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_RealTimeNearStop_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRoute 取得指定s 縣市 的市區公車路線資料

市區公車之路線資料
*/
func (a *Client) CityBusAPIRoute(params *CityBusAPIRouteParams) (*CityBusAPIRouteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Route",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIRouteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Route: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRouteFare 取得指定s 縣市 的市區公車路線票價資料

市區公車路線票價資料
*/
func (a *Client) CityBusAPIRouteFare(params *CityBusAPIRouteFareParams) (*CityBusAPIRouteFareOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteFareParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RouteFare",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteFareReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIRouteFareOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_RouteFare: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRouteFare1 取得指定s 縣市 路線名稱 的的市區公車路線票價資料

市區公車路線票價資料
*/
func (a *Client) CityBusAPIRouteFare1(params *CityBusAPIRouteFare1Params) (*CityBusAPIRouteFare1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteFare1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RouteFare_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteFare1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIRouteFare1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_RouteFare_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRoute1 取得指定s 縣市 路線名稱 的路線資料

市區公車之路線資料
*/
func (a *Client) CityBusAPIRoute1(params *CityBusAPIRoute1Params) (*CityBusAPIRoute1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRoute1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Route_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIRoute1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Route_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPISchedule 取得指定s 縣市 的市區公車路線班表資料

市區公車之班表及班距資料。一般市區公車班次較多時會採用【班距】式時刻表；班次較少時會採用【班表】式時刻表
*/
func (a *Client) CityBusAPISchedule(params *CityBusAPIScheduleParams) (*CityBusAPIScheduleOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIScheduleParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Schedule",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIScheduleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIScheduleOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Schedule: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPISchedule1 取得指定s 縣市 路線名稱 的市區公車路線班表資料

市區公車之預定班表及班距資料。一般市區公車班次較多時會採用【班距】式時刻表；班次較少時會採用【班表】式時刻表
*/
func (a *Client) CityBusAPISchedule1(params *CityBusAPISchedule1Params) (*CityBusAPISchedule1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPISchedule1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Schedule_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPISchedule1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPISchedule1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Schedule_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIShape 取得指定s 縣市 的市區公車線型資料

市區公車之線型資料
*/
func (a *Client) CityBusAPIShape(params *CityBusAPIShapeParams) (*CityBusAPIShapeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIShapeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Shape",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIShapeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIShapeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Shape: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIShape1 取得指定s 縣市 路線名稱 的市區公車線型資料

市區公車之線型資料
*/
func (a *Client) CityBusAPIShape1(params *CityBusAPIShape1Params) (*CityBusAPIShape1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIShape1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Shape_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIShape1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIShape1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Shape_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIStation 取得指定s 縣市 的市區公車站位資料

市區公車之各站牌所屬的站位資料
*/
func (a *Client) CityBusAPIStation(params *CityBusAPIStationParams) (*CityBusAPIStationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Station",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Station/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIStationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Station: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIStationName 取得指定s 縣市 的市區公車站名碼資料

市區公車之各站牌所屬的站名碼資料
*/
func (a *Client) CityBusAPIStationName(params *CityBusAPIStationNameParams) (*CityBusAPIStationNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStationNameParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_StationName",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StationName/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStationNameReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIStationNameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_StationName: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIStop 取得指定s 縣市 的市區公車站牌資料

市區公車之站牌資料
*/
func (a *Client) CityBusAPIStop(params *CityBusAPIStopParams) (*CityBusAPIStopOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Stop",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIStopOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Stop: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIStopOfRoute 取得指定s 縣市 的市區公車路線站序資料

市區公車之路線站序資料
*/
func (a *Client) CityBusAPIStopOfRoute(params *CityBusAPIStopOfRouteParams) (*CityBusAPIStopOfRouteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopOfRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_StopOfRoute",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopOfRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIStopOfRouteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_StopOfRoute: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIStopOfRoute1 取得指定s 縣市 路線名稱 的市區公車路線站序資料

市區公車之路線站序資料
*/
func (a *Client) CityBusAPIStopOfRoute1(params *CityBusAPIStopOfRoute1Params) (*CityBusAPIStopOfRoute1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopOfRoute1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_StopOfRoute_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopOfRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIStopOfRoute1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_StopOfRoute_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIVehicle 取得指定s 縣市 的市區公車車輛資料

市區公車之車輛資料
*/
func (a *Client) CityBusAPIVehicle(params *CityBusAPIVehicleParams) (*CityBusAPIVehicleOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicleParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Vehicle",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Vehicle/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CityBusAPIVehicleOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CityBusApi_Vehicle: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
