// Code generated by go-swagger; DO NOT EDIT.

package city_bus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new city bus API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for city bus API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CityBusAPIAlert1(params *CityBusAPIAlert1Params, opts ...ClientOption) (*CityBusAPIAlert1OK, *CityBusAPIAlert1Status299, error)

	CityBusAPIDailyStopTimeTable(params *CityBusAPIDailyStopTimeTableParams, opts ...ClientOption) (*CityBusAPIDailyStopTimeTableOK, *CityBusAPIDailyStopTimeTableStatus299, error)

	CityBusAPIDailyStopTimeTable1(params *CityBusAPIDailyStopTimeTable1Params, opts ...ClientOption) (*CityBusAPIDailyStopTimeTable1OK, *CityBusAPIDailyStopTimeTable1Status299, error)

	CityBusAPIDailyTimeTable1(params *CityBusAPIDailyTimeTable1Params, opts ...ClientOption) (*CityBusAPIDailyTimeTable1OK, *CityBusAPIDailyTimeTable1Status299, error)

	CityBusAPIDailyTimeTable2(params *CityBusAPIDailyTimeTable2Params, opts ...ClientOption) (*CityBusAPIDailyTimeTable2OK, *CityBusAPIDailyTimeTable2Status299, error)

	CityBusAPIDataVersion(params *CityBusAPIDataVersionParams, opts ...ClientOption) (*CityBusAPIDataVersionOK, *CityBusAPIDataVersionStatus299, error)

	CityBusAPIDisplayStopOfRoute1(params *CityBusAPIDisplayStopOfRoute1Params, opts ...ClientOption) (*CityBusAPIDisplayStopOfRoute1OK, *CityBusAPIDisplayStopOfRoute1Status299, error)

	CityBusAPIDisplayStopOfRoute2(params *CityBusAPIDisplayStopOfRoute2Params, opts ...ClientOption) (*CityBusAPIDisplayStopOfRoute2OK, *CityBusAPIDisplayStopOfRoute2Status299, error)

	CityBusAPIEstimatedTimeOfArrival2(params *CityBusAPIEstimatedTimeOfArrival2Params, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrival2OK, *CityBusAPIEstimatedTimeOfArrival2Status299, error)

	CityBusAPIEstimatedTimeOfArrival3(params *CityBusAPIEstimatedTimeOfArrival3Params, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrival3OK, *CityBusAPIEstimatedTimeOfArrival3Status299, error)

	CityBusAPIEstimatedTimeOfArrivalUDP(params *CityBusAPIEstimatedTimeOfArrivalUDPParams, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrivalUDPOK, *CityBusAPIEstimatedTimeOfArrivalUDPStatus299, error)

	CityBusAPIEstimatedTimeOfArrivalUDP1(params *CityBusAPIEstimatedTimeOfArrivalUDP1Params, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrivalUdp1OK, *CityBusAPIEstimatedTimeOfArrivalUdp1Status299, error)

	CityBusAPIFirstLastTripInfo1(params *CityBusAPIFirstLastTripInfo1Params, opts ...ClientOption) (*CityBusAPIFirstLastTripInfo1OK, *CityBusAPIFirstLastTripInfo1Status299, error)

	CityBusAPIFirstLastTripInfo2(params *CityBusAPIFirstLastTripInfo2Params, opts ...ClientOption) (*CityBusAPIFirstLastTripInfo2OK, *CityBusAPIFirstLastTripInfo2Status299, error)

	CityBusAPINews1(params *CityBusAPINews1Params, opts ...ClientOption) (*CityBusAPINews1OK, *CityBusAPINews1Status299, error)

	CityBusAPIOperator1(params *CityBusAPIOperator1Params, opts ...ClientOption) (*CityBusAPIOperator1OK, *CityBusAPIOperator1Status299, error)

	CityBusAPIRealTimeByFrequency2(params *CityBusAPIRealTimeByFrequency2Params, opts ...ClientOption) (*CityBusAPIRealTimeByFrequency2OK, *CityBusAPIRealTimeByFrequency2Status299, error)

	CityBusAPIRealTimeByFrequency3(params *CityBusAPIRealTimeByFrequency3Params, opts ...ClientOption) (*CityBusAPIRealTimeByFrequency3OK, *CityBusAPIRealTimeByFrequency3Status299, error)

	CityBusAPIRealTimeByFrequencyUDP(params *CityBusAPIRealTimeByFrequencyUDPParams, opts ...ClientOption) (*CityBusAPIRealTimeByFrequencyUDPOK, *CityBusAPIRealTimeByFrequencyUDPStatus299, error)

	CityBusAPIRealTimeByFrequencyUDP1(params *CityBusAPIRealTimeByFrequencyUDP1Params, opts ...ClientOption) (*CityBusAPIRealTimeByFrequencyUdp1OK, *CityBusAPIRealTimeByFrequencyUdp1Status299, error)

	CityBusAPIRealTimeNearStop2(params *CityBusAPIRealTimeNearStop2Params, opts ...ClientOption) (*CityBusAPIRealTimeNearStop2OK, *CityBusAPIRealTimeNearStop2Status299, error)

	CityBusAPIRealTimeNearStop3(params *CityBusAPIRealTimeNearStop3Params, opts ...ClientOption) (*CityBusAPIRealTimeNearStop3OK, *CityBusAPIRealTimeNearStop3Status299, error)

	CityBusAPIRealTimeNearStopUDP(params *CityBusAPIRealTimeNearStopUDPParams, opts ...ClientOption) (*CityBusAPIRealTimeNearStopUDPOK, *CityBusAPIRealTimeNearStopUDPStatus299, error)

	CityBusAPIRealTimeNearStopUDP1(params *CityBusAPIRealTimeNearStopUDP1Params, opts ...ClientOption) (*CityBusAPIRealTimeNearStopUdp1OK, *CityBusAPIRealTimeNearStopUdp1Status299, error)

	CityBusAPIRouteFare1(params *CityBusAPIRouteFare1Params, opts ...ClientOption) (*CityBusAPIRouteFare1OK, *CityBusAPIRouteFare1Status299, error)

	CityBusAPIRouteFare2(params *CityBusAPIRouteFare2Params, opts ...ClientOption) (*CityBusAPIRouteFare2OK, *CityBusAPIRouteFare2Status299, error)

	CityBusAPIRouteNetwork1(params *CityBusAPIRouteNetwork1Params, opts ...ClientOption) (*CityBusAPIRouteNetwork1OK, *CityBusAPIRouteNetwork1Status299, error)

	CityBusAPIRouteNetwork2(params *CityBusAPIRouteNetwork2Params, opts ...ClientOption) (*CityBusAPIRouteNetwork2OK, *CityBusAPIRouteNetwork2Status299, error)

	CityBusAPIRoute1(params *CityBusAPIRoute1Params, opts ...ClientOption) (*CityBusAPIRoute1OK, *CityBusAPIRoute1Status299, error)

	CityBusAPIRoute2(params *CityBusAPIRoute2Params, opts ...ClientOption) (*CityBusAPIRoute2OK, *CityBusAPIRoute2Status299, error)

	CityBusAPIS2STravelTimeDetail(params *CityBusAPIS2STravelTimeDetailParams, opts ...ClientOption) (*CityBusAPIS2STravelTimeDetailOK, *CityBusAPIS2STravelTimeDetailStatus299, error)

	CityBusAPISchedule1(params *CityBusAPISchedule1Params, opts ...ClientOption) (*CityBusAPISchedule1OK, *CityBusAPISchedule1Status299, error)

	CityBusAPISchedule2(params *CityBusAPISchedule2Params, opts ...ClientOption) (*CityBusAPISchedule2OK, *CityBusAPISchedule2Status299, error)

	CityBusAPIShape1(params *CityBusAPIShape1Params, opts ...ClientOption) (*CityBusAPIShape1OK, *CityBusAPIShape1Status299, error)

	CityBusAPIShape2(params *CityBusAPIShape2Params, opts ...ClientOption) (*CityBusAPIShape2OK, *CityBusAPIShape2Status299, error)

	CityBusAPIStationGroup(params *CityBusAPIStationGroupParams, opts ...ClientOption) (*CityBusAPIStationGroupOK, *CityBusAPIStationGroupStatus299, error)

	CityBusAPIStation1(params *CityBusAPIStation1Params, opts ...ClientOption) (*CityBusAPIStation1OK, *CityBusAPIStation1Status299, error)

	CityBusAPIStopOfRoute1(params *CityBusAPIStopOfRoute1Params, opts ...ClientOption) (*CityBusAPIStopOfRoute1OK, *CityBusAPIStopOfRoute1Status299, error)

	CityBusAPIStopOfRoute2(params *CityBusAPIStopOfRoute2Params, opts ...ClientOption) (*CityBusAPIStopOfRoute2OK, *CityBusAPIStopOfRoute2Status299, error)

	CityBusAPIStop1(params *CityBusAPIStop1Params, opts ...ClientOption) (*CityBusAPIStop1OK, *CityBusAPIStop1Status299, error)

	CityBusAPIVehicle1(params *CityBusAPIVehicle1Params, opts ...ClientOption) (*CityBusAPIVehicle1OK, *CityBusAPIVehicle1Status299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CityBusAPIAlert1 取得指定s 縣市 的市區公車營運通阻資料

  市區公車營運通阻資料
*/
func (a *Client) CityBusAPIAlert1(params *CityBusAPIAlert1Params, opts ...ClientOption) (*CityBusAPIAlert1OK, *CityBusAPIAlert1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIAlert1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Alert_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Alert/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIAlert1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIAlert1OK:
		return value, nil, nil
	case *CityBusAPIAlert1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDailyStopTimeTable 取得指定s 縣市 的市區公車每日站別時刻表資料

  市區公車每日站別時刻表資料
*/
func (a *Client) CityBusAPIDailyStopTimeTable(params *CityBusAPIDailyStopTimeTableParams, opts ...ClientOption) (*CityBusAPIDailyStopTimeTableOK, *CityBusAPIDailyStopTimeTableStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDailyStopTimeTableParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_DailyStopTimeTable",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DailyStopTimeTable/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDailyStopTimeTableReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDailyStopTimeTableOK:
		return value, nil, nil
	case *CityBusAPIDailyStopTimeTableStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDailyStopTimeTable1 取得指定s 縣市 路線名稱 的市區公車每日站別時刻表資料

  市區公車每日站別時刻表資料
*/
func (a *Client) CityBusAPIDailyStopTimeTable1(params *CityBusAPIDailyStopTimeTable1Params, opts ...ClientOption) (*CityBusAPIDailyStopTimeTable1OK, *CityBusAPIDailyStopTimeTable1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDailyStopTimeTable1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_DailyStopTimeTable_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DailyStopTimeTable/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDailyStopTimeTable1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDailyStopTimeTable1OK:
		return value, nil, nil
	case *CityBusAPIDailyStopTimeTable1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDailyTimeTable1 取得指定s 縣市 的市區公車每日營運時刻表資料

  市區公車每日營運時刻表資料
*/
func (a *Client) CityBusAPIDailyTimeTable1(params *CityBusAPIDailyTimeTable1Params, opts ...ClientOption) (*CityBusAPIDailyTimeTable1OK, *CityBusAPIDailyTimeTable1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDailyTimeTable1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_DailyTimeTable_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DailyTimeTable/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDailyTimeTable1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDailyTimeTable1OK:
		return value, nil, nil
	case *CityBusAPIDailyTimeTable1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDailyTimeTable2 取得指定s 縣市 路線名稱 的市區公車每日營運時刻表資料

  市區公車之每日營運時刻表資料
*/
func (a *Client) CityBusAPIDailyTimeTable2(params *CityBusAPIDailyTimeTable2Params, opts ...ClientOption) (*CityBusAPIDailyTimeTable2OK, *CityBusAPIDailyTimeTable2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDailyTimeTable2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_DailyTimeTable_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DailyTimeTable/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDailyTimeTable2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDailyTimeTable2OK:
		return value, nil, nil
	case *CityBusAPIDailyTimeTable2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDataVersion 取得指定s 縣市 目前資料的最新版本資訊

  版本詳細資訊
*/
func (a *Client) CityBusAPIDataVersion(params *CityBusAPIDataVersionParams, opts ...ClientOption) (*CityBusAPIDataVersionOK, *CityBusAPIDataVersionStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDataVersionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_DataVersion",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DataVersion/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDataVersionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDataVersionOK:
		return value, nil, nil
	case *CityBusAPIDataVersionStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDisplayStopOfRoute1 取得指定s 縣市 的市區公車顯示用路線站序資料

  市區公車之顯示用路線站序資料
*/
func (a *Client) CityBusAPIDisplayStopOfRoute1(params *CityBusAPIDisplayStopOfRoute1Params, opts ...ClientOption) (*CityBusAPIDisplayStopOfRoute1OK, *CityBusAPIDisplayStopOfRoute1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDisplayStopOfRoute1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_DisplayStopOfRoute_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DisplayStopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDisplayStopOfRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDisplayStopOfRoute1OK:
		return value, nil, nil
	case *CityBusAPIDisplayStopOfRoute1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDisplayStopOfRoute2 取得指定s 縣市 路線名稱 的市區公車顯示用路線站序資料

  市區公車之顯示用路線站序資料
*/
func (a *Client) CityBusAPIDisplayStopOfRoute2(params *CityBusAPIDisplayStopOfRoute2Params, opts ...ClientOption) (*CityBusAPIDisplayStopOfRoute2OK, *CityBusAPIDisplayStopOfRoute2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDisplayStopOfRoute2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_DisplayStopOfRoute_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/DisplayStopOfRoute/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDisplayStopOfRoute2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDisplayStopOfRoute2OK:
		return value, nil, nil
	case *CityBusAPIDisplayStopOfRoute2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIEstimatedTimeOfArrival2 取得指定s 縣市 的公車預估到站資料 n1 批次更新

   ### 市區公車之預估到站資料(N1) ###
- [部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime > 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間。
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival2(params *CityBusAPIEstimatedTimeOfArrival2Params, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrival2OK, *CityBusAPIEstimatedTimeOfArrival2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrival2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrival2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrival2OK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrival2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIEstimatedTimeOfArrival3 取得指定s 縣市 路線名稱 的公車預估到站資料 n1 批次更新

   ### 市區公車之預估到站資料(N1) ###
- [部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime > 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間。
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival3(params *CityBusAPIEstimatedTimeOfArrival3Params, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrival3OK, *CityBusAPIEstimatedTimeOfArrival3Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrival3Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_3",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrival3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrival3OK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrival3Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIEstimatedTimeOfArrivalUDP 取得指定s 縣市 的公車預估到站資料 n1 逐筆更新

  ### 市區公車之預估到站資料(N1) ###
- [部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime > 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間。
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
- N1僅於該路線上有任一車輛離站時，來源端才會重新計算並發佈，因此使用者需自行處理時間遞減機制，或以EstimateTime-(收到資料時間-SrcTrasTime)(秒)作為實際預估抵達時間。
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrivalUDP(params *CityBusAPIEstimatedTimeOfArrivalUDPParams, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrivalUDPOK, *CityBusAPIEstimatedTimeOfArrivalUDPStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrivalUDPParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_UDP",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/Streaming/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrivalUDPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrivalUDPOK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrivalUDPStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIEstimatedTimeOfArrivalUDP1 取得指定s 縣市 路線名稱 的公車預估到站資料 n1 逐筆更新

  ### 市區公車之預估到站資料(N1) ###
- [部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime > 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間。
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
- N1僅於該路線上有任一車輛離站時，來源端才會重新計算並發佈，因此使用者需自行處理時間遞減機制，或以EstimateTime-(收到資料時間-SrcTrasTime)(秒)作為實際預估抵達時間。
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrivalUDP1(params *CityBusAPIEstimatedTimeOfArrivalUDP1Params, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrivalUdp1OK, *CityBusAPIEstimatedTimeOfArrivalUdp1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrivalUDP1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_UDP_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/EstimatedTimeOfArrival/Streaming/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrivalUDP1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrivalUdp1OK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrivalUdp1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIFirstLastTripInfo1 取得指定s 縣市 的市區公車路線首末班車資料

  市區公車之路線首末班車資料
*/
func (a *Client) CityBusAPIFirstLastTripInfo1(params *CityBusAPIFirstLastTripInfo1Params, opts ...ClientOption) (*CityBusAPIFirstLastTripInfo1OK, *CityBusAPIFirstLastTripInfo1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIFirstLastTripInfo1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_FirstLastTripInfo_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/FirstLastTripInfo/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIFirstLastTripInfo1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIFirstLastTripInfo1OK:
		return value, nil, nil
	case *CityBusAPIFirstLastTripInfo1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIFirstLastTripInfo2 取得指定s 縣市 路線名稱 的路線首末班車資料

  市區公車之路線首末班車資料
*/
func (a *Client) CityBusAPIFirstLastTripInfo2(params *CityBusAPIFirstLastTripInfo2Params, opts ...ClientOption) (*CityBusAPIFirstLastTripInfo2OK, *CityBusAPIFirstLastTripInfo2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIFirstLastTripInfo2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_FirstLastTripInfo_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/FirstLastTripInfo/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIFirstLastTripInfo2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIFirstLastTripInfo2OK:
		return value, nil, nil
	case *CityBusAPIFirstLastTripInfo2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPINews1 取得指定s 縣市 的市區公車最新消息資料

  市區公車最新消息資料
*/
func (a *Client) CityBusAPINews1(params *CityBusAPINews1Params, opts ...ClientOption) (*CityBusAPINews1OK, *CityBusAPINews1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPINews1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_News_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/News/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPINews1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPINews1OK:
		return value, nil, nil
	case *CityBusAPINews1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIOperator1 取得指定s 縣市 的市區公車營運業者資料

  市區公車之營運業者資料
*/
func (a *Client) CityBusAPIOperator1(params *CityBusAPIOperator1Params, opts ...ClientOption) (*CityBusAPIOperator1OK, *CityBusAPIOperator1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIOperator1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Operator_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Operator/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIOperator1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIOperator1OK:
		return value, nil, nil
	case *CityBusAPIOperator1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequency2 取得指定s 縣市 的公車動態定時資料 a1 批次更新

  ### 市區公車之定時資料(A1) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIRealTimeByFrequency2(params *CityBusAPIRealTimeByFrequency2Params, opts ...ClientOption) (*CityBusAPIRealTimeByFrequency2OK, *CityBusAPIRealTimeByFrequency2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequency2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequency2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequency2OK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequency2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequency3 取得指定s 縣市 路線名稱 的公車動態定時資料 a1 批次更新

  ### 市區公車之定時資料(A1) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIRealTimeByFrequency3(params *CityBusAPIRealTimeByFrequency3Params, opts ...ClientOption) (*CityBusAPIRealTimeByFrequency3OK, *CityBusAPIRealTimeByFrequency3Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequency3Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_3",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequency3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequency3OK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequency3Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequencyUDP 取得指定s 縣市 的公車動態定時資料 a1 逐筆更新

  ### 市區公車之定時資料(A1) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIRealTimeByFrequencyUDP(params *CityBusAPIRealTimeByFrequencyUDPParams, opts ...ClientOption) (*CityBusAPIRealTimeByFrequencyUDPOK, *CityBusAPIRealTimeByFrequencyUDPStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequencyUDPParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_UDP",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/Streaming/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequencyUDPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequencyUDPOK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequencyUDPStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequencyUDP1 取得指定s 縣市 路線名稱 的公車動態定時資料 a1 逐筆更新

  ### 市區公車之定時資料(A1) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIRealTimeByFrequencyUDP1(params *CityBusAPIRealTimeByFrequencyUDP1Params, opts ...ClientOption) (*CityBusAPIRealTimeByFrequencyUdp1OK, *CityBusAPIRealTimeByFrequencyUdp1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequencyUDP1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_UDP_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeByFrequency/Streaming/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequencyUDP1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequencyUdp1OK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequencyUdp1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStop2 取得指定s 縣市 的公車動態定點資料 a2 批次更新

  ### 市區公車之定點資料(A2) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIRealTimeNearStop2(params *CityBusAPIRealTimeNearStop2Params, opts ...ClientOption) (*CityBusAPIRealTimeNearStop2OK, *CityBusAPIRealTimeNearStop2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStop2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStop2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStop2OK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStop2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStop3 取得指定s 縣市 路線名稱 的公車動態定點資料 a2 批次更新

  ### 市區公車之定點資料(A2) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIRealTimeNearStop3(params *CityBusAPIRealTimeNearStop3Params, opts ...ClientOption) (*CityBusAPIRealTimeNearStop3OK, *CityBusAPIRealTimeNearStop3Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStop3Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_3",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStop3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStop3OK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStop3Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStopUDP 取得指定s 縣市 的公車動態定點資料 a2 逐筆更新

  ### 市區公車之定點資料(A2) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIRealTimeNearStopUDP(params *CityBusAPIRealTimeNearStopUDPParams, opts ...ClientOption) (*CityBusAPIRealTimeNearStopUDPOK, *CityBusAPIRealTimeNearStopUDPStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStopUDPParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_UDP",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/Streaming/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStopUDPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStopUDPOK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStopUDPStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStopUDP1 取得指定s 縣市 路線名稱 的公車動態定點資料 a2 逐筆更新

  ### 市區公車之定點資料(A2) ###
- [逐筆更新]與[批次更新]之差異請詳見資料使用葵花寶典([連結](https://ptxmotc.gitbooks.io/ptx-api-documentation/content/api-zi-liao-shi-yong-zhu-yi-shi-xiang/buslive.html))
*/
func (a *Client) CityBusAPIRealTimeNearStopUDP1(params *CityBusAPIRealTimeNearStopUDP1Params, opts ...ClientOption) (*CityBusAPIRealTimeNearStopUdp1OK, *CityBusAPIRealTimeNearStopUdp1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStopUDP1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_UDP_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RealTimeNearStop/Streaming/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStopUDP1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStopUdp1OK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStopUdp1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteFare1 取得指定s 縣市 的市區公車路線票價資料

  市區公車路線票價資料
*/
func (a *Client) CityBusAPIRouteFare1(params *CityBusAPIRouteFare1Params, opts ...ClientOption) (*CityBusAPIRouteFare1OK, *CityBusAPIRouteFare1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteFare1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RouteFare_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteFare1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteFare1OK:
		return value, nil, nil
	case *CityBusAPIRouteFare1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteFare2 取得指定s 縣市 路線名稱 的的市區公車路線票價資料

  市區公車路線票價資料
*/
func (a *Client) CityBusAPIRouteFare2(params *CityBusAPIRouteFare2Params, opts ...ClientOption) (*CityBusAPIRouteFare2OK, *CityBusAPIRouteFare2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteFare2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RouteFare_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteFare/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteFare2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteFare2OK:
		return value, nil, nil
	case *CityBusAPIRouteFare2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteNetwork1 取得指定s 縣市 的市區公車路線網路拓撲資料

  市區公車路線網路拓撲資料
*/
func (a *Client) CityBusAPIRouteNetwork1(params *CityBusAPIRouteNetwork1Params, opts ...ClientOption) (*CityBusAPIRouteNetwork1OK, *CityBusAPIRouteNetwork1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteNetwork1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RouteNetwork_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteNetwork/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteNetwork1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteNetwork1OK:
		return value, nil, nil
	case *CityBusAPIRouteNetwork1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteNetwork2 取得指定s 縣市 路線名稱 的市區公車顯示用路線站序資料

  市區公車之顯示用路線站序資料
*/
func (a *Client) CityBusAPIRouteNetwork2(params *CityBusAPIRouteNetwork2Params, opts ...ClientOption) (*CityBusAPIRouteNetwork2OK, *CityBusAPIRouteNetwork2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteNetwork2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RouteNetwork_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/RouteNetwork/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteNetwork2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteNetwork2OK:
		return value, nil, nil
	case *CityBusAPIRouteNetwork2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRoute1 取得指定s 縣市 的市區公車路線資料

  市區公車之路線資料
*/
func (a *Client) CityBusAPIRoute1(params *CityBusAPIRoute1Params, opts ...ClientOption) (*CityBusAPIRoute1OK, *CityBusAPIRoute1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRoute1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Route_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRoute1OK:
		return value, nil, nil
	case *CityBusAPIRoute1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRoute2 取得指定s 縣市 路線名稱 的路線資料

  市區公車之路線資料
*/
func (a *Client) CityBusAPIRoute2(params *CityBusAPIRoute2Params, opts ...ClientOption) (*CityBusAPIRoute2OK, *CityBusAPIRoute2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRoute2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Route_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Route/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRoute2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRoute2OK:
		return value, nil, nil
	case *CityBusAPIRoute2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIS2STravelTimeDetail 取得指定s 縣市 路線代碼 的市區公車站間旅行時間資料

  指定[縣市],[路線代碼]的市區公車站間旅行時間資料
*/
func (a *Client) CityBusAPIS2STravelTimeDetail(params *CityBusAPIS2STravelTimeDetailParams, opts ...ClientOption) (*CityBusAPIS2STravelTimeDetailOK, *CityBusAPIS2STravelTimeDetailStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIS2STravelTimeDetailParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_S2STravelTimeDetail",
		Method:             "GET",
		PathPattern:        "/v2/Bus/S2STravelTime/City/{City}/{RouteID}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIS2STravelTimeDetailReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIS2STravelTimeDetailOK:
		return value, nil, nil
	case *CityBusAPIS2STravelTimeDetailStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPISchedule1 取得指定s 縣市 的市區公車路線班表資料

  市區公車之班表及班距資料。一般市區公車班次較多時會採用【班距】式時刻表；班次較少時會採用【班表】式時刻表
*/
func (a *Client) CityBusAPISchedule1(params *CityBusAPISchedule1Params, opts ...ClientOption) (*CityBusAPISchedule1OK, *CityBusAPISchedule1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPISchedule1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Schedule_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPISchedule1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPISchedule1OK:
		return value, nil, nil
	case *CityBusAPISchedule1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPISchedule2 取得指定s 縣市 路線名稱 的市區公車路線班表資料

  市區公車之預定班表及班距資料。一般市區公車班次較多時會採用【班距】式時刻表；班次較少時會採用【班表】式時刻表
*/
func (a *Client) CityBusAPISchedule2(params *CityBusAPISchedule2Params, opts ...ClientOption) (*CityBusAPISchedule2OK, *CityBusAPISchedule2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPISchedule2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Schedule_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Schedule/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPISchedule2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPISchedule2OK:
		return value, nil, nil
	case *CityBusAPISchedule2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIShape1 取得指定s 縣市 的市區公車線型資料

  市區公車之線型資料
*/
func (a *Client) CityBusAPIShape1(params *CityBusAPIShape1Params, opts ...ClientOption) (*CityBusAPIShape1OK, *CityBusAPIShape1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIShape1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Shape_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIShape1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIShape1OK:
		return value, nil, nil
	case *CityBusAPIShape1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIShape2 取得指定s 縣市 路線名稱 的市區公車線型資料

  市區公車之線型資料
*/
func (a *Client) CityBusAPIShape2(params *CityBusAPIShape2Params, opts ...ClientOption) (*CityBusAPIShape2OK, *CityBusAPIShape2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIShape2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Shape_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Shape/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIShape2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIShape2OK:
		return value, nil, nil
	case *CityBusAPIShape2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStationGroup 取得指定s 縣市 的市區公車組站位資料

  市區公車之各站牌所屬的組站位資料
*/
func (a *Client) CityBusAPIStationGroup(params *CityBusAPIStationGroupParams, opts ...ClientOption) (*CityBusAPIStationGroupOK, *CityBusAPIStationGroupStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStationGroupParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_StationGroup",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StationGroup/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStationGroupReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStationGroupOK:
		return value, nil, nil
	case *CityBusAPIStationGroupStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStation1 取得指定s 縣市 的市區公車站位資料

  市區公車之各站牌所屬的站位資料
*/
func (a *Client) CityBusAPIStation1(params *CityBusAPIStation1Params, opts ...ClientOption) (*CityBusAPIStation1OK, *CityBusAPIStation1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStation1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Station_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Station/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStation1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStation1OK:
		return value, nil, nil
	case *CityBusAPIStation1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStopOfRoute1 取得指定s 縣市 的市區公車路線站序資料

  市區公車之路線站序資料
*/
func (a *Client) CityBusAPIStopOfRoute1(params *CityBusAPIStopOfRoute1Params, opts ...ClientOption) (*CityBusAPIStopOfRoute1OK, *CityBusAPIStopOfRoute1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopOfRoute1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_StopOfRoute_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopOfRoute1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopOfRoute1OK:
		return value, nil, nil
	case *CityBusAPIStopOfRoute1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStopOfRoute2 取得指定s 縣市 路線名稱 的市區公車路線站序資料

  市區公車之路線站序資料
*/
func (a *Client) CityBusAPIStopOfRoute2(params *CityBusAPIStopOfRoute2Params, opts ...ClientOption) (*CityBusAPIStopOfRoute2OK, *CityBusAPIStopOfRoute2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopOfRoute2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_StopOfRoute_2",
		Method:             "GET",
		PathPattern:        "/v2/Bus/StopOfRoute/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopOfRoute2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopOfRoute2OK:
		return value, nil, nil
	case *CityBusAPIStopOfRoute2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStop1 取得指定s 縣市 的市區公車站牌資料

  市區公車之站牌資料
*/
func (a *Client) CityBusAPIStop1(params *CityBusAPIStop1Params, opts ...ClientOption) (*CityBusAPIStop1OK, *CityBusAPIStop1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStop1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Stop_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Stop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStop1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStop1OK:
		return value, nil, nil
	case *CityBusAPIStop1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIVehicle1 取得指定s 縣市 的市區公車車輛資料

  市區公車之車輛資料
*/
func (a *Client) CityBusAPIVehicle1(params *CityBusAPIVehicle1Params, opts ...ClientOption) (*CityBusAPIVehicle1OK, *CityBusAPIVehicle1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicle1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Vehicle_1",
		Method:             "GET",
		PathPattern:        "/v2/Bus/Vehicle/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicle1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicle1OK:
		return value, nil, nil
	case *CityBusAPIVehicle1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
