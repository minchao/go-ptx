// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion3BusNews News
//
// swagger:model Service.DTO.Version3.Bus.News
type ServiceDTOVersion3BusNews struct {

	// 相關網站連結
	AttachmentURL string `json:"AttachmentURL,omitempty"`

	// 發布單位
	Department string `json:"Department,omitempty"`

	// 內容描述
	// Required: true
	Description *string `json:"Description"`

	// DateTime
	//
	// 結束時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz)
	EndTime string `json:"EndTime,omitempty"`

	// 語系
	// Required: true
	Language *string `json:"Language"`

	// 消息類別= ['1: 最新消息', '2: 新聞稿', '3: 營運資訊', '4: 轉乘資訊', '5: 活動訊息', '6: 系統公告', '99: 其他']
	// Required: true
	NewsCategory *string `json:"NewsCategory"`

	// 最新消息原單位發布代碼
	// Required: true
	NewsID *string `json:"NewsID"`

	// 報導網站連結
	NewsURL string `json:"NewsURL,omitempty"`

	// DateTime
	//
	// 消息公告日期時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz)
	// Required: true
	PublishTime *string `json:"PublishTime"`

	// DateTime
	//
	// [來源端平臺]此筆資料最後更新時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz)
	SrcUpdateTime string `json:"SrcUpdateTime,omitempty"`

	// DateTime
	//
	// 開始時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz)
	StartTime string `json:"StartTime,omitempty"`

	// 消息標題
	// Required: true
	Title *string `json:"Title"`
}

// Validate validates this service d t o version3 bus news
func (m *ServiceDTOVersion3BusNews) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLanguage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNewsCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNewsID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePublishTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion3BusNews) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("Description", "body", m.Description); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3BusNews) validateLanguage(formats strfmt.Registry) error {

	if err := validate.Required("Language", "body", m.Language); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3BusNews) validateNewsCategory(formats strfmt.Registry) error {

	if err := validate.Required("NewsCategory", "body", m.NewsCategory); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3BusNews) validateNewsID(formats strfmt.Registry) error {

	if err := validate.Required("NewsID", "body", m.NewsID); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3BusNews) validatePublishTime(formats strfmt.Registry) error {

	if err := validate.Required("PublishTime", "body", m.PublishTime); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3BusNews) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("Title", "body", m.Title); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion3BusNews) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion3BusNews) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion3BusNews
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
