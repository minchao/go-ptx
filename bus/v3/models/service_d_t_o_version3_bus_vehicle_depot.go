// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion3BusVehicleDepot VehicleDepot
// swagger:model Service.DTO.Version3.Bus.VehicleDepot
type ServiceDTOVersion3BusVehicleDepot struct {

	// 營業所代碼
	// Required: true
	DepotID *string `json:"DepotID"`

	// NameType
	//
	// 營業所名稱
	// Required: true
	DepotName *ServiceDTOVersion3BaseNameType `json:"DepotName"`

	// 車輛
	// Required: true
	Vehicles []*ServiceDTOVersion3BusVehicleDepotVehicle `json:"Vehicles"`
}

// Validate validates this service d t o version3 bus vehicle depot
func (m *ServiceDTOVersion3BusVehicleDepot) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDepotID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVehicles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion3BusVehicleDepot) validateDepotID(formats strfmt.Registry) error {

	if err := validate.Required("DepotID", "body", m.DepotID); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3BusVehicleDepot) validateDepotName(formats strfmt.Registry) error {

	if err := validate.Required("DepotName", "body", m.DepotName); err != nil {
		return err
	}

	if m.DepotName != nil {
		if err := m.DepotName.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DepotName")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion3BusVehicleDepot) validateVehicles(formats strfmt.Registry) error {

	if err := validate.Required("Vehicles", "body", m.Vehicles); err != nil {
		return err
	}

	for i := 0; i < len(m.Vehicles); i++ {
		if swag.IsZero(m.Vehicles[i]) { // not required
			continue
		}

		if m.Vehicles[i] != nil {
			if err := m.Vehicles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Vehicles" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion3BusVehicleDepot) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion3BusVehicleDepot) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion3BusVehicleDepot
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
