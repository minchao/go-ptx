// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOBusSpecificationV3Depot Depot
//
// swagger:model PTX.Service.DTO.Bus.Specification.V3.Depot
type PTXServiceDTOBusSpecificationV3Depot struct {

	// String
	//
	// 營業所地址
	// Required: true
	DepotAddress *string `json:"DepotAddress" xml:"String"`

	// String
	//
	// 營業所代碼
	// Required: true
	DepotID *string `json:"DepotID" xml:"String"`

	// NameType
	//
	// 營業所名稱
	// Required: true
	DepotName struct {
		PTXServiceDTOSharedSpecificationV3BaseNameType
	} `json:"DepotName" xml:"NameType"`

	// String
	//
	// 營業所電話
	// Required: true
	DepotPhone *string `json:"DepotPhone" xml:"String"`

	// PointType
	//
	// 營業所位置
	// Required: true
	DepotPosition struct {
		PTXServiceDTOSharedSpecificationV3BasePointType
	} `json:"DepotPosition" xml:"PointType"`

	// String
	//
	// 營業所唯一識別代碼，規則為 {業管機關簡碼} + {DepotID}，其中 {業管機關簡碼} 可於Authority API中的AuthorityCode欄位查詢
	// Required: true
	DepotUID *string `json:"DepotUID" xml:"String"`
}

// Validate validates this p t x service d t o bus specification v3 depot
func (m *PTXServiceDTOBusSpecificationV3Depot) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDepotAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotPhone(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotPosition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV3Depot) validateDepotAddress(formats strfmt.Registry) error {

	if err := validate.Required("DepotAddress", "body", m.DepotAddress); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3Depot) validateDepotID(formats strfmt.Registry) error {

	if err := validate.Required("DepotID", "body", m.DepotID); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3Depot) validateDepotName(formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3Depot) validateDepotPhone(formats strfmt.Registry) error {

	if err := validate.Required("DepotPhone", "body", m.DepotPhone); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3Depot) validateDepotPosition(formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3Depot) validateDepotUID(formats strfmt.Registry) error {

	if err := validate.Required("DepotUID", "body", m.DepotUID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this p t x service d t o bus specification v3 depot based on the context it is used
func (m *PTXServiceDTOBusSpecificationV3Depot) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDepotName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateDepotPosition(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV3Depot) contextValidateDepotName(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3Depot) contextValidateDepotPosition(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV3Depot) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV3Depot) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOBusSpecificationV3Depot
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
