// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion3BusStageFareStage Stage
//
// 計費站
//
// swagger:model Service.DTO.Version3.Bus.StageFare.Stage
type ServiceDTOVersion3BusStageFareStage struct {

	// 計費訖點站牌代碼
	StopID string `json:"StopID,omitempty"`

	// NameType
	//
	// 站牌名稱
	StopName *ServiceDTOVersion3BaseNameType `json:"StopName,omitempty"`

	// 站牌唯一識別代碼，規則為 {業管機關簡碼} + {StopID}，其中 {業管機關簡碼} 可於Authority API中的AuthorityCode欄位查詢
	// Required: true
	StopUID *string `json:"StopUID"`
}

// Validate validates this service d t o version3 bus stage fare stage
func (m *ServiceDTOVersion3BusStageFareStage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStopName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStopUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion3BusStageFareStage) validateStopName(formats strfmt.Registry) error {

	if swag.IsZero(m.StopName) { // not required
		return nil
	}

	if m.StopName != nil {
		if err := m.StopName.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("StopName")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion3BusStageFareStage) validateStopUID(formats strfmt.Registry) error {

	if err := validate.Required("StopUID", "body", m.StopUID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion3BusStageFareStage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion3BusStageFareStage) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion3BusStageFareStage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
