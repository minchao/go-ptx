// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOBusSpecificationV3RouteFareODFare ODFare
//
// swagger:model PTX.Service.DTO.Bus.Specification.V3.RouteFare+ODFare
type PTXServiceDTOBusSpecificationV3RouteFareODFare struct {

	// OD
	//
	// 計費迄點
	// Required: true
	DestinationStops struct {
		PTXServiceDTOBusSpecificationV3RouteFareODFareOD
	} `json:"DestinationStops"`

	// integer
	//
	// 方向性描述 : [0:'去程',1:'返程',2:'迴圈',255:'未知']
	// Required: true
	Direction *int32 `json:"Direction"`

	// Array
	//
	// 計費價格
	// Required: true
	Fares []*PTXServiceDTOBusSpecificationV3RouteFareODFareFareOD `json:"Fares"`

	// OD
	//
	// 計費起點
	// Required: true
	OriginStops struct {
		PTXServiceDTOBusSpecificationV3RouteFareODFareOD
	} `json:"OriginStops"`
}

// Validate validates this p t x service d t o bus specification v3 route fare o d fare
func (m *PTXServiceDTOBusSpecificationV3RouteFareODFare) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDestinationStops(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFares(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginStops(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV3RouteFareODFare) validateDestinationStops(formats strfmt.Registry) error {

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3RouteFareODFare) validateDirection(formats strfmt.Registry) error {

	if err := validate.Required("Direction", "body", m.Direction); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3RouteFareODFare) validateFares(formats strfmt.Registry) error {

	if err := validate.Required("Fares", "body", m.Fares); err != nil {
		return err
	}

	for i := 0; i < len(m.Fares); i++ {
		if swag.IsZero(m.Fares[i]) { // not required
			continue
		}

		if m.Fares[i] != nil {
			if err := m.Fares[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Fares" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3RouteFareODFare) validateOriginStops(formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV3RouteFareODFare) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV3RouteFareODFare) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOBusSpecificationV3RouteFareODFare
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
