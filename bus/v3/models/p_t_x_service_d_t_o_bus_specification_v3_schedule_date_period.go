// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOBusSpecificationV3ScheduleDatePeriod DatePeriod
//
// swagger:model PTX.Service.DTO.Bus.Specification.V3.Schedule+DatePeriod
type PTXServiceDTOBusSpecificationV3ScheduleDatePeriod struct {

	// String
	//
	// 結束日期
	// Required: true
	EndDate *string `json:"EndDate" xml:"EndDate"`

	// String
	//
	// 開始日期
	// Required: true
	StartDate *string `json:"StartDate" xml:"StartDate"`
}

// Validate validates this p t x service d t o bus specification v3 schedule date period
func (m *PTXServiceDTOBusSpecificationV3ScheduleDatePeriod) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOBusSpecificationV3ScheduleDatePeriod) validateEndDate(formats strfmt.Registry) error {

	if err := validate.Required("EndDate", "body", m.EndDate); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOBusSpecificationV3ScheduleDatePeriod) validateStartDate(formats strfmt.Registry) error {

	if err := validate.Required("StartDate", "body", m.StartDate); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this p t x service d t o bus specification v3 schedule date period based on context it is used
func (m *PTXServiceDTOBusSpecificationV3ScheduleDatePeriod) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV3ScheduleDatePeriod) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOBusSpecificationV3ScheduleDatePeriod) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOBusSpecificationV3ScheduleDatePeriod
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
