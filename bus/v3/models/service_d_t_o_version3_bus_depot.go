// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion3BusDepot Depot
//
// swagger:model Service.DTO.Version3.Bus.Depot
type ServiceDTOVersion3BusDepot struct {

	// 營業所地址
	// Required: true
	DepotAddress *string `json:"DepotAddress"`

	// 營業所代碼
	// Required: true
	DepotID *string `json:"DepotID"`

	// NameType
	//
	// 營業所名稱
	// Required: true
	DepotName *ServiceDTOVersion3BaseNameType `json:"DepotName"`

	// 營業所電話
	// Required: true
	DepotPhone *string `json:"DepotPhone"`

	// PointType
	//
	// 營業所位置
	// Required: true
	DepotPosition *ServiceDTOVersion3BasePointType `json:"DepotPosition"`

	// 營業所唯一識別代碼，規則為 {業管機關簡碼} + {DepotID}，其中 {業管機關簡碼} 可於Authority API中的AuthorityCode欄位查詢
	// Required: true
	DepotUID *string `json:"DepotUID"`
}

// Validate validates this service d t o version3 bus depot
func (m *ServiceDTOVersion3BusDepot) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDepotAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotPhone(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotPosition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepotUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion3BusDepot) validateDepotAddress(formats strfmt.Registry) error {

	if err := validate.Required("DepotAddress", "body", m.DepotAddress); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3BusDepot) validateDepotID(formats strfmt.Registry) error {

	if err := validate.Required("DepotID", "body", m.DepotID); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3BusDepot) validateDepotName(formats strfmt.Registry) error {

	if err := validate.Required("DepotName", "body", m.DepotName); err != nil {
		return err
	}

	if m.DepotName != nil {
		if err := m.DepotName.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DepotName")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion3BusDepot) validateDepotPhone(formats strfmt.Registry) error {

	if err := validate.Required("DepotPhone", "body", m.DepotPhone); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion3BusDepot) validateDepotPosition(formats strfmt.Registry) error {

	if err := validate.Required("DepotPosition", "body", m.DepotPosition); err != nil {
		return err
	}

	if m.DepotPosition != nil {
		if err := m.DepotPosition.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DepotPosition")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion3BusDepot) validateDepotUID(formats strfmt.Registry) error {

	if err := validate.Required("DepotUID", "body", m.DepotUID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion3BusDepot) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion3BusDepot) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion3BusDepot
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
