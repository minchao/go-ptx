// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PTXServiceDTOSharedSpecificationV3BaseOutbound Outbound
//
// 本平台API狀態
//
// swagger:model PTX.Service.DTO.Shared.Specification.V3.Base.Outbound
type PTXServiceDTOSharedSpecificationV3BaseOutbound struct {

	// DateTime
	//
	// 檢核時間
	// Required: true
	CheckTime *string `json:"CheckTime"`

	// String
	//
	// 檢核失敗原因
	Reason string `json:"Reason,omitempty"`

	// integer
	//
	// 檢核結果狀態 : [0:'失敗',1:'成功']
	// Required: true
	Status *int32 `json:"Status"`
}

// Validate validates this p t x service d t o shared specification v3 base outbound
func (m *PTXServiceDTOSharedSpecificationV3BaseOutbound) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCheckTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PTXServiceDTOSharedSpecificationV3BaseOutbound) validateCheckTime(formats strfmt.Registry) error {

	if err := validate.Required("CheckTime", "body", m.CheckTime); err != nil {
		return err
	}

	return nil
}

func (m *PTXServiceDTOSharedSpecificationV3BaseOutbound) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("Status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this p t x service d t o shared specification v3 base outbound based on context it is used
func (m *PTXServiceDTOSharedSpecificationV3BaseOutbound) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PTXServiceDTOSharedSpecificationV3BaseOutbound) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PTXServiceDTOSharedSpecificationV3BaseOutbound) UnmarshalBinary(b []byte) error {
	var res PTXServiceDTOSharedSpecificationV3BaseOutbound
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
