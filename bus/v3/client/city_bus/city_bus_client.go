// Code generated by go-swagger; DO NOT EDIT.

package city_bus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new city bus API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for city bus API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CityBusAPIAlert(params *CityBusAPIAlertParams) (*CityBusAPIAlertOK, *CityBusAPIAlertStatus299, error)

	CityBusAPIDailyTimeTable(params *CityBusAPIDailyTimeTableParams) (*CityBusAPIDailyTimeTableOK, *CityBusAPIDailyTimeTableStatus299, error)

	CityBusAPIDepot(params *CityBusAPIDepotParams) (*CityBusAPIDepotOK, *CityBusAPIDepotStatus299, error)

	CityBusAPIDisplayStopOfRoute2(params *CityBusAPIDisplayStopOfRoute2Params) (*CityBusAPIDisplayStopOfRoute2OK, *CityBusAPIDisplayStopOfRoute2Status299, error)

	CityBusAPIEstimatedTimeOfArrival2(params *CityBusAPIEstimatedTimeOfArrival2Params) (*CityBusAPIEstimatedTimeOfArrival2OK, *CityBusAPIEstimatedTimeOfArrival2Status299, error)

	CityBusAPIEstimatedTimeOfArrival3(params *CityBusAPIEstimatedTimeOfArrival3Params) (*CityBusAPIEstimatedTimeOfArrival3OK, *CityBusAPIEstimatedTimeOfArrival3Status299, error)

	CityBusAPIFirstLastTripInfo2(params *CityBusAPIFirstLastTripInfo2Params) (*CityBusAPIFirstLastTripInfo2OK, *CityBusAPIFirstLastTripInfo2Status299, error)

	CityBusAPINetwork(params *CityBusAPINetworkParams) (*CityBusAPINetworkOK, *CityBusAPINetworkStatus299, error)

	CityBusAPINews1(params *CityBusAPINews1Params) (*CityBusAPINews1OK, *CityBusAPINews1Status299, error)

	CityBusAPIOperator1(params *CityBusAPIOperator1Params) (*CityBusAPIOperator1OK, *CityBusAPIOperator1Status299, error)

	CityBusAPIRealTimeByFrequency2(params *CityBusAPIRealTimeByFrequency2Params) (*CityBusAPIRealTimeByFrequency2OK, *CityBusAPIRealTimeByFrequency2Status299, error)

	CityBusAPIRealTimeByFrequency3(params *CityBusAPIRealTimeByFrequency3Params) (*CityBusAPIRealTimeByFrequency3OK, *CityBusAPIRealTimeByFrequency3Status299, error)

	CityBusAPIRealTimeNearStop2(params *CityBusAPIRealTimeNearStop2Params) (*CityBusAPIRealTimeNearStop2OK, *CityBusAPIRealTimeNearStop2Status299, error)

	CityBusAPIRealTimeNearStop3(params *CityBusAPIRealTimeNearStop3Params) (*CityBusAPIRealTimeNearStop3OK, *CityBusAPIRealTimeNearStop3Status299, error)

	CityBusAPIRouteFare2(params *CityBusAPIRouteFare2Params) (*CityBusAPIRouteFare2OK, *CityBusAPIRouteFare2Status299, error)

	CityBusAPIRouteNetwork(params *CityBusAPIRouteNetworkParams) (*CityBusAPIRouteNetworkOK, *CityBusAPIRouteNetworkStatus299, error)

	CityBusAPIRoute2(params *CityBusAPIRoute2Params) (*CityBusAPIRoute2OK, *CityBusAPIRoute2Status299, error)

	CityBusAPIS2STravelTime1(params *CityBusAPIS2STravelTime1Params) (*CityBusAPIS2STravelTime1OK, *CityBusAPIS2STravelTime1Status299, error)

	CityBusAPISchedule2(params *CityBusAPISchedule2Params) (*CityBusAPISchedule2OK, *CityBusAPISchedule2Status299, error)

	CityBusAPIShape2(params *CityBusAPIShape2Params) (*CityBusAPIShape2OK, *CityBusAPIShape2Status299, error)

	CityBusAPIStation1(params *CityBusAPIStation1Params) (*CityBusAPIStation1OK, *CityBusAPIStation1Status299, error)

	CityBusAPIStopOfRoute2(params *CityBusAPIStopOfRoute2Params) (*CityBusAPIStopOfRoute2OK, *CityBusAPIStopOfRoute2Status299, error)

	CityBusAPIStop1(params *CityBusAPIStop1Params) (*CityBusAPIStop1OK, *CityBusAPIStop1Status299, error)

	CityBusAPISubRoute(params *CityBusAPISubRouteParams) (*CityBusAPISubRouteOK, *CityBusAPISubRouteStatus299, error)

	CityBusAPIVehicleDepot(params *CityBusAPIVehicleDepotParams) (*CityBusAPIVehicleDepotOK, *CityBusAPIVehicleDepotStatus299, error)

	CityBusAPIVehicleRoute(params *CityBusAPIVehicleRouteParams) (*CityBusAPIVehicleRouteOK, *CityBusAPIVehicleRouteStatus299, error)

	CityBusAPIVehicle1(params *CityBusAPIVehicle1Params) (*CityBusAPIVehicle1OK, *CityBusAPIVehicle1Status299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CityBusAPIAlert 取得指定s 縣市 的公車通阻資料

  市區公車之公車通阻資料
*/
func (a *Client) CityBusAPIAlert(params *CityBusAPIAlertParams) (*CityBusAPIAlertOK, *CityBusAPIAlertStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIAlertParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Alert",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Alert/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIAlertReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIAlertOK:
		return value, nil, nil
	case *CityBusAPIAlertStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDailyTimeTable 取得指定s 縣市 的市區公車每日營運時刻表
*/
func (a *Client) CityBusAPIDailyTimeTable(params *CityBusAPIDailyTimeTableParams) (*CityBusAPIDailyTimeTableOK, *CityBusAPIDailyTimeTableStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDailyTimeTableParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_DailyTimeTable",
		Method:             "GET",
		PathPattern:        "/v3/Bus/DailyTimeTable/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDailyTimeTableReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDailyTimeTableOK:
		return value, nil, nil
	case *CityBusAPIDailyTimeTableStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDepot 取得指定s 縣市 的市區公車行駛路線之營業所的資料
*/
func (a *Client) CityBusAPIDepot(params *CityBusAPIDepotParams) (*CityBusAPIDepotOK, *CityBusAPIDepotStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDepotParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Depot",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Depot/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDepotReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDepotOK:
		return value, nil, nil
	case *CityBusAPIDepotStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDisplayStopOfRoute2 取得指定s 縣市 的市區公車顯示用路線站序資料
*/
func (a *Client) CityBusAPIDisplayStopOfRoute2(params *CityBusAPIDisplayStopOfRoute2Params) (*CityBusAPIDisplayStopOfRoute2OK, *CityBusAPIDisplayStopOfRoute2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDisplayStopOfRoute2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_DisplayStopOfRoute_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/DisplayStopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDisplayStopOfRoute2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDisplayStopOfRoute2OK:
		return value, nil, nil
	case *CityBusAPIDisplayStopOfRoute2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIEstimatedTimeOfArrival2 取得指定s 縣市 的公車預估到站資料 n1

  [部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime > 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival2(params *CityBusAPIEstimatedTimeOfArrival2Params) (*CityBusAPIEstimatedTimeOfArrival2OK, *CityBusAPIEstimatedTimeOfArrival2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrival2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/EstimatedTimeOfArrival/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrival2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrival2OK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrival2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIEstimatedTimeOfArrival3 取得指定s 縣市 路線名稱 的公車預估到站資料 n1

  [部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime > 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival3(params *CityBusAPIEstimatedTimeOfArrival3Params) (*CityBusAPIEstimatedTimeOfArrival3OK, *CityBusAPIEstimatedTimeOfArrival3Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrival3Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_3",
		Method:             "GET",
		PathPattern:        "/v3/Bus/EstimatedTimeOfArrival/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrival3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrival3OK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrival3Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIFirstLastTripInfo2 取得指定s 縣市 的市區公車路線定期首末班車資料
*/
func (a *Client) CityBusAPIFirstLastTripInfo2(params *CityBusAPIFirstLastTripInfo2Params) (*CityBusAPIFirstLastTripInfo2OK, *CityBusAPIFirstLastTripInfo2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIFirstLastTripInfo2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_FirstLastTripInfo_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/FirstLastTripInfo/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIFirstLastTripInfo2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIFirstLastTripInfo2OK:
		return value, nil, nil
	case *CityBusAPIFirstLastTripInfo2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPINetwork 取得指定s 縣市 的市區公車路網資料
*/
func (a *Client) CityBusAPINetwork(params *CityBusAPINetworkParams) (*CityBusAPINetworkOK, *CityBusAPINetworkStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPINetworkParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Network",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Network/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPINetworkReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPINetworkOK:
		return value, nil, nil
	case *CityBusAPINetworkStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPINews1 取得指定s 縣市 的公車最新消息

  市區公車之最新消息
*/
func (a *Client) CityBusAPINews1(params *CityBusAPINews1Params) (*CityBusAPINews1OK, *CityBusAPINews1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPINews1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_News_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/News/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPINews1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPINews1OK:
		return value, nil, nil
	case *CityBusAPINews1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIOperator1 取得指定s 縣市 的市區公車營運業者資料
*/
func (a *Client) CityBusAPIOperator1(params *CityBusAPIOperator1Params) (*CityBusAPIOperator1OK, *CityBusAPIOperator1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIOperator1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Operator_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Operator/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIOperator1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIOperator1OK:
		return value, nil, nil
	case *CityBusAPIOperator1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequency2 取得指定s 縣市 的公車動態定時資料 a1

  市區公車之定時資料(A1)
*/
func (a *Client) CityBusAPIRealTimeByFrequency2(params *CityBusAPIRealTimeByFrequency2Params) (*CityBusAPIRealTimeByFrequency2OK, *CityBusAPIRealTimeByFrequency2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequency2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeByFrequency/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequency2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequency2OK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequency2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequency3 取得指定s 縣市 路線名稱 的公車動態定時資料 a1

  市區公車之定時資料(A1)
*/
func (a *Client) CityBusAPIRealTimeByFrequency3(params *CityBusAPIRealTimeByFrequency3Params) (*CityBusAPIRealTimeByFrequency3OK, *CityBusAPIRealTimeByFrequency3Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequency3Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_3",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeByFrequency/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequency3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequency3OK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequency3Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStop2 取得指定s 縣市 的公車動態定點資料 a2

  市區公車之定點資料(A2)
*/
func (a *Client) CityBusAPIRealTimeNearStop2(params *CityBusAPIRealTimeNearStop2Params) (*CityBusAPIRealTimeNearStop2OK, *CityBusAPIRealTimeNearStop2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStop2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeNearStop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStop2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStop2OK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStop2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStop3 取得指定s 縣市 路線名稱 的公車動態定點資料 a2

  市區公車之定點資料(A2)
*/
func (a *Client) CityBusAPIRealTimeNearStop3(params *CityBusAPIRealTimeNearStop3Params) (*CityBusAPIRealTimeNearStop3OK, *CityBusAPIRealTimeNearStop3Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStop3Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_3",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeNearStop/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStop3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStop3OK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStop3Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteFare2 取得指定s 縣市 的市區公車路線票價資料
*/
func (a *Client) CityBusAPIRouteFare2(params *CityBusAPIRouteFare2Params) (*CityBusAPIRouteFare2OK, *CityBusAPIRouteFare2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteFare2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RouteFare_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RouteFare/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteFare2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteFare2OK:
		return value, nil, nil
	case *CityBusAPIRouteFare2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteNetwork 取得指定s 縣市 的市區公車路線網路拓撲資料
*/
func (a *Client) CityBusAPIRouteNetwork(params *CityBusAPIRouteNetworkParams) (*CityBusAPIRouteNetworkOK, *CityBusAPIRouteNetworkStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteNetworkParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RouteNetwork",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RouteNetwork/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteNetworkReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteNetworkOK:
		return value, nil, nil
	case *CityBusAPIRouteNetworkStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRoute2 取得指定s 縣市 的市區公車路線資料

  市區公車之路線資料
*/
func (a *Client) CityBusAPIRoute2(params *CityBusAPIRoute2Params) (*CityBusAPIRoute2OK, *CityBusAPIRoute2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRoute2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Route_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Route/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRoute2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRoute2OK:
		return value, nil, nil
	case *CityBusAPIRoute2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIS2STravelTime1 取得指定s 縣市 的市區公車路線站間旅行時間基本資料
*/
func (a *Client) CityBusAPIS2STravelTime1(params *CityBusAPIS2STravelTime1Params) (*CityBusAPIS2STravelTime1OK, *CityBusAPIS2STravelTime1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIS2STravelTime1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_S2STravelTime_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/S2STravelTime/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIS2STravelTime1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIS2STravelTime1OK:
		return value, nil, nil
	case *CityBusAPIS2STravelTime1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPISchedule2 取得指定s 縣市 的市區公車定期營運班表
*/
func (a *Client) CityBusAPISchedule2(params *CityBusAPISchedule2Params) (*CityBusAPISchedule2OK, *CityBusAPISchedule2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPISchedule2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Schedule_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Schedule/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPISchedule2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPISchedule2OK:
		return value, nil, nil
	case *CityBusAPISchedule2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIShape2 取得指定s 縣市 的市區公車空間線型資料
*/
func (a *Client) CityBusAPIShape2(params *CityBusAPIShape2Params) (*CityBusAPIShape2OK, *CityBusAPIShape2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIShape2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Shape_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Shape/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIShape2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIShape2OK:
		return value, nil, nil
	case *CityBusAPIShape2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStation1 取得指定s 縣市 的市區公車站位資料
*/
func (a *Client) CityBusAPIStation1(params *CityBusAPIStation1Params) (*CityBusAPIStation1OK, *CityBusAPIStation1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStation1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Station_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Station/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStation1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStation1OK:
		return value, nil, nil
	case *CityBusAPIStation1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStopOfRoute2 取得指定s 縣市 的市區公車路線站序資料

  市區公車之路線站序資料
*/
func (a *Client) CityBusAPIStopOfRoute2(params *CityBusAPIStopOfRoute2Params) (*CityBusAPIStopOfRoute2OK, *CityBusAPIStopOfRoute2Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopOfRoute2Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_StopOfRoute_2",
		Method:             "GET",
		PathPattern:        "/v3/Bus/StopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopOfRoute2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopOfRoute2OK:
		return value, nil, nil
	case *CityBusAPIStopOfRoute2Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStop1 取得指定s 縣市 的市區公車站牌資料
*/
func (a *Client) CityBusAPIStop1(params *CityBusAPIStop1Params) (*CityBusAPIStop1OK, *CityBusAPIStop1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStop1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Stop_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Stop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStop1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStop1OK:
		return value, nil, nil
	case *CityBusAPIStop1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPISubRoute 取得指定s 縣市 的市區公車附屬路線資料

  市區公車之附屬路線資料
*/
func (a *Client) CityBusAPISubRoute(params *CityBusAPISubRouteParams) (*CityBusAPISubRouteOK, *CityBusAPISubRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPISubRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_SubRoute",
		Method:             "GET",
		PathPattern:        "/v3/Bus/SubRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPISubRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPISubRouteOK:
		return value, nil, nil
	case *CityBusAPISubRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIVehicleDepot 取得指定s 縣市 的市區公車車輛所屬的營業站基本資料
*/
func (a *Client) CityBusAPIVehicleDepot(params *CityBusAPIVehicleDepotParams) (*CityBusAPIVehicleDepotOK, *CityBusAPIVehicleDepotStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicleDepotParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_VehicleDepot",
		Method:             "GET",
		PathPattern:        "/v3/Bus/VehicleDepot/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicleDepotReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicleDepotOK:
		return value, nil, nil
	case *CityBusAPIVehicleDepotStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIVehicleRoute 取得指定s 縣市 的市區公車車輛所屬路線資料
*/
func (a *Client) CityBusAPIVehicleRoute(params *CityBusAPIVehicleRouteParams) (*CityBusAPIVehicleRouteOK, *CityBusAPIVehicleRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicleRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_VehicleRoute",
		Method:             "GET",
		PathPattern:        "/v3/Bus/VehicleRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicleRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicleRouteOK:
		return value, nil, nil
	case *CityBusAPIVehicleRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIVehicle1 取得指定s 縣市 的市區公車車輛基本資料
*/
func (a *Client) CityBusAPIVehicle1(params *CityBusAPIVehicle1Params) (*CityBusAPIVehicle1OK, *CityBusAPIVehicle1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicle1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Vehicle_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Vehicle/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicle1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicle1OK:
		return value, nil, nil
	case *CityBusAPIVehicle1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
