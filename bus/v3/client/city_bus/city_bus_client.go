// Code generated by go-swagger; DO NOT EDIT.

package city_bus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new city bus API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for city bus API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CityBusAPIAlert 取得指定s 縣市 的公車通阻資料

市區公車之公車通阻資料
*/
func (a *Client) CityBusAPIAlert(params *CityBusAPIAlertParams) (*CityBusAPIAlertOK, *CityBusAPIAlertStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIAlertParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Alert",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Alert/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIAlertReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIAlertOK:
		return value, nil, nil
	case *CityBusAPIAlertStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIDailyTimeTable 取得指定s 縣市 的市區公車每日營運時刻表
*/
func (a *Client) CityBusAPIDailyTimeTable(params *CityBusAPIDailyTimeTableParams) (*CityBusAPIDailyTimeTableOK, *CityBusAPIDailyTimeTableStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDailyTimeTableParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_DailyTimeTable",
		Method:             "GET",
		PathPattern:        "/v3/Bus/DailyTimeTable/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDailyTimeTableReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDailyTimeTableOK:
		return value, nil, nil
	case *CityBusAPIDailyTimeTableStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIDepot 取得指定s 縣市 的市區公車行駛路線之營業所的資料
*/
func (a *Client) CityBusAPIDepot(params *CityBusAPIDepotParams) (*CityBusAPIDepotOK, *CityBusAPIDepotStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDepotParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Depot",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Depot/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDepotReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDepotOK:
		return value, nil, nil
	case *CityBusAPIDepotStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIDisplayStopOfRoute 取得指定s 縣市 的市區公車顯示用路線站序資料
*/
func (a *Client) CityBusAPIDisplayStopOfRoute(params *CityBusAPIDisplayStopOfRouteParams) (*CityBusAPIDisplayStopOfRouteOK, *CityBusAPIDisplayStopOfRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDisplayStopOfRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_DisplayStopOfRoute",
		Method:             "GET",
		PathPattern:        "/v3/Bus/DisplayStopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDisplayStopOfRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDisplayStopOfRouteOK:
		return value, nil, nil
	case *CityBusAPIDisplayStopOfRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIEstimatedTimeOfArrival 取得指定s 縣市 的公車預估到站資料 n1

[部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime &gt; 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival(params *CityBusAPIEstimatedTimeOfArrivalParams) (*CityBusAPIEstimatedTimeOfArrivalOK, *CityBusAPIEstimatedTimeOfArrivalStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrivalParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival",
		Method:             "GET",
		PathPattern:        "/v3/Bus/EstimatedTimeOfArrival/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrivalReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrivalOK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrivalStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIEstimatedTimeOfArrival1 取得指定s 縣市 路線名稱 的公車預估到站資料 n1

[部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime &gt; 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival1(params *CityBusAPIEstimatedTimeOfArrival1Params) (*CityBusAPIEstimatedTimeOfArrival1OK, *CityBusAPIEstimatedTimeOfArrival1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrival1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/EstimatedTimeOfArrival/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrival1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrival1OK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrival1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIFirstLastTripInfo 取得指定s 縣市 的市區公車路線定期首末班車資料
*/
func (a *Client) CityBusAPIFirstLastTripInfo(params *CityBusAPIFirstLastTripInfoParams) (*CityBusAPIFirstLastTripInfoOK, *CityBusAPIFirstLastTripInfoStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIFirstLastTripInfoParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_FirstLastTripInfo",
		Method:             "GET",
		PathPattern:        "/v3/Bus/FirstLastTripInfo/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIFirstLastTripInfoReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIFirstLastTripInfoOK:
		return value, nil, nil
	case *CityBusAPIFirstLastTripInfoStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPINetwork 取得指定s 縣市 的市區公車路網資料
*/
func (a *Client) CityBusAPINetwork(params *CityBusAPINetworkParams) (*CityBusAPINetworkOK, *CityBusAPINetworkStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPINetworkParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Network",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Network/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPINetworkReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPINetworkOK:
		return value, nil, nil
	case *CityBusAPINetworkStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPINews 取得指定s 縣市 的公車最新消息

市區公車之最新消息
*/
func (a *Client) CityBusAPINews(params *CityBusAPINewsParams) (*CityBusAPINewsOK, *CityBusAPINewsStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPINewsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_News",
		Method:             "GET",
		PathPattern:        "/v3/Bus/News/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPINewsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPINewsOK:
		return value, nil, nil
	case *CityBusAPINewsStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIOperator 取得指定s 縣市 的市區公車營運業者資料
*/
func (a *Client) CityBusAPIOperator(params *CityBusAPIOperatorParams) (*CityBusAPIOperatorOK, *CityBusAPIOperatorStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIOperatorParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Operator",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Operator/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIOperatorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIOperatorOK:
		return value, nil, nil
	case *CityBusAPIOperatorStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRealTimeByFrequency 取得指定s 縣市 的公車動態定時資料 a1

市區公車之定時資料(A1)
*/
func (a *Client) CityBusAPIRealTimeByFrequency(params *CityBusAPIRealTimeByFrequencyParams) (*CityBusAPIRealTimeByFrequencyOK, *CityBusAPIRealTimeByFrequencyStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequencyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeByFrequency/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequencyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequencyOK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequencyStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRealTimeByFrequency1 取得指定s 縣市 路線名稱 的公車動態定時資料 a1

市區公車之定時資料(A1)
*/
func (a *Client) CityBusAPIRealTimeByFrequency1(params *CityBusAPIRealTimeByFrequency1Params) (*CityBusAPIRealTimeByFrequency1OK, *CityBusAPIRealTimeByFrequency1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequency1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeByFrequency/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequency1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequency1OK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequency1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRealTimeNearStop 取得指定s 縣市 的公車動態定點資料 a2

市區公車之定點資料(A2)
*/
func (a *Client) CityBusAPIRealTimeNearStop(params *CityBusAPIRealTimeNearStopParams) (*CityBusAPIRealTimeNearStopOK, *CityBusAPIRealTimeNearStopStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStopParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeNearStop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStopOK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStopStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRealTimeNearStop1 取得指定s 縣市 路線名稱 的公車動態定點資料 a2

市區公車之定點資料(A2)
*/
func (a *Client) CityBusAPIRealTimeNearStop1(params *CityBusAPIRealTimeNearStop1Params) (*CityBusAPIRealTimeNearStop1OK, *CityBusAPIRealTimeNearStop1Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStop1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeNearStop/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStop1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStop1OK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStop1Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRoute 取得指定s 縣市 的市區公車路線資料

市區公車之路線資料
*/
func (a *Client) CityBusAPIRoute(params *CityBusAPIRouteParams) (*CityBusAPIRouteOK, *CityBusAPIRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Route",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Route/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteOK:
		return value, nil, nil
	case *CityBusAPIRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRouteFare 取得指定s 縣市 的市區公車路線票價資料
*/
func (a *Client) CityBusAPIRouteFare(params *CityBusAPIRouteFareParams) (*CityBusAPIRouteFareOK, *CityBusAPIRouteFareStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteFareParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RouteFare",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RouteFare/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteFareReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteFareOK:
		return value, nil, nil
	case *CityBusAPIRouteFareStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIRouteNetwork 取得指定s 縣市 的市區公車路線網路拓撲資料
*/
func (a *Client) CityBusAPIRouteNetwork(params *CityBusAPIRouteNetworkParams) (*CityBusAPIRouteNetworkOK, *CityBusAPIRouteNetworkStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteNetworkParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_RouteNetwork",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RouteNetwork/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteNetworkReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteNetworkOK:
		return value, nil, nil
	case *CityBusAPIRouteNetworkStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIS2STravelTime 取得指定s 縣市 的市區公車路線站間旅行時間基本資料
*/
func (a *Client) CityBusAPIS2STravelTime(params *CityBusAPIS2STravelTimeParams) (*CityBusAPIS2STravelTimeOK, *CityBusAPIS2STravelTimeStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIS2STravelTimeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_S2STravelTime",
		Method:             "GET",
		PathPattern:        "/v3/Bus/S2STravelTime/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIS2STravelTimeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIS2STravelTimeOK:
		return value, nil, nil
	case *CityBusAPIS2STravelTimeStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIShape 取得指定s 縣市 的市區公車空間線型資料
*/
func (a *Client) CityBusAPIShape(params *CityBusAPIShapeParams) (*CityBusAPIShapeOK, *CityBusAPIShapeStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIShapeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Shape",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Shape/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIShapeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIShapeOK:
		return value, nil, nil
	case *CityBusAPIShapeStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIStation 取得指定s 縣市 的市區公車站位資料
*/
func (a *Client) CityBusAPIStation(params *CityBusAPIStationParams) (*CityBusAPIStationOK, *CityBusAPIStationStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Station",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Station/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStationOK:
		return value, nil, nil
	case *CityBusAPIStationStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIStop 取得指定s 縣市 的市區公車站牌資料
*/
func (a *Client) CityBusAPIStop(params *CityBusAPIStopParams) (*CityBusAPIStopOK, *CityBusAPIStopStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Stop",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Stop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopOK:
		return value, nil, nil
	case *CityBusAPIStopStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIStopOfRoute 取得指定s 縣市 的市區公車路線站序資料

市區公車之路線站序資料
*/
func (a *Client) CityBusAPIStopOfRoute(params *CityBusAPIStopOfRouteParams) (*CityBusAPIStopOfRouteOK, *CityBusAPIStopOfRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopOfRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_StopOfRoute",
		Method:             "GET",
		PathPattern:        "/v3/Bus/StopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopOfRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopOfRouteOK:
		return value, nil, nil
	case *CityBusAPIStopOfRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPISubRoute 取得指定s 縣市 的市區公車附屬路線資料

市區公車之附屬路線資料
*/
func (a *Client) CityBusAPISubRoute(params *CityBusAPISubRouteParams) (*CityBusAPISubRouteOK, *CityBusAPISubRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPISubRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_SubRoute",
		Method:             "GET",
		PathPattern:        "/v3/Bus/SubRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPISubRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPISubRouteOK:
		return value, nil, nil
	case *CityBusAPISubRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIVehicle 取得指定s 縣市 的市區公車車輛基本資料
*/
func (a *Client) CityBusAPIVehicle(params *CityBusAPIVehicleParams) (*CityBusAPIVehicleOK, *CityBusAPIVehicleStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicleParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_Vehicle",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Vehicle/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicleReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicleOK:
		return value, nil, nil
	case *CityBusAPIVehicleStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIVehicleDepot 取得指定s 縣市 的市區公車車輛所屬的營業站基本資料
*/
func (a *Client) CityBusAPIVehicleDepot(params *CityBusAPIVehicleDepotParams) (*CityBusAPIVehicleDepotOK, *CityBusAPIVehicleDepotStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicleDepotParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_VehicleDepot",
		Method:             "GET",
		PathPattern:        "/v3/Bus/VehicleDepot/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicleDepotReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicleDepotOK:
		return value, nil, nil
	case *CityBusAPIVehicleDepotStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CityBusAPIVehicleRoute 取得指定s 縣市 的市區公車車輛所屬路線資料
*/
func (a *Client) CityBusAPIVehicleRoute(params *CityBusAPIVehicleRouteParams) (*CityBusAPIVehicleRouteOK, *CityBusAPIVehicleRouteStatus299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicleRouteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CityBusApi_VehicleRoute",
		Method:             "GET",
		PathPattern:        "/v3/Bus/VehicleRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicleRouteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicleRouteOK:
		return value, nil, nil
	case *CityBusAPIVehicleRouteStatus299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
