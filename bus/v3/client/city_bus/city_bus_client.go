// Code generated by go-swagger; DO NOT EDIT.

package city_bus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new city bus API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for city bus API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CityBusAPIAlert3018(params *CityBusAPIAlert3018Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIAlert3018OK, *CityBusAPIAlert3018Status299, error)

	CityBusAPIDailyTimeTable3011(params *CityBusAPIDailyTimeTable3011Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIDailyTimeTable3011OK, *CityBusAPIDailyTimeTable3011Status299, error)

	CityBusAPIDepot3006(params *CityBusAPIDepot3006Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIDepot3006OK, *CityBusAPIDepot3006Status299, error)

	CityBusAPIDisplayStopOfRoute3008(params *CityBusAPIDisplayStopOfRoute3008Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIDisplayStopOfRoute3008OK, *CityBusAPIDisplayStopOfRoute3008Status299, error)

	CityBusAPIEstimatedTimeOfArrival3017(params *CityBusAPIEstimatedTimeOfArrival3017Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrival3017OK, *CityBusAPIEstimatedTimeOfArrival3017Status299, error)

	CityBusAPIEstimatedTimeOfArrival30171(params *CityBusAPIEstimatedTimeOfArrival30171Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrival30171OK, *CityBusAPIEstimatedTimeOfArrival30171Status299, error)

	CityBusAPIFirstLastTripInfo3005(params *CityBusAPIFirstLastTripInfo3005Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIFirstLastTripInfo3005OK, *CityBusAPIFirstLastTripInfo3005Status299, error)

	CityBusAPINetwork3000(params *CityBusAPINetwork3000Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPINetwork3000OK, *CityBusAPINetwork3000Status299, error)

	CityBusAPINews3019(params *CityBusAPINews3019Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPINews3019OK, *CityBusAPINews3019Status299, error)

	CityBusAPIOperator3020(params *CityBusAPIOperator3020Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIOperator3020OK, *CityBusAPIOperator3020Status299, error)

	CityBusAPIRealTimeByFrequency3015(params *CityBusAPIRealTimeByFrequency3015Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRealTimeByFrequency3015OK, *CityBusAPIRealTimeByFrequency3015Status299, error)

	CityBusAPIRealTimeByFrequency30151(params *CityBusAPIRealTimeByFrequency30151Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRealTimeByFrequency30151OK, *CityBusAPIRealTimeByFrequency30151Status299, error)

	CityBusAPIRealTimeNearStop3016(params *CityBusAPIRealTimeNearStop3016Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRealTimeNearStop3016OK, *CityBusAPIRealTimeNearStop3016Status299, error)

	CityBusAPIRealTimeNearStop30161(params *CityBusAPIRealTimeNearStop30161Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRealTimeNearStop30161OK, *CityBusAPIRealTimeNearStop30161Status299, error)

	CityBusAPIRouteFare3009(params *CityBusAPIRouteFare3009Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRouteFare3009OK, *CityBusAPIRouteFare3009Status299, error)

	CityBusAPIRouteNetwork3025(params *CityBusAPIRouteNetwork3025Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRouteNetwork3025OK, *CityBusAPIRouteNetwork3025Status299, error)

	CityBusAPIRoute3003(params *CityBusAPIRoute3003Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRoute3003OK, *CityBusAPIRoute3003Status299, error)

	CityBusAPIS2STravelTime3026(params *CityBusAPIS2STravelTime3026Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIS2STravelTime3026OK, *CityBusAPIS2STravelTime3026Status299, error)

	CityBusAPISchedule3010(params *CityBusAPISchedule3010Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPISchedule3010OK, *CityBusAPISchedule3010Status299, error)

	CityBusAPIShape3024(params *CityBusAPIShape3024Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIShape3024OK, *CityBusAPIShape3024Status299, error)

	CityBusAPIStation3002(params *CityBusAPIStation3002Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIStation3002OK, *CityBusAPIStation3002Status299, error)

	CityBusAPIStopOfRoute3007(params *CityBusAPIStopOfRoute3007Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIStopOfRoute3007OK, *CityBusAPIStopOfRoute3007Status299, error)

	CityBusAPIStop3001(params *CityBusAPIStop3001Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIStop3001OK, *CityBusAPIStop3001Status299, error)

	CityBusAPISubRoute3004(params *CityBusAPISubRoute3004Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPISubRoute3004OK, *CityBusAPISubRoute3004Status299, error)

	CityBusAPIVehicleDepot3022(params *CityBusAPIVehicleDepot3022Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIVehicleDepot3022OK, *CityBusAPIVehicleDepot3022Status299, error)

	CityBusAPIVehicleRoute3023(params *CityBusAPIVehicleRoute3023Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIVehicleRoute3023OK, *CityBusAPIVehicleRoute3023Status299, error)

	CityBusAPIVehicle3021(params *CityBusAPIVehicle3021Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIVehicle3021OK, *CityBusAPIVehicle3021Status299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CityBusAPIAlert3018 取得指定s 縣市 的公車通阻資料

  市區公車之公車通阻資料
*/
func (a *Client) CityBusAPIAlert3018(params *CityBusAPIAlert3018Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIAlert3018OK, *CityBusAPIAlert3018Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIAlert3018Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Alert_3018",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Alert/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIAlert3018Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIAlert3018OK:
		return value, nil, nil
	case *CityBusAPIAlert3018Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDailyTimeTable3011 取得指定s 縣市 的市區公車每日營運時刻表
*/
func (a *Client) CityBusAPIDailyTimeTable3011(params *CityBusAPIDailyTimeTable3011Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIDailyTimeTable3011OK, *CityBusAPIDailyTimeTable3011Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDailyTimeTable3011Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_DailyTimeTable_3011",
		Method:             "GET",
		PathPattern:        "/v3/Bus/DailyTimeTable/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDailyTimeTable3011Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDailyTimeTable3011OK:
		return value, nil, nil
	case *CityBusAPIDailyTimeTable3011Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDepot3006 取得指定s 縣市 的市區公車行駛路線之營業所的資料
*/
func (a *Client) CityBusAPIDepot3006(params *CityBusAPIDepot3006Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIDepot3006OK, *CityBusAPIDepot3006Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDepot3006Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Depot_3006",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Depot/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDepot3006Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDepot3006OK:
		return value, nil, nil
	case *CityBusAPIDepot3006Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIDisplayStopOfRoute3008 取得指定s 縣市 的市區公車顯示用路線站序資料
*/
func (a *Client) CityBusAPIDisplayStopOfRoute3008(params *CityBusAPIDisplayStopOfRoute3008Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIDisplayStopOfRoute3008OK, *CityBusAPIDisplayStopOfRoute3008Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIDisplayStopOfRoute3008Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_DisplayStopOfRoute_3008",
		Method:             "GET",
		PathPattern:        "/v3/Bus/DisplayStopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIDisplayStopOfRoute3008Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIDisplayStopOfRoute3008OK:
		return value, nil, nil
	case *CityBusAPIDisplayStopOfRoute3008Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIEstimatedTimeOfArrival3017 取得指定s 縣市 的公車預估到站資料 n1

  [部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime > 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival3017(params *CityBusAPIEstimatedTimeOfArrival3017Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrival3017OK, *CityBusAPIEstimatedTimeOfArrival3017Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrival3017Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_3017",
		Method:             "GET",
		PathPattern:        "/v3/Bus/EstimatedTimeOfArrival/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrival3017Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrival3017OK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrival3017Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIEstimatedTimeOfArrival30171 取得指定s 縣市 路線名稱 的公車預估到站資料 n1

  [部分縣市] 當 StopStatus = 1(尚未發車) 且 EstimateTime > 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
*/
func (a *Client) CityBusAPIEstimatedTimeOfArrival30171(params *CityBusAPIEstimatedTimeOfArrival30171Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIEstimatedTimeOfArrival30171OK, *CityBusAPIEstimatedTimeOfArrival30171Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIEstimatedTimeOfArrival30171Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_EstimatedTimeOfArrival_3017_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/EstimatedTimeOfArrival/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIEstimatedTimeOfArrival30171Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIEstimatedTimeOfArrival30171OK:
		return value, nil, nil
	case *CityBusAPIEstimatedTimeOfArrival30171Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIFirstLastTripInfo3005 取得指定s 縣市 的市區公車路線定期首末班車資料
*/
func (a *Client) CityBusAPIFirstLastTripInfo3005(params *CityBusAPIFirstLastTripInfo3005Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIFirstLastTripInfo3005OK, *CityBusAPIFirstLastTripInfo3005Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIFirstLastTripInfo3005Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_FirstLastTripInfo_3005",
		Method:             "GET",
		PathPattern:        "/v3/Bus/FirstLastTripInfo/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIFirstLastTripInfo3005Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIFirstLastTripInfo3005OK:
		return value, nil, nil
	case *CityBusAPIFirstLastTripInfo3005Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPINetwork3000 取得指定s 縣市 的市區公車路網資料
*/
func (a *Client) CityBusAPINetwork3000(params *CityBusAPINetwork3000Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPINetwork3000OK, *CityBusAPINetwork3000Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPINetwork3000Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Network_3000",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Network/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPINetwork3000Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPINetwork3000OK:
		return value, nil, nil
	case *CityBusAPINetwork3000Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPINews3019 取得指定s 縣市 的公車最新消息

  市區公車之最新消息
*/
func (a *Client) CityBusAPINews3019(params *CityBusAPINews3019Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPINews3019OK, *CityBusAPINews3019Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPINews3019Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_News_3019",
		Method:             "GET",
		PathPattern:        "/v3/Bus/News/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPINews3019Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPINews3019OK:
		return value, nil, nil
	case *CityBusAPINews3019Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIOperator3020 取得指定s 縣市 的市區公車營運業者資料
*/
func (a *Client) CityBusAPIOperator3020(params *CityBusAPIOperator3020Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIOperator3020OK, *CityBusAPIOperator3020Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIOperator3020Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Operator_3020",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Operator/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIOperator3020Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIOperator3020OK:
		return value, nil, nil
	case *CityBusAPIOperator3020Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequency3015 取得指定s 縣市 的公車動態定時資料 a1

  市區公車之定時資料(A1)
*/
func (a *Client) CityBusAPIRealTimeByFrequency3015(params *CityBusAPIRealTimeByFrequency3015Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRealTimeByFrequency3015OK, *CityBusAPIRealTimeByFrequency3015Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequency3015Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_3015",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeByFrequency/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequency3015Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequency3015OK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequency3015Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeByFrequency30151 取得指定s 縣市 路線名稱 的公車動態定時資料 a1

  市區公車之定時資料(A1)
*/
func (a *Client) CityBusAPIRealTimeByFrequency30151(params *CityBusAPIRealTimeByFrequency30151Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRealTimeByFrequency30151OK, *CityBusAPIRealTimeByFrequency30151Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeByFrequency30151Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeByFrequency_3015_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeByFrequency/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeByFrequency30151Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeByFrequency30151OK:
		return value, nil, nil
	case *CityBusAPIRealTimeByFrequency30151Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStop3016 取得指定s 縣市 的公車動態定點資料 a2

  市區公車之定點資料(A2)
*/
func (a *Client) CityBusAPIRealTimeNearStop3016(params *CityBusAPIRealTimeNearStop3016Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRealTimeNearStop3016OK, *CityBusAPIRealTimeNearStop3016Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStop3016Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_3016",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeNearStop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStop3016Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStop3016OK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStop3016Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRealTimeNearStop30161 取得指定s 縣市 路線名稱 的公車動態定點資料 a2

  市區公車之定點資料(A2)
*/
func (a *Client) CityBusAPIRealTimeNearStop30161(params *CityBusAPIRealTimeNearStop30161Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRealTimeNearStop30161OK, *CityBusAPIRealTimeNearStop30161Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRealTimeNearStop30161Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RealTimeNearStop_3016_1",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RealTimeNearStop/City/{City}/{RouteName}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRealTimeNearStop30161Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRealTimeNearStop30161OK:
		return value, nil, nil
	case *CityBusAPIRealTimeNearStop30161Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteFare3009 取得指定s 縣市 的市區公車路線票價資料
*/
func (a *Client) CityBusAPIRouteFare3009(params *CityBusAPIRouteFare3009Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRouteFare3009OK, *CityBusAPIRouteFare3009Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteFare3009Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RouteFare_3009",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RouteFare/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteFare3009Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteFare3009OK:
		return value, nil, nil
	case *CityBusAPIRouteFare3009Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRouteNetwork3025 取得指定s 縣市 的市區公車路線網路拓撲資料
*/
func (a *Client) CityBusAPIRouteNetwork3025(params *CityBusAPIRouteNetwork3025Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRouteNetwork3025OK, *CityBusAPIRouteNetwork3025Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRouteNetwork3025Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_RouteNetwork_3025",
		Method:             "GET",
		PathPattern:        "/v3/Bus/RouteNetwork/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRouteNetwork3025Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRouteNetwork3025OK:
		return value, nil, nil
	case *CityBusAPIRouteNetwork3025Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIRoute3003 取得指定s 縣市 的市區公車路線資料

  市區公車之路線資料
*/
func (a *Client) CityBusAPIRoute3003(params *CityBusAPIRoute3003Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIRoute3003OK, *CityBusAPIRoute3003Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIRoute3003Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Route_3003",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Route/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIRoute3003Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIRoute3003OK:
		return value, nil, nil
	case *CityBusAPIRoute3003Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIS2STravelTime3026 取得指定s 縣市 的市區公車路線站間旅行時間基本資料
*/
func (a *Client) CityBusAPIS2STravelTime3026(params *CityBusAPIS2STravelTime3026Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIS2STravelTime3026OK, *CityBusAPIS2STravelTime3026Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIS2STravelTime3026Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_S2STravelTime_3026",
		Method:             "GET",
		PathPattern:        "/v3/Bus/S2STravelTime/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIS2STravelTime3026Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIS2STravelTime3026OK:
		return value, nil, nil
	case *CityBusAPIS2STravelTime3026Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPISchedule3010 取得指定s 縣市 的市區公車定期營運班表
*/
func (a *Client) CityBusAPISchedule3010(params *CityBusAPISchedule3010Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPISchedule3010OK, *CityBusAPISchedule3010Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPISchedule3010Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Schedule_3010",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Schedule/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPISchedule3010Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPISchedule3010OK:
		return value, nil, nil
	case *CityBusAPISchedule3010Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIShape3024 取得指定s 縣市 的市區公車空間線型資料
*/
func (a *Client) CityBusAPIShape3024(params *CityBusAPIShape3024Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIShape3024OK, *CityBusAPIShape3024Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIShape3024Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Shape_3024",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Shape/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIShape3024Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIShape3024OK:
		return value, nil, nil
	case *CityBusAPIShape3024Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStation3002 取得指定s 縣市 的市區公車站位資料
*/
func (a *Client) CityBusAPIStation3002(params *CityBusAPIStation3002Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIStation3002OK, *CityBusAPIStation3002Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStation3002Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Station_3002",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Station/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStation3002Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStation3002OK:
		return value, nil, nil
	case *CityBusAPIStation3002Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStopOfRoute3007 取得指定s 縣市 的市區公車路線站序資料

  市區公車之路線站序資料
*/
func (a *Client) CityBusAPIStopOfRoute3007(params *CityBusAPIStopOfRoute3007Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIStopOfRoute3007OK, *CityBusAPIStopOfRoute3007Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStopOfRoute3007Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_StopOfRoute_3007",
		Method:             "GET",
		PathPattern:        "/v3/Bus/StopOfRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStopOfRoute3007Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStopOfRoute3007OK:
		return value, nil, nil
	case *CityBusAPIStopOfRoute3007Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIStop3001 取得指定s 縣市 的市區公車站牌資料
*/
func (a *Client) CityBusAPIStop3001(params *CityBusAPIStop3001Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIStop3001OK, *CityBusAPIStop3001Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIStop3001Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Stop_3001",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Stop/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIStop3001Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIStop3001OK:
		return value, nil, nil
	case *CityBusAPIStop3001Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPISubRoute3004 取得指定s 縣市 的市區公車附屬路線資料

  市區公車之附屬路線資料
*/
func (a *Client) CityBusAPISubRoute3004(params *CityBusAPISubRoute3004Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPISubRoute3004OK, *CityBusAPISubRoute3004Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPISubRoute3004Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_SubRoute_3004",
		Method:             "GET",
		PathPattern:        "/v3/Bus/SubRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPISubRoute3004Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPISubRoute3004OK:
		return value, nil, nil
	case *CityBusAPISubRoute3004Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIVehicleDepot3022 取得指定s 縣市 的市區公車車輛所屬的營業站基本資料
*/
func (a *Client) CityBusAPIVehicleDepot3022(params *CityBusAPIVehicleDepot3022Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIVehicleDepot3022OK, *CityBusAPIVehicleDepot3022Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicleDepot3022Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_VehicleDepot_3022",
		Method:             "GET",
		PathPattern:        "/v3/Bus/VehicleDepot/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicleDepot3022Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicleDepot3022OK:
		return value, nil, nil
	case *CityBusAPIVehicleDepot3022Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIVehicleRoute3023 取得指定s 縣市 的市區公車車輛所屬路線資料
*/
func (a *Client) CityBusAPIVehicleRoute3023(params *CityBusAPIVehicleRoute3023Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIVehicleRoute3023OK, *CityBusAPIVehicleRoute3023Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicleRoute3023Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_VehicleRoute_3023",
		Method:             "GET",
		PathPattern:        "/v3/Bus/VehicleRoute/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicleRoute3023Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicleRoute3023OK:
		return value, nil, nil
	case *CityBusAPIVehicleRoute3023Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CityBusAPIVehicle3021 取得指定s 縣市 的市區公車車輛基本資料
*/
func (a *Client) CityBusAPIVehicle3021(params *CityBusAPIVehicle3021Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CityBusAPIVehicle3021OK, *CityBusAPIVehicle3021Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCityBusAPIVehicle3021Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CityBusApi_Vehicle_3021",
		Method:             "GET",
		PathPattern:        "/v3/Bus/Vehicle/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CityBusAPIVehicle3021Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CityBusAPIVehicle3021OK:
		return value, nil, nil
	case *CityBusAPIVehicle3021Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for city_bus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
