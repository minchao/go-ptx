// Code generated by go-swagger; DO NOT EDIT.

package bike

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new bike API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for bike API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	BikeAPIAvailability2181(params *BikeAPIAvailability2181Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BikeAPIAvailability2181OK, *BikeAPIAvailability2181Status299, error)

	BikeAPIStation2180(params *BikeAPIStation2180Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BikeAPIStation2180OK, *BikeAPIStation2180Status299, error)

	CyclingAPIShape2182(params *CyclingAPIShape2182Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CyclingAPIShape2182OK, *CyclingAPIShape2182Status299, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  BikeAPIAvailability2181 取得動態指定s 縣市 的公共自行車即時車位資料

  取得動態指定[縣市]的公共自行車即時車位資料
*/
func (a *Client) BikeAPIAvailability2181(params *BikeAPIAvailability2181Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BikeAPIAvailability2181OK, *BikeAPIAvailability2181Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBikeAPIAvailability2181Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "BikeApi_Availability_2181",
		Method:             "GET",
		PathPattern:        "/v2/Bike/Availability/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BikeAPIAvailability2181Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BikeAPIAvailability2181OK:
		return value, nil, nil
	case *BikeAPIAvailability2181Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bike: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BikeAPIStation2180 取得指定s 縣市 的公共自行車租借站位資料

  取得指定[縣市]的公共自行車租借站位資料
*/
func (a *Client) BikeAPIStation2180(params *BikeAPIStation2180Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BikeAPIStation2180OK, *BikeAPIStation2180Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBikeAPIStation2180Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "BikeApi_Station_2180",
		Method:             "GET",
		PathPattern:        "/v2/Bike/Station/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BikeAPIStation2180Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *BikeAPIStation2180OK:
		return value, nil, nil
	case *BikeAPIStation2180Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bike: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CyclingAPIShape2182 取得指定縣市之自行車道路網圖資s

  取得指定縣市之自行車道路網圖資
*/
func (a *Client) CyclingAPIShape2182(params *CyclingAPIShape2182Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CyclingAPIShape2182OK, *CyclingAPIShape2182Status299, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCyclingAPIShape2182Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CyclingApi_Shape_2182",
		Method:             "GET",
		PathPattern:        "/v2/Cycling/Shape/City/{City}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CyclingAPIShape2182Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CyclingAPIShape2182OK:
		return value, nil, nil
	case *CyclingAPIShape2182Status299:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bike: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
