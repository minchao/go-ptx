// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceDTOVersion2AviationAirline Airline
//
// 航空公司資料
//
// swagger:model Service.DTO.Version2.Aviation.Airline
type ServiceDTOVersion2AviationAirline struct {

	// 航空公司地址
	AirlineAddress string `json:"AirlineAddress,omitempty"`

	// 航空公司電子信箱
	AirlineEmail string `json:"AirlineEmail,omitempty"`

	// 航空公司IATA國際代碼
	AirlineIATA string `json:"AirlineIATA,omitempty"`

	// 航空公司ICAO國際代碼
	AirlineICAO string `json:"AirlineICAO,omitempty"`

	// 航空公司IATA國際代碼
	// Required: true
	AirlineID *string `json:"AirlineID"`

	// NameType
	//
	// 航空公司名稱
	AirlineName *ServiceDTOVersion2BaseNameType `json:"AirlineName,omitempty"`

	// NameType
	//
	// 航空公司簡稱
	AirlineNameAlias *ServiceDTOVersion2BaseNameType `json:"AirlineNameAlias,omitempty"`

	// 航空公司國籍
	AirlineNationality string `json:"AirlineNationality,omitempty"`

	// 航空公司聯繫電話
	AirlinePhone string `json:"AirlinePhone,omitempty"`

	// DateTime
	//
	// 資料更新日期時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz)
	// Required: true
	UpdateTime *string `json:"UpdateTime"`

	// 資料版本編號
	// Required: true
	VersionID *int32 `json:"VersionID"`
}

// Validate validates this service d t o version2 aviation airline
func (m *ServiceDTOVersion2AviationAirline) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAirlineID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAirlineName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAirlineNameAlias(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceDTOVersion2AviationAirline) validateAirlineID(formats strfmt.Registry) error {

	if err := validate.Required("AirlineID", "body", m.AirlineID); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion2AviationAirline) validateAirlineName(formats strfmt.Registry) error {

	if swag.IsZero(m.AirlineName) { // not required
		return nil
	}

	if m.AirlineName != nil {
		if err := m.AirlineName.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("AirlineName")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion2AviationAirline) validateAirlineNameAlias(formats strfmt.Registry) error {

	if swag.IsZero(m.AirlineNameAlias) { // not required
		return nil
	}

	if m.AirlineNameAlias != nil {
		if err := m.AirlineNameAlias.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("AirlineNameAlias")
			}
			return err
		}
	}

	return nil
}

func (m *ServiceDTOVersion2AviationAirline) validateUpdateTime(formats strfmt.Registry) error {

	if err := validate.Required("UpdateTime", "body", m.UpdateTime); err != nil {
		return err
	}

	return nil
}

func (m *ServiceDTOVersion2AviationAirline) validateVersionID(formats strfmt.Registry) error {

	if err := validate.Required("VersionID", "body", m.VersionID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceDTOVersion2AviationAirline) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceDTOVersion2AviationAirline) UnmarshalBinary(b []byte) error {
	var res ServiceDTOVersion2AviationAirline
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
